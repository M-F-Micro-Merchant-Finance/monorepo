{"abi":[{"type":"function","name":"burn","inputs":[{"name":"bottomTick","type":"int24","internalType":"int24"},{"name":"topTick","type":"int24","internalType":"int24"},{"name":"amount","type":"uint128","internalType":"uint128"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"amount0","type":"uint256","internalType":"uint256"},{"name":"amount1","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"collect","inputs":[{"name":"recipient","type":"address","internalType":"address"},{"name":"bottomTick","type":"int24","internalType":"int24"},{"name":"topTick","type":"int24","internalType":"int24"},{"name":"amount0Requested","type":"uint128","internalType":"uint128"},{"name":"amount1Requested","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"amount0","type":"uint128","internalType":"uint128"},{"name":"amount1","type":"uint128","internalType":"uint128"}],"stateMutability":"nonpayable"},{"type":"function","name":"communityVault","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"factory","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"fee","inputs":[],"outputs":[{"name":"currentFee","type":"uint16","internalType":"uint16"}],"stateMutability":"view"},{"type":"function","name":"flash","inputs":[{"name":"recipient","type":"address","internalType":"address"},{"name":"amount0","type":"uint256","internalType":"uint256"},{"name":"amount1","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getCommunityFeePending","inputs":[],"outputs":[{"name":"","type":"uint128","internalType":"uint128"},{"name":"","type":"uint128","internalType":"uint128"}],"stateMutability":"view"},{"type":"function","name":"getPluginFeePending","inputs":[],"outputs":[{"name":"","type":"uint128","internalType":"uint128"},{"name":"","type":"uint128","internalType":"uint128"}],"stateMutability":"view"},{"type":"function","name":"getReserves","inputs":[],"outputs":[{"name":"reserve0","type":"uint128","internalType":"uint128"},{"name":"reserve1","type":"uint128","internalType":"uint128"}],"stateMutability":"view"},{"type":"function","name":"globalState","inputs":[],"outputs":[{"name":"price","type":"uint160","internalType":"uint160"},{"name":"tick","type":"int24","internalType":"int24"},{"name":"lastFee","type":"uint16","internalType":"uint16"},{"name":"pluginConfig","type":"uint8","internalType":"uint8"},{"name":"communityFee","type":"uint16","internalType":"uint16"},{"name":"unlocked","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"initialize","inputs":[{"name":"initialPrice","type":"uint160","internalType":"uint160"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"isUnlocked","inputs":[],"outputs":[{"name":"unlocked","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"lastFeeTransferTimestamp","inputs":[],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"liquidity","inputs":[],"outputs":[{"name":"","type":"uint128","internalType":"uint128"}],"stateMutability":"view"},{"type":"function","name":"maxLiquidityPerTick","inputs":[],"outputs":[{"name":"","type":"uint128","internalType":"uint128"}],"stateMutability":"view"},{"type":"function","name":"mint","inputs":[{"name":"leftoversRecipient","type":"address","internalType":"address"},{"name":"recipient","type":"address","internalType":"address"},{"name":"bottomTick","type":"int24","internalType":"int24"},{"name":"topTick","type":"int24","internalType":"int24"},{"name":"liquidityDesired","type":"uint128","internalType":"uint128"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"amount0","type":"uint256","internalType":"uint256"},{"name":"amount1","type":"uint256","internalType":"uint256"},{"name":"liquidityActual","type":"uint128","internalType":"uint128"}],"stateMutability":"nonpayable"},{"type":"function","name":"nextTickGlobal","inputs":[],"outputs":[{"name":"","type":"int24","internalType":"int24"}],"stateMutability":"view"},{"type":"function","name":"plugin","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"positions","inputs":[{"name":"key","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"liquidity","type":"uint256","internalType":"uint256"},{"name":"innerFeeGrowth0Token","type":"uint256","internalType":"uint256"},{"name":"innerFeeGrowth1Token","type":"uint256","internalType":"uint256"},{"name":"fees0","type":"uint128","internalType":"uint128"},{"name":"fees1","type":"uint128","internalType":"uint128"}],"stateMutability":"view"},{"type":"function","name":"prevTickGlobal","inputs":[],"outputs":[{"name":"","type":"int24","internalType":"int24"}],"stateMutability":"view"},{"type":"function","name":"safelyGetStateOfAMM","inputs":[],"outputs":[{"name":"sqrtPrice","type":"uint160","internalType":"uint160"},{"name":"tick","type":"int24","internalType":"int24"},{"name":"lastFee","type":"uint16","internalType":"uint16"},{"name":"pluginConfig","type":"uint8","internalType":"uint8"},{"name":"activeLiquidity","type":"uint128","internalType":"uint128"},{"name":"nextTick","type":"int24","internalType":"int24"},{"name":"previousTick","type":"int24","internalType":"int24"}],"stateMutability":"view"},{"type":"function","name":"setCommunityFee","inputs":[{"name":"newCommunityFee","type":"uint16","internalType":"uint16"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setCommunityVault","inputs":[{"name":"newCommunityVault","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setFee","inputs":[{"name":"newFee","type":"uint16","internalType":"uint16"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setPlugin","inputs":[{"name":"newPluginAddress","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setPluginConfig","inputs":[{"name":"newConfig","type":"uint8","internalType":"uint8"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setTickSpacing","inputs":[{"name":"newTickSpacing","type":"int24","internalType":"int24"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"skim","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"swap","inputs":[{"name":"recipient","type":"address","internalType":"address"},{"name":"zeroToOne","type":"bool","internalType":"bool"},{"name":"amountRequired","type":"int256","internalType":"int256"},{"name":"limitSqrtPrice","type":"uint160","internalType":"uint160"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"amount0","type":"int256","internalType":"int256"},{"name":"amount1","type":"int256","internalType":"int256"}],"stateMutability":"nonpayable"},{"type":"function","name":"swapWithPaymentInAdvance","inputs":[{"name":"leftoversRecipient","type":"address","internalType":"address"},{"name":"recipient","type":"address","internalType":"address"},{"name":"zeroToOne","type":"bool","internalType":"bool"},{"name":"amountToSell","type":"int256","internalType":"int256"},{"name":"limitSqrtPrice","type":"uint160","internalType":"uint160"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"amount0","type":"int256","internalType":"int256"},{"name":"amount1","type":"int256","internalType":"int256"}],"stateMutability":"nonpayable"},{"type":"function","name":"sync","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"tickSpacing","inputs":[],"outputs":[{"name":"","type":"int24","internalType":"int24"}],"stateMutability":"view"},{"type":"function","name":"tickTable","inputs":[{"name":"","type":"int16","internalType":"int16"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"tickTreeRoot","inputs":[],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"tickTreeSecondLayer","inputs":[{"name":"","type":"int16","internalType":"int16"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"ticks","inputs":[{"name":"","type":"int24","internalType":"int24"}],"outputs":[{"name":"liquidityTotal","type":"uint256","internalType":"uint256"},{"name":"liquidityDelta","type":"int128","internalType":"int128"},{"name":"prevTick","type":"int24","internalType":"int24"},{"name":"nextTick","type":"int24","internalType":"int24"},{"name":"outerFeeGrowth0Token","type":"uint256","internalType":"uint256"},{"name":"outerFeeGrowth1Token","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"token0","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"token1","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"totalFeeGrowth0Token","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"totalFeeGrowth1Token","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"event","name":"Burn","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"bottomTick","type":"int24","indexed":true,"internalType":"int24"},{"name":"topTick","type":"int24","indexed":true,"internalType":"int24"},{"name":"liquidityAmount","type":"uint128","indexed":false,"internalType":"uint128"},{"name":"amount0","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"amount1","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"BurnFee","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"pluginFee","type":"uint24","indexed":false,"internalType":"uint24"}],"anonymous":false},{"type":"event","name":"Collect","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"recipient","type":"address","indexed":false,"internalType":"address"},{"name":"bottomTick","type":"int24","indexed":true,"internalType":"int24"},{"name":"topTick","type":"int24","indexed":true,"internalType":"int24"},{"name":"amount0","type":"uint128","indexed":false,"internalType":"uint128"},{"name":"amount1","type":"uint128","indexed":false,"internalType":"uint128"}],"anonymous":false},{"type":"event","name":"CommunityFee","inputs":[{"name":"communityFeeNew","type":"uint16","indexed":false,"internalType":"uint16"}],"anonymous":false},{"type":"event","name":"CommunityVault","inputs":[{"name":"newCommunityVault","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ExcessTokens","inputs":[{"name":"amount0","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"amount1","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Fee","inputs":[{"name":"fee","type":"uint16","indexed":false,"internalType":"uint16"}],"anonymous":false},{"type":"event","name":"Flash","inputs":[{"name":"sender","type":"address","indexed":true,"internalType":"address"},{"name":"recipient","type":"address","indexed":true,"internalType":"address"},{"name":"amount0","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"amount1","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"paid0","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"paid1","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Initialize","inputs":[{"name":"price","type":"uint160","indexed":false,"internalType":"uint160"},{"name":"tick","type":"int24","indexed":false,"internalType":"int24"}],"anonymous":false},{"type":"event","name":"Mint","inputs":[{"name":"sender","type":"address","indexed":false,"internalType":"address"},{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"bottomTick","type":"int24","indexed":true,"internalType":"int24"},{"name":"topTick","type":"int24","indexed":true,"internalType":"int24"},{"name":"liquidityAmount","type":"uint128","indexed":false,"internalType":"uint128"},{"name":"amount0","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"amount1","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Plugin","inputs":[{"name":"newPluginAddress","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"PluginConfig","inputs":[{"name":"newPluginConfig","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false},{"type":"event","name":"Skim","inputs":[{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"amount0","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"amount1","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Swap","inputs":[{"name":"sender","type":"address","indexed":true,"internalType":"address"},{"name":"recipient","type":"address","indexed":true,"internalType":"address"},{"name":"amount0","type":"int256","indexed":false,"internalType":"int256"},{"name":"amount1","type":"int256","indexed":false,"internalType":"int256"},{"name":"price","type":"uint160","indexed":false,"internalType":"uint160"},{"name":"liquidity","type":"uint128","indexed":false,"internalType":"uint128"},{"name":"tick","type":"int24","indexed":false,"internalType":"int24"}],"anonymous":false},{"type":"event","name":"SwapFee","inputs":[{"name":"sender","type":"address","indexed":true,"internalType":"address"},{"name":"overrideFee","type":"uint24","indexed":false,"internalType":"uint24"},{"name":"pluginFee","type":"uint24","indexed":false,"internalType":"uint24"}],"anonymous":false},{"type":"event","name":"TickSpacing","inputs":[{"name":"newTickSpacing","type":"int24","indexed":false,"internalType":"int24"}],"anonymous":false},{"type":"error","name":"alreadyInitialized","inputs":[]},{"type":"error","name":"arithmeticError","inputs":[]},{"type":"error","name":"bottomTickLowerThanMIN","inputs":[]},{"type":"error","name":"dynamicFeeActive","inputs":[]},{"type":"error","name":"dynamicFeeDisabled","inputs":[]},{"type":"error","name":"flashInsufficientPaid0","inputs":[]},{"type":"error","name":"flashInsufficientPaid1","inputs":[]},{"type":"error","name":"incorrectPluginFee","inputs":[]},{"type":"error","name":"insufficientInputAmount","inputs":[]},{"type":"error","name":"invalidAmountRequired","inputs":[]},{"type":"error","name":"invalidHookResponse","inputs":[{"name":"expectedSelector","type":"bytes4","internalType":"bytes4"}]},{"type":"error","name":"invalidLimitSqrtPrice","inputs":[]},{"type":"error","name":"invalidNewCommunityFee","inputs":[]},{"type":"error","name":"invalidNewTickSpacing","inputs":[]},{"type":"error","name":"liquidityAdd","inputs":[]},{"type":"error","name":"liquidityOverflow","inputs":[]},{"type":"error","name":"liquiditySub","inputs":[]},{"type":"error","name":"locked","inputs":[]},{"type":"error","name":"notAllowed","inputs":[]},{"type":"error","name":"notInitialized","inputs":[]},{"type":"error","name":"pluginIsNotConnected","inputs":[]},{"type":"error","name":"priceOutOfRange","inputs":[]},{"type":"error","name":"tickInvalidLinks","inputs":[]},{"type":"error","name":"tickIsNotInitialized","inputs":[]},{"type":"error","name":"tickIsNotSpaced","inputs":[]},{"type":"error","name":"tickOutOfRange","inputs":[]},{"type":"error","name":"topTickAboveMAX","inputs":[]},{"type":"error","name":"topTickLowerOrEqBottomTick","inputs":[]},{"type":"error","name":"transferFailed","inputs":[]},{"type":"error","name":"zeroAmountRequired","inputs":[]},{"type":"error","name":"zeroLiquidityActual","inputs":[]},{"type":"error","name":"zeroLiquidityDesired","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"burn(int24,int24,uint128,bytes)":"3b3bc70e","collect(address,int24,int24,uint128,uint128)":"4f1eb3d8","communityVault()":"53e97868","factory()":"c45a0155","fee()":"ddca3f43","flash(address,uint256,uint256,bytes)":"490e6cbc","getCommunityFeePending()":"7bd78025","getPluginFeePending()":"a1eded87","getReserves()":"0902f1ac","globalState()":"e76c01e4","initialize(uint160)":"f637731d","isUnlocked()":"8380edb7","lastFeeTransferTimestamp()":"77f8c3a9","liquidity()":"1a686502","maxLiquidityPerTick()":"70cf754a","mint(address,address,int24,int24,uint128,bytes)":"aafe29c0","nextTickGlobal()":"d5c35a7e","plugin()":"ef01df4f","positions(bytes32)":"514ea4bf","prevTickGlobal()":"050a4d21","safelyGetStateOfAMM()":"97ce1c51","setCommunityFee(uint16)":"240a875a","setCommunityVault(address)":"d8544cf3","setFee(uint16)":"8e005553","setPlugin(address)":"cc1f97cf","setPluginConfig(uint8)":"bca57f81","setTickSpacing(int24)":"f085a610","skim()":"1dd19cb4","swap(address,bool,int256,uint160,bytes)":"128acb08","swapWithPaymentInAdvance(address,address,bool,int256,uint160,bytes)":"9e4e0227","sync()":"fff6cae9","tickSpacing()":"d0c93a7c","tickTable(int16)":"c677e3e0","tickTreeRoot()":"578b9a36","tickTreeSecondLayer(int16)":"d8619037","ticks(int24)":"f30dba93","token0()":"0dfe1681","token1()":"d21220a7","totalFeeGrowth0Token()":"6378ae44","totalFeeGrowth1Token()":"ecdecf42"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"alreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"arithmeticError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"bottomTickLowerThanMIN\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"dynamicFeeActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"dynamicFeeDisabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"flashInsufficientPaid0\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"flashInsufficientPaid1\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"incorrectPluginFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"insufficientInputAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"invalidAmountRequired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"expectedSelector\",\"type\":\"bytes4\"}],\"name\":\"invalidHookResponse\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"invalidLimitSqrtPrice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"invalidNewCommunityFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"invalidNewTickSpacing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"liquidityAdd\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"liquidityOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"liquiditySub\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"locked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"notAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"notInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"pluginIsNotConnected\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"priceOutOfRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"tickInvalidLinks\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"tickIsNotInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"tickIsNotSpaced\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"tickOutOfRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"topTickAboveMAX\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"topTickLowerOrEqBottomTick\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"transferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"zeroAmountRequired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"zeroLiquidityActual\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"zeroLiquidityDesired\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"bottomTick\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"topTick\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidityAmount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"pluginFee\",\"type\":\"uint24\"}],\"name\":\"BurnFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"bottomTick\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"topTick\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"communityFeeNew\",\"type\":\"uint16\"}],\"name\":\"CommunityFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newCommunityVault\",\"type\":\"address\"}],\"name\":\"CommunityVault\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"ExcessTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"fee\",\"type\":\"uint16\"}],\"name\":\"Fee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"price\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"bottomTick\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"topTick\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidityAmount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPluginAddress\",\"type\":\"address\"}],\"name\":\"Plugin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"newPluginConfig\",\"type\":\"uint8\"}],\"name\":\"PluginConfig\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Skim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"price\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"overrideFee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"pluginFee\",\"type\":\"uint24\"}],\"name\":\"SwapFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"newTickSpacing\",\"type\":\"int24\"}],\"name\":\"TickSpacing\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"bottomTick\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"topTick\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"bottomTick\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"topTick\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"communityVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"currentFee\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCommunityFeePending\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPluginFeePending\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"reserve0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"reserve1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"globalState\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"price\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"lastFee\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"pluginConfig\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"communityFee\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"initialPrice\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isUnlocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastFeeTransferTimestamp\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"leftoversRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"bottomTick\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"topTick\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"liquidityDesired\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidityActual\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTickGlobal\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"plugin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"innerFeeGrowth0Token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"innerFeeGrowth1Token\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"fees0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"fees1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prevTickGlobal\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"safelyGetStateOfAMM\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPrice\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"lastFee\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"pluginConfig\",\"type\":\"uint8\"},{\"internalType\":\"uint128\",\"name\":\"activeLiquidity\",\"type\":\"uint128\"},{\"internalType\":\"int24\",\"name\":\"nextTick\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"previousTick\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"newCommunityFee\",\"type\":\"uint16\"}],\"name\":\"setCommunityFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCommunityVault\",\"type\":\"address\"}],\"name\":\"setCommunityVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"newFee\",\"type\":\"uint16\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPluginAddress\",\"type\":\"address\"}],\"name\":\"setPlugin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"newConfig\",\"type\":\"uint8\"}],\"name\":\"setPluginConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"newTickSpacing\",\"type\":\"int24\"}],\"name\":\"setTickSpacing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroToOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountRequired\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"limitSqrtPrice\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"leftoversRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroToOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountToSell\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"limitSqrtPrice\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swapWithPaymentInAdvance\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"\",\"type\":\"int16\"}],\"name\":\"tickTable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickTreeRoot\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"\",\"type\":\"int16\"}],\"name\":\"tickTreeSecondLayer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityTotal\",\"type\":\"uint256\"},{\"internalType\":\"int128\",\"name\":\"liquidityDelta\",\"type\":\"int128\"},{\"internalType\":\"int24\",\"name\":\"prevTick\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"nextTick\",\"type\":\"int24\"},{\"internalType\":\"uint256\",\"name\":\"outerFeeGrowth0Token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outerFeeGrowth1Token\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFeeGrowth0Token\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFeeGrowth1Token\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Ticks are stored as a doubly linked list. A three-level bitmap tree is used to search through the list\",\"errors\":{\"invalidHookResponse(bytes4)\":[{\"params\":{\"expectedSelector\":\"The expected selector\"}}]},\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"bottomTick\":\"The lower tick of the position\",\"liquidityAmount\":\"The amount of liquidity to remove\",\"owner\":\"The owner of the position for which liquidity is removed\",\"topTick\":\"The upper tick of the position\"}},\"BurnFee(address,uint24)\":{\"params\":{\"owner\":\"The owner of the position\",\"pluginFee\":\"The fee to be sent to the plugin\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"bottomTick\":\"The lower tick of the position\",\"owner\":\"The owner of the position for which fees are collected\",\"recipient\":\"The address that received fees\",\"topTick\":\"The upper tick of the position\"}},\"CommunityFee(uint16)\":{\"params\":{\"communityFeeNew\":\"The updated value of the community fee in thousandths (1e-3)\"}},\"CommunityVault(address)\":{\"params\":{\"newCommunityVault\":\"New community vault\"}},\"ExcessTokens(uint256,uint256)\":{\"details\":\"Fees after flash also will trigger this event due to mechanics of flash.\",\"params\":{\"amount0\":\"The excess of token0\",\"amount1\":\"The excess of token1\"}},\"Fee(uint16)\":{\"params\":{\"fee\":\"The current fee in hundredths of a bip, i.e. 1e-6\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swaps cannot be emitted by the pool before Initialize\",\"params\":{\"price\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"bottomTick\":\"The lower tick of the position\",\"liquidityAmount\":\"The amount of liquidity minted to the position range\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"topTick\":\"The upper tick of the position\"}},\"Plugin(address)\":{\"params\":{\"newPluginAddress\":\"New plugin address\"}},\"PluginConfig(uint8)\":{\"params\":{\"newPluginConfig\":\"New plugin config\"}},\"Skim(address,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0\",\"amount1\":\"The amount of token1\",\"to\":\"THe receiver of tokens (plugin)\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"price\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}},\"SwapFee(address,uint24,uint24)\":{\"params\":{\"overrideFee\":\"The fee to be applied to the trade\",\"pluginFee\":\"The fee to be sent to the plugin\",\"sender\":\"The address that initiated the swap \"}},\"TickSpacing(int24)\":{\"params\":{\"newTickSpacing\":\"The updated value of the new tick spacing\"}}},\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128,bytes)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"bottomTick\":\"The lower tick of the position for which to burn liquidity\",\"data\":\"Any data that should be passed through to the plugin\",\"topTick\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"bottomTick\":\"The lower tick of the position for which to collect fees\",\"recipient\":\"The address which should receive the fees collected\",\"topTick\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"fee()\":{\"details\":\"In case dynamic fee is enabled in the pool, this method will call the plugin to get the current fee. If the plugin implements complex fee logic, this method may return an incorrect value or revert. In this case, see the plugin implementation and related documentation.**important security note: caller should check reentrancy lock to prevent read-only reentrancy**\",\"returns\":{\"currentFee\":\"The current pool fee value in hundredths of a bip, i.e. 1e-6\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IAlgebraFlashCallback#algebraFlashCallbackAll excess tokens paid in the callback are distributed to currently in-range liquidity providers as an additional fee. If there are no in-range liquidity providers, the fee will be transferred to the first active provider in the future\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"getCommunityFeePending()\":{\"details\":\"Will be sent FEE_TRANSFER_FREQUENCY after communityFeeLastTimestamp\",\"returns\":{\"_0\":\"The amount of token0 that will be sent to the vault\",\"_1\":\"The amount of token1 that will be sent to the vault\"}},\"getPluginFeePending()\":{\"details\":\"Will be sent FEE_TRANSFER_FREQUENCY after feeLastTransferTimestamp\",\"returns\":{\"_0\":\"The amount of token0 that will be sent to the plugin\",\"_1\":\"The amount of token1 that will be sent to the plugin\"}},\"getReserves()\":{\"details\":\"If at any time the real balance is larger, the excess will be transferred to liquidity providers as additional fee. If the balance exceeds uint128, the excess will be sent to the communityVault.\",\"returns\":{\"reserve0\":\"The last known reserve of token0\",\"reserve1\":\"The last known reserve of token1\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 valueInitialization should be done in one transaction with pool creation to avoid front-running\",\"params\":{\"initialPrice\":\"The initial sqrt price of the pool as a Q64.96\"}},\"isUnlocked()\":{\"details\":\"can be used to prevent read-only reentrancy. This method just returns `globalState.unlocked` value\",\"returns\":{\"unlocked\":\"Reentrancy lock flag, true if the pool currently is unlocked, otherwise - false\"}},\"mint(address,address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IAlgebraMintCallback#algebraMintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on bottomTick, topTick, the amount of liquidity, and the current price.\",\"params\":{\"bottomTick\":\"The lower tick of the position in which to add liquidity\",\"data\":\"Any data that should be passed through to the callback\",\"leftoversRecipient\":\"The address which will receive potential surplus of paid tokens\",\"liquidityDesired\":\"The desired amount of liquidity to mint\",\"recipient\":\"The address for which the liquidity will be created\",\"topTick\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"liquidityActual\":\"The actual minted amount of liquidity\"}},\"positions(bytes32)\":{\"details\":\"**important security note: caller should check reentrancy lock to prevent read-only reentrancy**\",\"params\":{\"key\":\"The position's key is a packed concatenation of the owner address, bottomTick and topTick indexes\"},\"returns\":{\"fees0\":\"The computed amount of token0 owed to the position as of the last mint/burn/poke\",\"fees1\":\"The computed amount of token1 owed to the position as of the last mint/burn/poke\",\"innerFeeGrowth0Token\":\"Fee growth of token0 inside the tick range as of the last mint/burn/poke\",\"innerFeeGrowth1Token\":\"Fee growth of token1 inside the tick range as of the last mint/burn/poke\",\"liquidity\":\"The amount of liquidity in the position\"}},\"safelyGetStateOfAMM()\":{\"details\":\"safe from read-only reentrancy getter function\",\"returns\":{\"activeLiquidity\":\" The currently in-range liquidity available to the pool\",\"lastFee\":\"The current (last known) pool fee value in hundredths of a bip, i.e. 1e-6 (so '100' is '0.01%'). May be obsolete if using dynamic fee plugin\",\"nextTick\":\"The next initialized tick after current global tick\",\"pluginConfig\":\"The current plugin config as bitmap. Each bit is responsible for enabling/disabling the hooks, the last bit turns on/off dynamic fees logic\",\"previousTick\":\"The previous initialized tick before (or at) current global tick\",\"sqrtPrice\":\"The current price of the pool as a sqrt(dToken1/dToken0) Q64.96 value\",\"tick\":\"The current global tick of the pool. May not always be equal to SqrtTickMath.getTickAtSqrtRatio(price) if the price is on a tick boundary\"}},\"setCommunityFee(uint16)\":{\"params\":{\"newCommunityFee\":\"The new community fee percent in thousandths (1e-3)\"}},\"setCommunityVault(address)\":{\"details\":\"Community fee vault receives collected community fees. **accumulated but not yet sent to the vault community fees once will be sent to the `newCommunityVault` address**\",\"params\":{\"newCommunityVault\":\"The address of new community fee vault\"}},\"setFee(uint16)\":{\"params\":{\"newFee\":\"The new fee value\"}},\"setPlugin(address)\":{\"params\":{\"newPluginAddress\":\"The new plugin address\"}},\"setPluginConfig(uint8)\":{\"params\":{\"newConfig\":\"In the new configuration of the plugin, each bit of which is responsible for a particular hook.\"}},\"setTickSpacing(int24)\":{\"params\":{\"newTickSpacing\":\"The new tick spacing value\"}},\"skim()\":{\"details\":\"Only plugin can call this function\"},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IAlgebraSwapCallback#algebraSwapCallback\",\"params\":{\"amountRequired\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback. If using the Router it should contain SwapRouter#SwapCallbackData\",\"limitSqrtPrice\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"recipient\":\"The address to receive the output of the swap\",\"zeroToOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"swapWithPaymentInAdvance(address,address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IAlgebraSwapCallback#algebraSwapCallback caller must send tokens in callback before swap calculation the actually sent amount of tokens is used for further calculations\",\"params\":{\"amountToSell\":\"The amount of the swap, only positive (exact input) amount allowed\",\"data\":\"Any data to be passed through to the callback. If using the Router it should contain SwapRouter#SwapCallbackData\",\"leftoversRecipient\":\"The address which will receive potential surplus of paid tokens\",\"limitSqrtPrice\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"recipient\":\"The address to receive the output of the swap\",\"zeroToOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"sync()\":{\"details\":\"Only plugin can call this function\"}},\"stateVariables\":{\"tickTreeRoot\":{\"details\":\"Each bit corresponds to one node in the second layer of tick tree: '1' if node has at least one active bit. **important security note: caller should check reentrancy lock to prevent read-only reentrancy**\",\"return\":\"The root of tick search tree as bitmap\",\"returns\":{\"_0\":\"The root of tick search tree as bitmap\"}},\"tickTreeSecondLayer\":{\"details\":\"Each bit in node corresponds to one node in the leafs layer (`tickTable`) of tick tree: '1' if leaf has at least one active bit. **important security note: caller should check reentrancy lock to prevent read-only reentrancy**\",\"return\":\"The node of tick search tree second layer\",\"returns\":{\"_0\":\"The node of tick search tree second layer\"}}},\"title\":\"Algebra tick structure abstract contract\",\"version\":1},\"userdoc\":{\"errors\":{\"alreadyInitialized()\":[{\"notice\":\"Emitted if an attempt is made to initialize the pool twice\"}],\"arithmeticError()\":[{\"notice\":\"Emitted if arithmetic error occurred\"}],\"bottomTickLowerThanMIN()\":[{\"notice\":\"Emitted if the bottomTick param is lower than min allowed value\"}],\"dynamicFeeActive()\":[{\"notice\":\"Emitted if an attempt is made to manually change the fee value, but dynamic fee is enabled\"}],\"dynamicFeeDisabled()\":[{\"notice\":\"Emitted if an attempt is made by plugin to change the fee value, but dynamic fee is disabled\"}],\"flashInsufficientPaid0()\":[{\"notice\":\"Emitted if the pool received fewer tokens0 after flash than it should have\"}],\"flashInsufficientPaid1()\":[{\"notice\":\"Emitted if the pool received fewer tokens1 after flash than it should have\"}],\"incorrectPluginFee()\":[{\"notice\":\"Emitted if plugin fee param greater than fee/override fee\"}],\"insufficientInputAmount()\":[{\"notice\":\"Emitted if the pool received fewer tokens than it should have\"}],\"invalidAmountRequired()\":[{\"notice\":\"Emitted if invalid amount is passed as amountRequired to swap function\"}],\"invalidHookResponse(bytes4)\":[{\"notice\":\"Emitted if a plugin returns invalid selector after hook call\"}],\"invalidLimitSqrtPrice()\":[{\"notice\":\"Emitted if limitSqrtPrice param is incorrect\"}],\"invalidNewCommunityFee()\":[{\"notice\":\"Emitted if new community fee exceeds max allowed value\"}],\"invalidNewTickSpacing()\":[{\"notice\":\"Emitted if new tick spacing exceeds max allowed value\"}],\"liquidityAdd()\":[{\"notice\":\"Emitted if liquidity overflows\"}],\"liquidityOverflow()\":[{\"notice\":\"Emitted if the liquidity value associated with the tick exceeds MAX_LIQUIDITY_PER_TICK\"}],\"liquiditySub()\":[{\"notice\":\"Emitted if liquidity underflows\"}],\"locked()\":[{\"notice\":\"Emitted by the reentrancy guard\"}],\"notAllowed()\":[{\"notice\":\"Emitted if a method is called that is accessible only to the factory owner or dedicated role\"}],\"notInitialized()\":[{\"notice\":\"Emitted if an attempt is made to mint or swap in uninitialized pool\"}],\"pluginIsNotConnected()\":[{\"notice\":\"Emitted if an attempt is made to change the plugin configuration, but the plugin is not connected\"}],\"priceOutOfRange()\":[{\"notice\":\"Emitted if price is greater than the maximum or less than the minimum allowed value\"}],\"tickInvalidLinks()\":[{\"notice\":\"Emitted if there is an attempt to insert a new tick into the list of ticks with incorrect indexes of the previous and next ticks\"}],\"tickIsNotInitialized()\":[{\"notice\":\"Emitted if an attempt is made to interact with an uninitialized tick\"}],\"tickIsNotSpaced()\":[{\"notice\":\"Tick must be divisible by tickspacing\"}],\"tickOutOfRange()\":[{\"notice\":\"Emitted if tick is greater than the maximum or less than the minimum allowed value\"}],\"topTickAboveMAX()\":[{\"notice\":\"Emitted if the topTick param is greater than max allowed value\"}],\"topTickLowerOrEqBottomTick()\":[{\"notice\":\"Emitted if the topTick param not greater then the bottomTick param\"}],\"transferFailed()\":[{\"notice\":\"Emitted if token transfer failed internally\"}],\"zeroAmountRequired()\":[{\"notice\":\"Emitted if 0 is passed as amountRequired to swap function\"}],\"zeroLiquidityActual()\":[{\"notice\":\"Emitted if actual amount of liquidity is zero (due to insufficient amount of tokens received)\"}],\"zeroLiquidityDesired()\":[{\"notice\":\"Emitted if there was an attempt to mint zero liquidity\"}]},\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"BurnFee(address,uint24)\":{\"notice\":\"Emitted when a plugin fee is applied during a burn\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CommunityFee(uint16)\":{\"notice\":\"Emitted when the community fee is changed by the pool\"},\"CommunityVault(address)\":{\"notice\":\"Emitted when the community vault address changes\"},\"ExcessTokens(uint256,uint256)\":{\"notice\":\"Emitted when the pool has higher balances than expected. Any excess of tokens will be distributed between liquidity providers as fee.\"},\"Fee(uint16)\":{\"notice\":\"Emitted when the fee changes inside the pool\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"Plugin(address)\":{\"notice\":\"Emitted when the plugin address changes\"},\"PluginConfig(uint8)\":{\"notice\":\"Emitted when the plugin config changes\"},\"Skim(address,uint256,uint256)\":{\"notice\":\"Emitted when the plugin does skim the excess of tokens\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"},\"SwapFee(address,uint24,uint24)\":{\"notice\":\"Emitted by the pool after any swaps \"},\"TickSpacing(int24)\":{\"notice\":\"Emitted when the tick spacing changes\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128,bytes)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"communityVault()\":{\"notice\":\"The contract to which community fees are transferred\"},\"factory()\":{\"notice\":\"The Algebra factory contract, which must adhere to the IAlgebraFactory interface\"},\"fee()\":{\"notice\":\"The current pool fee value\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"getCommunityFeePending()\":{\"notice\":\"The amounts of token0 and token1 that will be sent to the vault\"},\"getPluginFeePending()\":{\"notice\":\"The amounts of token0 and token1 that will be sent to the plugin\"},\"getReserves()\":{\"notice\":\"The tracked token0 and token1 reserves of pool\"},\"globalState()\":{\"notice\":\"The globalState structure in the pool stores many values but requires only one slot and is exposed as a single method to save gas when accessed externally.\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"isUnlocked()\":{\"notice\":\"Allows to easily get current reentrancy lock status\"},\"lastFeeTransferTimestamp()\":{\"notice\":\"The timestamp of the last sending of tokens to vault/plugin\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/bottomTick/topTick position\"},\"nextTickGlobal()\":{\"notice\":\"The next initialized tick after current global tick\"},\"plugin()\":{\"notice\":\"Returns the address of currently used plugin\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"prevTickGlobal()\":{\"notice\":\"The previous initialized tick before (or at) current global tick\"},\"safelyGetStateOfAMM()\":{\"notice\":\"Safely get most important state values of Algebra Integral AMM\"},\"setCommunityFee(uint16)\":{\"notice\":\"Set the community's % share of the fees. Only factory owner or POOLS_ADMINISTRATOR_ROLE role\"},\"setCommunityVault(address)\":{\"notice\":\"Set new community fee vault address. Only factory owner or POOLS_ADMINISTRATOR_ROLE role\"},\"setFee(uint16)\":{\"notice\":\"Set new pool fee. Can be called by owner if dynamic fee is disabled. Called by the plugin if dynamic fee is enabled\"},\"setPlugin(address)\":{\"notice\":\"Set the new plugin address. Only factory owner or POOLS_ADMINISTRATOR_ROLE role\"},\"setPluginConfig(uint8)\":{\"notice\":\"Set new plugin config. Only factory owner or POOLS_ADMINISTRATOR_ROLE role\"},\"setTickSpacing(int24)\":{\"notice\":\"Set the new tick spacing values. Only factory owner or POOLS_ADMINISTRATOR_ROLE role\"},\"skim()\":{\"notice\":\"Forces balances to match reserves. Excessive tokens will be sent to msg.sender\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"swapWithPaymentInAdvance(address,address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0 with prepayment\"},\"sync()\":{\"notice\":\"Forces balances to match reserves. Excessive tokens will be distributed between active LPs\"},\"tickSpacing()\":{\"notice\":\"The current tick spacing\"},\"tickTable(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickTree for more information\"},\"tickTreeRoot()\":{\"notice\":\"The root of tick search tree\"},\"tickTreeSecondLayer(int16)\":{\"notice\":\"The second layer of tick search tree\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"},\"totalFeeGrowth0Token()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"totalFeeGrowth1Token()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"}},\"notice\":\"Encapsulates the logic of interaction with the data structure with ticks\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/Algebra/src/core/contracts/base/TickStructure.sol\":\"TickStructure\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@Cyfrin/foundry-devops/=lib/foundry-devops/src/\",\":@chainlink/contracts/=lib/mento-core/lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/\",\":@cryptoalgebra/abstract-plugin/=lib/plugins-monorepo/packages/abstract-plugin/\",\":@cryptoalgebra/default-plugin/=lib/plugins-monorepo/packages/default-plugin/\",\":@cryptoalgebra/dynamic-fee-plugin/=lib/plugins-monorepo/packages/dynamic-fee/\",\":@cryptoalgebra/farming-proxy-plugin/=lib/plugins-monorepo/packages/farming-proxy/\",\":@cryptoalgebra/integral-core/=lib/Algebra/src/core/\",\":@cryptoalgebra/integral-periphery/=lib/Algebra/src/periphery/\",\":@cryptoalgebra/volatility-oracle-plugin/=lib/plugins-monorepo/packages/volatility-oracle/\",\":@ds/=lib/mento-router/lib/multicall/lib/ds-test/src/\",\":@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/\",\":@mento/core/=lib/mento-core/\",\":@mento/periphery/=lib/mento-router/\",\":@mento/std/=lib/mento-std/\",\":@openzeppelin-v5/=lib/openzeppelin-contracts-v5/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@prb/test/=lib/mento-core/lib/prb-math/lib/prb-test/src/\",\":@self/=node_modules/@selfxyz/contracts/contracts/\",\":@std/=lib/mento-router/lib/multicall/lib/forge-std/src/\",\":@synthetixio/core-contracts/=lib/synthetix-v3/utils/core-contracts/\",\":@synthetixio/core-modules/=lib/synthetix-v3/utils/core-modules/\",\":@synthetixio/governance/=lib/synthetix-v3/protocol/governance/\",\":@synthetixio/oracle-manager/=lib/synthetix-v3/protocol/oracle-manager/\",\":@synthetixio/synthetix/=lib/synthetix-v3/protocol/synthetix/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":@uniswap/v4-periphery/=lib/v4-periphery/\",\":Algebra/=lib/Algebra/src/\",\":Roci-Smart-Contracts-v2/=lib/Roci-Smart-Contracts-v2/contracts/\",\":celo-foundry/=lib/mento-deployment/lib/celo-foundry/\",\":celo/=lib/mento-core/node_modules/@celo/\",\":chainlink-brownie-contracts/=lib/mento-core/lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":contracts/=lib/mento-core/contracts/\",\":ds-test/=lib/mento-router/lib/multicall/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std-next/=lib/mento-deployment/lib/forge-std-next/src/\",\":forge-std/=lib/forge-std/src/\",\":foundry-chainlink-toolkit/=lib/mento-core/lib/foundry-chainlink-toolkit/\",\":foundry-devops/=lib/foundry-devops/\",\":governance-tests/=lib/governance-tests/\",\":hackathon-demo/=lib/hackathon-demo/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts-v5/lib/halmos-cheatcodes/src/\",\":hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/\",\":mento-core-2.0.0/=lib/mento-deployment/lib/mento-core-2.0.0/contracts/\",\":mento-core-2.1.0/=lib/mento-deployment/lib/mento-core-2.1.0/contracts/\",\":mento-core-2.2.0/=lib/mento-deployment/lib/mento-core-2.2.0/contracts/\",\":mento-core-2.3.1/=lib/mento-deployment/lib/mento-core-2.3.1/contracts/\",\":mento-core-2.5.0/=lib/mento-deployment/lib/mento-core-2.5.0/contracts/\",\":mento-core-2.6.0-oz/=lib/mento-deployment/lib/mento-core-2.6.0/lib/openzeppelin-contracts-next/\",\":mento-core-2.6.0/=lib/mento-deployment/lib/mento-core-2.6.0/contracts/\",\":mento-core-2.6.2/=lib/mento-deployment/lib/mento-core-2.6.2/contracts/\",\":mento-core-2.6.3/=lib/mento-deployment/lib/mento-core-2.6.3/contracts/\",\":mento-core-2.6.4/=lib/mento-deployment/lib/mento-core-2.6.4/contracts/\",\":mento-core-2.6.5/=lib/mento-deployment/lib/mento-core-2.6.5/contracts/\",\":mento-core/=lib/mento-core/contracts/\",\":mento-deployment/=lib/mento-deployment/\",\":mento-router/=lib/mento-router/\",\":mento-std/=lib/mento-std/src/\",\":merkle-distributor/=lib/mento-deployment/lib/merkle-distributor/contracts/\",\":multicall/=lib/mento-router/lib/multicall/src/\",\":openzeppelin-contracts-next/=lib/mento-core/lib/openzeppelin-contracts-next/\",\":openzeppelin-contracts-upgradeable/=lib/mento-core/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v5/=lib/openzeppelin-contracts-v5/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-solidity/=lib/mento-core/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":oracle-v2-playground/=lib/oracle-v2-playground/\",\":permit2/=lib/v4-periphery/lib/permit2/\",\":plugins-monorepo/=lib/plugins-monorepo/\",\":prb-math/=lib/mento-core/lib/prb-math/src/\",\":prb-test/=lib/mento-core/lib/prb-math/lib/prb-test/src/\",\":prb/math/=lib/mento-core/lib/prb-math/src/\",\":redstone-oracles-monorepo/=lib/oracle-v2-playground/lib/\",\":redstone/=lib/oracle-v2-playground/lib/redstone-oracles-monorepo/packages/evm-connector/\",\":safe-contracts/=lib/mento-core/lib/safe-contracts/\",\":solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/\",\":synthetix-v3/=lib/synthetix-v3/\",\":v4-core/=lib/v4-periphery/lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/\"]},\"sources\":{\"lib/Algebra/src/core/contracts/base/AlgebraPoolBase.sol\":{\"keccak256\":\"0xe09235b26912939b30f5fff8652eb474d2c3a8c297853e8c4d0592ef18024f2d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3064b6be1dbe35e0d81098806289529c547fd6bb218c9f24bf8b41bff958aa0d\",\"dweb:/ipfs/QmefgTLHnSktYXVv1aqTJf4C79bFp5QjgrhNzSZaXi8UYw\"]},\"lib/Algebra/src/core/contracts/base/TickStructure.sol\":{\"keccak256\":\"0xf014e77a75a08ad0aae6c90c268823c9a270bfdf41aa9e934ee5fbaa1d57c55a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b5f40bf52953ab8095c66207dc1e31cf01253a31d6aa0747abcb4301d9ce751d\",\"dweb:/ipfs/QmXR5T4WEkNTsJt9cTmZKtNFBp5sTtG9GafvfVHcsXXSTp\"]},\"lib/Algebra/src/core/contracts/base/common/Timestamp.sol\":{\"keccak256\":\"0x28e2aac84d585bbe96ecb9d5cd124fa7cd5929584c70e43a7c96f6faa93022d3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d1347582a9d12cf03fc99ca899f7788f9223773be12c35aa2b8c2145d2e6a2c8\",\"dweb:/ipfs/QmYDrse9BuFsrwHxAZdghycY9F6XQfGDrm8ZifUfFnx2n3\"]},\"lib/Algebra/src/core/contracts/interfaces/IAlgebraFactory.sol\":{\"keccak256\":\"0xb87bef911483f054559e6567a5a958200131b5101fbcee1ed7daefcfc082faf7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://46c8f76cde3c16aed0446e98dc61ddb196288652f6a8735ed87d6e53a13b4142\",\"dweb:/ipfs/Qmd7omugWuFrjrCcwfeRQbeUS1FhqvhscTij4xtqCmjNKG\"]},\"lib/Algebra/src/core/contracts/interfaces/IAlgebraPool.sol\":{\"keccak256\":\"0x1d8bb94007c874be2640401aeed6219392c07e8b2e779fa24c618adc58bd7ae0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://55d37783d81c98cb58ed41e6d7283af5fb07261b676a833f632cd6d128fc2e04\",\"dweb:/ipfs/QmXiJ63fWeBfkfJkLzBv1zLDyCjn5shW44ugYv44CqtTca\"]},\"lib/Algebra/src/core/contracts/interfaces/IAlgebraPoolDeployer.sol\":{\"keccak256\":\"0xab62d83c8573717084e5ca9016a65c01fe2a950d855b23a4c3d4fdf74e72149a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7a8c9ca01ad16fc3c7db1199cb9c89b3ecd5323f713144853f700c601c76b794\",\"dweb:/ipfs/QmVSZLQsMqWAUZykbu8ES4vRN7N6M78XYa6Kg5UkKcwM1N\"]},\"lib/Algebra/src/core/contracts/interfaces/IERC20Minimal.sol\":{\"keccak256\":\"0xb93561508c9204c8701c870befac3c0a4c5894bbe026aba6529c1916711000d6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7af64f6d743bd0ee2aed7a3880b412035d9b78879deb4346a9d487d534b53ae4\",\"dweb:/ipfs/QmcAh9y22A4K8HkZsDZnBdQg5GuCrgMJkA1hqKxSCPkkDR\"]},\"lib/Algebra/src/core/contracts/interfaces/callback/IAlgebraFlashCallback.sol\":{\"keccak256\":\"0xef9af7fb2cad27710d5cef12f4b3996fc4f8b35ca32b4267b5381f5c3e43772d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ba3ec4e8e1572aec8fc881d450ef466af45cce3c118cfbc9f6cb5e7a429197c8\",\"dweb:/ipfs/QmRqBczpJyRkadpgaPYM2tvwXfSyP8A6NmjYCVJukYYiDf\"]},\"lib/Algebra/src/core/contracts/interfaces/callback/IAlgebraMintCallback.sol\":{\"keccak256\":\"0x3bf0f371a5ebe680e8e8f88962419eaf682d0a3c3ea87370809baa1e53110a5f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://297fef8debbd13b0f3b1ea1c54caa6281702c88b5276f4f505df129a418316b8\",\"dweb:/ipfs/QmQLpG1xwQUDsbfc55u3K7apb8a115UzpZcwaeURiAb9A9\"]},\"lib/Algebra/src/core/contracts/interfaces/callback/IAlgebraSwapCallback.sol\":{\"keccak256\":\"0xfc6f0afcc974c97155ac69a783b53d6a55d374f212a2bbe145500f1951cdd1e1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://19b5c6461f16f9de1879e0db464d49cbfc751650b41988bef7c207c1ddea62f8\",\"dweb:/ipfs/QmXXVfkeEMkZDGGB5C4cRjBdXyqYwCUwC6kZ3eUVfzoQSk\"]},\"lib/Algebra/src/core/contracts/interfaces/plugin/IAlgebraDynamicFeePlugin.sol\":{\"keccak256\":\"0x7f846684d408d0553bfc1aa5824e1feb348f24b4d193a9feebe6371b208bbc4c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://11721bbe2010c5f71899304152aa076ddbf653d11b063e6686aa62176ec4f589\",\"dweb:/ipfs/QmVvzbTFpRBj8tvTeVE5Sz5d5VydYwyaPuaCDHBR5EsPZw\"]},\"lib/Algebra/src/core/contracts/interfaces/plugin/IAlgebraPluginFactory.sol\":{\"keccak256\":\"0xf1cc5f09fc738bf41381fdf6864919c07965f25e715af6982df54605ce3a32fc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6fa8803e45159a6c404fd714321bc2ba0e010e76e3755594628f0c0bc9204182\",\"dweb:/ipfs/QmSAtmyH38VtzgycYTjGF3Y5aWG6DPjWD3JDjGVAn4fi2m\"]},\"lib/Algebra/src/core/contracts/interfaces/pool/IAlgebraPoolActions.sol\":{\"keccak256\":\"0x4f9b70282bac671383d001cffca1479dd64f507db84cdab16da886804c64a60c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b1bc8b774ab5027d97625c3ac01ee3f4bbdefcd012ff0bb0e4c9752096bd9562\",\"dweb:/ipfs/Qmcn5kGihMiZAMjwpY1f12nTSWMyrLqmXLvoifaqPtQYYo\"]},\"lib/Algebra/src/core/contracts/interfaces/pool/IAlgebraPoolErrors.sol\":{\"keccak256\":\"0x5ee2c56b4acc88f0c4649e39ebb0f8452381e13305bd297b53358cbe32c16069\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d25e93950215a98988cf189d2eb1cd0bc41c91d7f190b7e3c5cdfb92651dcfd5\",\"dweb:/ipfs/QmXkA7xk83yJtooAqJSRwUfR7V6iwjsiwbvEfATyasuiEM\"]},\"lib/Algebra/src/core/contracts/interfaces/pool/IAlgebraPoolEvents.sol\":{\"keccak256\":\"0xd6b18486bd0eaee545ad10115d33c527e5ba5ddff571120678e7db58ca00b726\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://470a64313758d0a26a6910c924eae39e5c4df6912c61e7239e0d930097f8512f\",\"dweb:/ipfs/QmY18B9x18hLCKQ3kAqjPhHzMvZxKrvNeUjPycKYodETaa\"]},\"lib/Algebra/src/core/contracts/interfaces/pool/IAlgebraPoolImmutables.sol\":{\"keccak256\":\"0x02d0fb9c64fba4c4dd0509bb9333825c801a0587d5b957c46f5cb1c610acc447\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8480784b2654829c0958b00aa3109249ce9088dbe94b6eadeaf8e9138829a764\",\"dweb:/ipfs/QmeFG5AsPUQfhMPtvYC3f9BhGu7sVm71wj2PgXDczaM7XP\"]},\"lib/Algebra/src/core/contracts/interfaces/pool/IAlgebraPoolPermissionedActions.sol\":{\"keccak256\":\"0xbd9faad7e7599c61c3141cfe2dd2e423ad4746a6119f047b0ae6d2eccb77bc9c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0df4bed6cf34a8c0f6b971fb71411373b4d204afda35eabe8555d8cbe67e291\",\"dweb:/ipfs/QmY6z3BseKy3tEvmLVjhL7VFrNJRuQgDXJXNAFBkBQ218A\"]},\"lib/Algebra/src/core/contracts/interfaces/pool/IAlgebraPoolState.sol\":{\"keccak256\":\"0xe061f0f9b5b16934173b1127efe13ccfe80465db17156d91c04e018b31e993fa\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c607033ec09828f4a8667e7fd2e562814ec689d5806d95b4a248f57e0eff9d38\",\"dweb:/ipfs/QmbGBxBMSzPKitHmRjYJwGGEZVsXDQB6emSsZ19hjy6LUz\"]},\"lib/Algebra/src/core/contracts/interfaces/vault/IAlgebraVaultFactory.sol\":{\"keccak256\":\"0xcdaae6cd6af79c4f344e673fe886a980ef5203b15b49f7a466c336c0152ce6ae\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fa2d3073bd4ca013e2769cf0fa5b68f32cec4fa53a6cc66adb59d86e6293cf15\",\"dweb:/ipfs/QmcwveJdf3JLAPfFZShijKTTxMTP4joDDuSuFboXBe711S\"]},\"lib/Algebra/src/core/contracts/libraries/Constants.sol\":{\"keccak256\":\"0x43f5e9ef4088f1301bc80f6446114ab1f3bdd58063fc6b107f8b1598b80e4915\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://496cb38eedc163919d59a6a196d2e566771e711b6e5e4a80a11efaa7b903c03a\",\"dweb:/ipfs/QmVf5trKkBGeXeuDsiuzXDGPVEpJRvaQsdL5Dr2HZ8ZePq\"]},\"lib/Algebra/src/core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x6e562130eac2d18d5527fc12115e83a3aa0955f6be89531b6d0d5977f0784cf7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5226566361b64a277a523430449d398434aa9956ec53ab96120bdb5eed0d36c\",\"dweb:/ipfs/QmdmE85FDGgaZBFb9WDamJQpvSx6BrpYUutudSzoRVmxMv\"]},\"lib/Algebra/src/core/contracts/libraries/LiquidityMath.sol\":{\"keccak256\":\"0x84da0c74625df15073beb35957e0247b8eb9c7a50a1b02fcbd6dd98a352f0f25\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7db3b0d6a71dc17898b4cfa68e60ea39158dd03145b3a53aa112ab4c1a81a9cf\",\"dweb:/ipfs/QmWgvbT8aeUVhrNVpCHHp4Ut4MXKnJBMGFq56orFeNAe6m\"]},\"lib/Algebra/src/core/contracts/libraries/Plugins.sol\":{\"keccak256\":\"0x354b1e099e9a47ce6fdc2ff4a4549249fa9c54434bf4dedb14fd4afe7d94d2d5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d9efe57e2239df29c7290fc1a27c8f0a6d8aa1f9e4c9271efadb8b29b29d7058\",\"dweb:/ipfs/QmbRJqfJR62Bx7XhN8qNBk85zjpWfyxSSiC5vHpxXnYMKb\"]},\"lib/Algebra/src/core/contracts/libraries/SafeCast.sol\":{\"keccak256\":\"0x1ce68c4b018476d007a0395bf2020cd9f8a5b69325a65465dd3d1f5877206d04\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7c2f240f89c058ea9288a6754a915597b78eabe60a5b3b3d921f02e9ca9cd105\",\"dweb:/ipfs/QmejQ2EatHjYWTRsXYojZ8VhYtLiqFGJ2juGj7y1sJPBc2\"]},\"lib/Algebra/src/core/contracts/libraries/SafeTransfer.sol\":{\"keccak256\":\"0x14e91c94e35c50efcd97e13609f686499c1dfa726ee0b3f6078fa4b99bde9a0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d9a7efa21d03180ded0e99d7ba05abd5c8ebedf2439a5a78091b679eadc4064\",\"dweb:/ipfs/QmVUZPhYPTb2yY9381AL242tfVsb3iWxmE2XwqcN9HG6eW\"]},\"lib/Algebra/src/core/contracts/libraries/TickManagement.sol\":{\"keccak256\":\"0x34b29f669bef011b96de606c4cd19881e436b3c9f722c493e6f255f913ed7d58\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c1edd75810055445440a0fb3e01731b2d5cd274c0476fcab6133ca8213a8d6a5\",\"dweb:/ipfs/QmfEqYPFdWM6MEMxSDWrk84CmbwCZQ55nF8dcucaTdJ2rb\"]},\"lib/Algebra/src/core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x2e7b1444ff69b60acac521b0d93998fb7775e0c4c5215ae31dec5bddafe1e336\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://778dc55bc1867dd899bcc93530c630f9baaff3134973f3cc5dfb62513130b790\",\"dweb:/ipfs/QmXMy8E7Y4G89nbkeha6ULUHNTeoC4t169yAYcWThFQVWC\"]},\"lib/Algebra/src/core/contracts/libraries/TickTree.sol\":{\"keccak256\":\"0x06ed72a30779498f8b01e059658a7fe731a7d7b2650b91b85a2ca2bb72f1d5f1\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8dd3f7cea7324b90e2272a1d2bbc575ee0895eea812a649b5a534544d2c94c06\",\"dweb:/ipfs/QmT3M9DVwT8qUemigB9JgXRfD7TwB8R9hMrVZGuCxCffo4\"]},\"lib/Algebra/src/core/contracts/libraries/TokenDeltaMath.sol\":{\"keccak256\":\"0xcf5faef8dad2a0ca0bce815f95fc416f20129bae96b8e47ce24b750869ad1000\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0aab6d459259a50151be1458d9da7271d39e94f74f3d20bd295613a82f168f9f\",\"dweb:/ipfs/QmcedxQjrx3JchnazwsMPEazwt55nrViVYnZL2yijvFbPB\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"alreadyInitialized"},{"inputs":[],"type":"error","name":"arithmeticError"},{"inputs":[],"type":"error","name":"bottomTickLowerThanMIN"},{"inputs":[],"type":"error","name":"dynamicFeeActive"},{"inputs":[],"type":"error","name":"dynamicFeeDisabled"},{"inputs":[],"type":"error","name":"flashInsufficientPaid0"},{"inputs":[],"type":"error","name":"flashInsufficientPaid1"},{"inputs":[],"type":"error","name":"incorrectPluginFee"},{"inputs":[],"type":"error","name":"insufficientInputAmount"},{"inputs":[],"type":"error","name":"invalidAmountRequired"},{"inputs":[{"internalType":"bytes4","name":"expectedSelector","type":"bytes4"}],"type":"error","name":"invalidHookResponse"},{"inputs":[],"type":"error","name":"invalidLimitSqrtPrice"},{"inputs":[],"type":"error","name":"invalidNewCommunityFee"},{"inputs":[],"type":"error","name":"invalidNewTickSpacing"},{"inputs":[],"type":"error","name":"liquidityAdd"},{"inputs":[],"type":"error","name":"liquidityOverflow"},{"inputs":[],"type":"error","name":"liquiditySub"},{"inputs":[],"type":"error","name":"locked"},{"inputs":[],"type":"error","name":"notAllowed"},{"inputs":[],"type":"error","name":"notInitialized"},{"inputs":[],"type":"error","name":"pluginIsNotConnected"},{"inputs":[],"type":"error","name":"priceOutOfRange"},{"inputs":[],"type":"error","name":"tickInvalidLinks"},{"inputs":[],"type":"error","name":"tickIsNotInitialized"},{"inputs":[],"type":"error","name":"tickIsNotSpaced"},{"inputs":[],"type":"error","name":"tickOutOfRange"},{"inputs":[],"type":"error","name":"topTickAboveMAX"},{"inputs":[],"type":"error","name":"topTickLowerOrEqBottomTick"},{"inputs":[],"type":"error","name":"transferFailed"},{"inputs":[],"type":"error","name":"zeroAmountRequired"},{"inputs":[],"type":"error","name":"zeroLiquidityActual"},{"inputs":[],"type":"error","name":"zeroLiquidityDesired"},{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"int24","name":"bottomTick","type":"int24","indexed":true},{"internalType":"int24","name":"topTick","type":"int24","indexed":true},{"internalType":"uint128","name":"liquidityAmount","type":"uint128","indexed":false},{"internalType":"uint256","name":"amount0","type":"uint256","indexed":false},{"internalType":"uint256","name":"amount1","type":"uint256","indexed":false}],"type":"event","name":"Burn","anonymous":false},{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"uint24","name":"pluginFee","type":"uint24","indexed":false}],"type":"event","name":"BurnFee","anonymous":false},{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"address","name":"recipient","type":"address","indexed":false},{"internalType":"int24","name":"bottomTick","type":"int24","indexed":true},{"internalType":"int24","name":"topTick","type":"int24","indexed":true},{"internalType":"uint128","name":"amount0","type":"uint128","indexed":false},{"internalType":"uint128","name":"amount1","type":"uint128","indexed":false}],"type":"event","name":"Collect","anonymous":false},{"inputs":[{"internalType":"uint16","name":"communityFeeNew","type":"uint16","indexed":false}],"type":"event","name":"CommunityFee","anonymous":false},{"inputs":[{"internalType":"address","name":"newCommunityVault","type":"address","indexed":false}],"type":"event","name":"CommunityVault","anonymous":false},{"inputs":[{"internalType":"uint256","name":"amount0","type":"uint256","indexed":false},{"internalType":"uint256","name":"amount1","type":"uint256","indexed":false}],"type":"event","name":"ExcessTokens","anonymous":false},{"inputs":[{"internalType":"uint16","name":"fee","type":"uint16","indexed":false}],"type":"event","name":"Fee","anonymous":false},{"inputs":[{"internalType":"address","name":"sender","type":"address","indexed":true},{"internalType":"address","name":"recipient","type":"address","indexed":true},{"internalType":"uint256","name":"amount0","type":"uint256","indexed":false},{"internalType":"uint256","name":"amount1","type":"uint256","indexed":false},{"internalType":"uint256","name":"paid0","type":"uint256","indexed":false},{"internalType":"uint256","name":"paid1","type":"uint256","indexed":false}],"type":"event","name":"Flash","anonymous":false},{"inputs":[{"internalType":"uint160","name":"price","type":"uint160","indexed":false},{"internalType":"int24","name":"tick","type":"int24","indexed":false}],"type":"event","name":"Initialize","anonymous":false},{"inputs":[{"internalType":"address","name":"sender","type":"address","indexed":false},{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"int24","name":"bottomTick","type":"int24","indexed":true},{"internalType":"int24","name":"topTick","type":"int24","indexed":true},{"internalType":"uint128","name":"liquidityAmount","type":"uint128","indexed":false},{"internalType":"uint256","name":"amount0","type":"uint256","indexed":false},{"internalType":"uint256","name":"amount1","type":"uint256","indexed":false}],"type":"event","name":"Mint","anonymous":false},{"inputs":[{"internalType":"address","name":"newPluginAddress","type":"address","indexed":false}],"type":"event","name":"Plugin","anonymous":false},{"inputs":[{"internalType":"uint8","name":"newPluginConfig","type":"uint8","indexed":false}],"type":"event","name":"PluginConfig","anonymous":false},{"inputs":[{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"amount0","type":"uint256","indexed":false},{"internalType":"uint256","name":"amount1","type":"uint256","indexed":false}],"type":"event","name":"Skim","anonymous":false},{"inputs":[{"internalType":"address","name":"sender","type":"address","indexed":true},{"internalType":"address","name":"recipient","type":"address","indexed":true},{"internalType":"int256","name":"amount0","type":"int256","indexed":false},{"internalType":"int256","name":"amount1","type":"int256","indexed":false},{"internalType":"uint160","name":"price","type":"uint160","indexed":false},{"internalType":"uint128","name":"liquidity","type":"uint128","indexed":false},{"internalType":"int24","name":"tick","type":"int24","indexed":false}],"type":"event","name":"Swap","anonymous":false},{"inputs":[{"internalType":"address","name":"sender","type":"address","indexed":true},{"internalType":"uint24","name":"overrideFee","type":"uint24","indexed":false},{"internalType":"uint24","name":"pluginFee","type":"uint24","indexed":false}],"type":"event","name":"SwapFee","anonymous":false},{"inputs":[{"internalType":"int24","name":"newTickSpacing","type":"int24","indexed":false}],"type":"event","name":"TickSpacing","anonymous":false},{"inputs":[{"internalType":"int24","name":"bottomTick","type":"int24"},{"internalType":"int24","name":"topTick","type":"int24"},{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"burn","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"bottomTick","type":"int24"},{"internalType":"int24","name":"topTick","type":"int24"},{"internalType":"uint128","name":"amount0Requested","type":"uint128"},{"internalType":"uint128","name":"amount1Requested","type":"uint128"}],"stateMutability":"nonpayable","type":"function","name":"collect","outputs":[{"internalType":"uint128","name":"amount0","type":"uint128"},{"internalType":"uint128","name":"amount1","type":"uint128"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"communityVault","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"fee","outputs":[{"internalType":"uint16","name":"currentFee","type":"uint16"}]},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"flash"},{"inputs":[],"stateMutability":"view","type":"function","name":"getCommunityFeePending","outputs":[{"internalType":"uint128","name":"","type":"uint128"},{"internalType":"uint128","name":"","type":"uint128"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getPluginFeePending","outputs":[{"internalType":"uint128","name":"","type":"uint128"},{"internalType":"uint128","name":"","type":"uint128"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getReserves","outputs":[{"internalType":"uint128","name":"reserve0","type":"uint128"},{"internalType":"uint128","name":"reserve1","type":"uint128"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"globalState","outputs":[{"internalType":"uint160","name":"price","type":"uint160"},{"internalType":"int24","name":"tick","type":"int24"},{"internalType":"uint16","name":"lastFee","type":"uint16"},{"internalType":"uint8","name":"pluginConfig","type":"uint8"},{"internalType":"uint16","name":"communityFee","type":"uint16"},{"internalType":"bool","name":"unlocked","type":"bool"}]},{"inputs":[{"internalType":"uint160","name":"initialPrice","type":"uint160"}],"stateMutability":"nonpayable","type":"function","name":"initialize"},{"inputs":[],"stateMutability":"view","type":"function","name":"isUnlocked","outputs":[{"internalType":"bool","name":"unlocked","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"lastFeeTransferTimestamp","outputs":[{"internalType":"uint32","name":"","type":"uint32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"liquidity","outputs":[{"internalType":"uint128","name":"","type":"uint128"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"maxLiquidityPerTick","outputs":[{"internalType":"uint128","name":"","type":"uint128"}]},{"inputs":[{"internalType":"address","name":"leftoversRecipient","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"bottomTick","type":"int24"},{"internalType":"int24","name":"topTick","type":"int24"},{"internalType":"uint128","name":"liquidityDesired","type":"uint128"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mint","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"uint128","name":"liquidityActual","type":"uint128"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"nextTickGlobal","outputs":[{"internalType":"int24","name":"","type":"int24"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"plugin","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"key","type":"bytes32"}],"stateMutability":"view","type":"function","name":"positions","outputs":[{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"innerFeeGrowth0Token","type":"uint256"},{"internalType":"uint256","name":"innerFeeGrowth1Token","type":"uint256"},{"internalType":"uint128","name":"fees0","type":"uint128"},{"internalType":"uint128","name":"fees1","type":"uint128"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"prevTickGlobal","outputs":[{"internalType":"int24","name":"","type":"int24"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"safelyGetStateOfAMM","outputs":[{"internalType":"uint160","name":"sqrtPrice","type":"uint160"},{"internalType":"int24","name":"tick","type":"int24"},{"internalType":"uint16","name":"lastFee","type":"uint16"},{"internalType":"uint8","name":"pluginConfig","type":"uint8"},{"internalType":"uint128","name":"activeLiquidity","type":"uint128"},{"internalType":"int24","name":"nextTick","type":"int24"},{"internalType":"int24","name":"previousTick","type":"int24"}]},{"inputs":[{"internalType":"uint16","name":"newCommunityFee","type":"uint16"}],"stateMutability":"nonpayable","type":"function","name":"setCommunityFee"},{"inputs":[{"internalType":"address","name":"newCommunityVault","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setCommunityVault"},{"inputs":[{"internalType":"uint16","name":"newFee","type":"uint16"}],"stateMutability":"nonpayable","type":"function","name":"setFee"},{"inputs":[{"internalType":"address","name":"newPluginAddress","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setPlugin"},{"inputs":[{"internalType":"uint8","name":"newConfig","type":"uint8"}],"stateMutability":"nonpayable","type":"function","name":"setPluginConfig"},{"inputs":[{"internalType":"int24","name":"newTickSpacing","type":"int24"}],"stateMutability":"nonpayable","type":"function","name":"setTickSpacing"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"skim"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bool","name":"zeroToOne","type":"bool"},{"internalType":"int256","name":"amountRequired","type":"int256"},{"internalType":"uint160","name":"limitSqrtPrice","type":"uint160"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"swap","outputs":[{"internalType":"int256","name":"amount0","type":"int256"},{"internalType":"int256","name":"amount1","type":"int256"}]},{"inputs":[{"internalType":"address","name":"leftoversRecipient","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bool","name":"zeroToOne","type":"bool"},{"internalType":"int256","name":"amountToSell","type":"int256"},{"internalType":"uint160","name":"limitSqrtPrice","type":"uint160"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"swapWithPaymentInAdvance","outputs":[{"internalType":"int256","name":"amount0","type":"int256"},{"internalType":"int256","name":"amount1","type":"int256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"sync"},{"inputs":[],"stateMutability":"view","type":"function","name":"tickSpacing","outputs":[{"internalType":"int24","name":"","type":"int24"}]},{"inputs":[{"internalType":"int16","name":"","type":"int16"}],"stateMutability":"view","type":"function","name":"tickTable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"tickTreeRoot","outputs":[{"internalType":"uint32","name":"","type":"uint32"}]},{"inputs":[{"internalType":"int16","name":"","type":"int16"}],"stateMutability":"view","type":"function","name":"tickTreeSecondLayer","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function","name":"ticks","outputs":[{"internalType":"uint256","name":"liquidityTotal","type":"uint256"},{"internalType":"int128","name":"liquidityDelta","type":"int128"},{"internalType":"int24","name":"prevTick","type":"int24"},{"internalType":"int24","name":"nextTick","type":"int24"},{"internalType":"uint256","name":"outerFeeGrowth0Token","type":"uint256"},{"internalType":"uint256","name":"outerFeeGrowth1Token","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"token0","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"token1","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"totalFeeGrowth0Token","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"totalFeeGrowth1Token","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"burn(int24,int24,uint128,bytes)":{"details":"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect","params":{"amount":"How much liquidity to burn","bottomTick":"The lower tick of the position for which to burn liquidity","data":"Any data that should be passed through to the plugin","topTick":"The upper tick of the position for which to burn liquidity"},"returns":{"amount0":"The amount of token0 sent to the recipient","amount1":"The amount of token1 sent to the recipient"}},"collect(address,int24,int24,uint128,uint128)":{"details":"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.","params":{"amount0Requested":"How much token0 should be withdrawn from the fees owed","amount1Requested":"How much token1 should be withdrawn from the fees owed","bottomTick":"The lower tick of the position for which to collect fees","recipient":"The address which should receive the fees collected","topTick":"The upper tick of the position for which to collect fees"},"returns":{"amount0":"The amount of fees collected in token0","amount1":"The amount of fees collected in token1"}},"fee()":{"details":"In case dynamic fee is enabled in the pool, this method will call the plugin to get the current fee. If the plugin implements complex fee logic, this method may return an incorrect value or revert. In this case, see the plugin implementation and related documentation.**important security note: caller should check reentrancy lock to prevent read-only reentrancy**","returns":{"currentFee":"The current pool fee value in hundredths of a bip, i.e. 1e-6"}},"flash(address,uint256,uint256,bytes)":{"details":"The caller of this method receives a callback in the form of IAlgebraFlashCallback#algebraFlashCallbackAll excess tokens paid in the callback are distributed to currently in-range liquidity providers as an additional fee. If there are no in-range liquidity providers, the fee will be transferred to the first active provider in the future","params":{"amount0":"The amount of token0 to send","amount1":"The amount of token1 to send","data":"Any data to be passed through to the callback","recipient":"The address which will receive the token0 and token1 amounts"}},"getCommunityFeePending()":{"details":"Will be sent FEE_TRANSFER_FREQUENCY after communityFeeLastTimestamp","returns":{"_0":"The amount of token0 that will be sent to the vault","_1":"The amount of token1 that will be sent to the vault"}},"getPluginFeePending()":{"details":"Will be sent FEE_TRANSFER_FREQUENCY after feeLastTransferTimestamp","returns":{"_0":"The amount of token0 that will be sent to the plugin","_1":"The amount of token1 that will be sent to the plugin"}},"getReserves()":{"details":"If at any time the real balance is larger, the excess will be transferred to liquidity providers as additional fee. If the balance exceeds uint128, the excess will be sent to the communityVault.","returns":{"reserve0":"The last known reserve of token0","reserve1":"The last known reserve of token1"}},"initialize(uint160)":{"details":"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 valueInitialization should be done in one transaction with pool creation to avoid front-running","params":{"initialPrice":"The initial sqrt price of the pool as a Q64.96"}},"isUnlocked()":{"details":"can be used to prevent read-only reentrancy. This method just returns `globalState.unlocked` value","returns":{"unlocked":"Reentrancy lock flag, true if the pool currently is unlocked, otherwise - false"}},"mint(address,address,int24,int24,uint128,bytes)":{"details":"The caller of this method receives a callback in the form of IAlgebraMintCallback#algebraMintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on bottomTick, topTick, the amount of liquidity, and the current price.","params":{"bottomTick":"The lower tick of the position in which to add liquidity","data":"Any data that should be passed through to the callback","leftoversRecipient":"The address which will receive potential surplus of paid tokens","liquidityDesired":"The desired amount of liquidity to mint","recipient":"The address for which the liquidity will be created","topTick":"The upper tick of the position in which to add liquidity"},"returns":{"amount0":"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback","amount1":"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback","liquidityActual":"The actual minted amount of liquidity"}},"positions(bytes32)":{"details":"**important security note: caller should check reentrancy lock to prevent read-only reentrancy**","params":{"key":"The position's key is a packed concatenation of the owner address, bottomTick and topTick indexes"},"returns":{"fees0":"The computed amount of token0 owed to the position as of the last mint/burn/poke","fees1":"The computed amount of token1 owed to the position as of the last mint/burn/poke","innerFeeGrowth0Token":"Fee growth of token0 inside the tick range as of the last mint/burn/poke","innerFeeGrowth1Token":"Fee growth of token1 inside the tick range as of the last mint/burn/poke","liquidity":"The amount of liquidity in the position"}},"safelyGetStateOfAMM()":{"details":"safe from read-only reentrancy getter function","returns":{"activeLiquidity":" The currently in-range liquidity available to the pool","lastFee":"The current (last known) pool fee value in hundredths of a bip, i.e. 1e-6 (so '100' is '0.01%'). May be obsolete if using dynamic fee plugin","nextTick":"The next initialized tick after current global tick","pluginConfig":"The current plugin config as bitmap. Each bit is responsible for enabling/disabling the hooks, the last bit turns on/off dynamic fees logic","previousTick":"The previous initialized tick before (or at) current global tick","sqrtPrice":"The current price of the pool as a sqrt(dToken1/dToken0) Q64.96 value","tick":"The current global tick of the pool. May not always be equal to SqrtTickMath.getTickAtSqrtRatio(price) if the price is on a tick boundary"}},"setCommunityFee(uint16)":{"params":{"newCommunityFee":"The new community fee percent in thousandths (1e-3)"}},"setCommunityVault(address)":{"details":"Community fee vault receives collected community fees. **accumulated but not yet sent to the vault community fees once will be sent to the `newCommunityVault` address**","params":{"newCommunityVault":"The address of new community fee vault"}},"setFee(uint16)":{"params":{"newFee":"The new fee value"}},"setPlugin(address)":{"params":{"newPluginAddress":"The new plugin address"}},"setPluginConfig(uint8)":{"params":{"newConfig":"In the new configuration of the plugin, each bit of which is responsible for a particular hook."}},"setTickSpacing(int24)":{"params":{"newTickSpacing":"The new tick spacing value"}},"skim()":{"details":"Only plugin can call this function"},"swap(address,bool,int256,uint160,bytes)":{"details":"The caller of this method receives a callback in the form of IAlgebraSwapCallback#algebraSwapCallback","params":{"amountRequired":"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)","data":"Any data to be passed through to the callback. If using the Router it should contain SwapRouter#SwapCallbackData","limitSqrtPrice":"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap","recipient":"The address to receive the output of the swap","zeroToOne":"The direction of the swap, true for token0 to token1, false for token1 to token0"},"returns":{"amount0":"The delta of the balance of token0 of the pool, exact when negative, minimum when positive","amount1":"The delta of the balance of token1 of the pool, exact when negative, minimum when positive"}},"swapWithPaymentInAdvance(address,address,bool,int256,uint160,bytes)":{"details":"The caller of this method receives a callback in the form of IAlgebraSwapCallback#algebraSwapCallback caller must send tokens in callback before swap calculation the actually sent amount of tokens is used for further calculations","params":{"amountToSell":"The amount of the swap, only positive (exact input) amount allowed","data":"Any data to be passed through to the callback. If using the Router it should contain SwapRouter#SwapCallbackData","leftoversRecipient":"The address which will receive potential surplus of paid tokens","limitSqrtPrice":"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap","recipient":"The address to receive the output of the swap","zeroToOne":"The direction of the swap, true for token0 to token1, false for token1 to token0"},"returns":{"amount0":"The delta of the balance of token0 of the pool, exact when negative, minimum when positive","amount1":"The delta of the balance of token1 of the pool, exact when negative, minimum when positive"}},"sync()":{"details":"Only plugin can call this function"}},"version":1},"userdoc":{"kind":"user","methods":{"burn(int24,int24,uint128,bytes)":{"notice":"Burn liquidity from the sender and account tokens owed for the liquidity to the position"},"collect(address,int24,int24,uint128,uint128)":{"notice":"Collects tokens owed to a position"},"communityVault()":{"notice":"The contract to which community fees are transferred"},"factory()":{"notice":"The Algebra factory contract, which must adhere to the IAlgebraFactory interface"},"fee()":{"notice":"The current pool fee value"},"flash(address,uint256,uint256,bytes)":{"notice":"Receive token0 and/or token1 and pay it back, plus a fee, in the callback"},"getCommunityFeePending()":{"notice":"The amounts of token0 and token1 that will be sent to the vault"},"getPluginFeePending()":{"notice":"The amounts of token0 and token1 that will be sent to the plugin"},"getReserves()":{"notice":"The tracked token0 and token1 reserves of pool"},"globalState()":{"notice":"The globalState structure in the pool stores many values but requires only one slot and is exposed as a single method to save gas when accessed externally."},"initialize(uint160)":{"notice":"Sets the initial price for the pool"},"isUnlocked()":{"notice":"Allows to easily get current reentrancy lock status"},"lastFeeTransferTimestamp()":{"notice":"The timestamp of the last sending of tokens to vault/plugin"},"liquidity()":{"notice":"The currently in range liquidity available to the pool"},"maxLiquidityPerTick()":{"notice":"The maximum amount of position liquidity that can use any tick in the range"},"mint(address,address,int24,int24,uint128,bytes)":{"notice":"Adds liquidity for the given recipient/bottomTick/topTick position"},"nextTickGlobal()":{"notice":"The next initialized tick after current global tick"},"plugin()":{"notice":"Returns the address of currently used plugin"},"positions(bytes32)":{"notice":"Returns the information about a position by the position's key"},"prevTickGlobal()":{"notice":"The previous initialized tick before (or at) current global tick"},"safelyGetStateOfAMM()":{"notice":"Safely get most important state values of Algebra Integral AMM"},"setCommunityFee(uint16)":{"notice":"Set the community's % share of the fees. Only factory owner or POOLS_ADMINISTRATOR_ROLE role"},"setCommunityVault(address)":{"notice":"Set new community fee vault address. Only factory owner or POOLS_ADMINISTRATOR_ROLE role"},"setFee(uint16)":{"notice":"Set new pool fee. Can be called by owner if dynamic fee is disabled. Called by the plugin if dynamic fee is enabled"},"setPlugin(address)":{"notice":"Set the new plugin address. Only factory owner or POOLS_ADMINISTRATOR_ROLE role"},"setPluginConfig(uint8)":{"notice":"Set new plugin config. Only factory owner or POOLS_ADMINISTRATOR_ROLE role"},"setTickSpacing(int24)":{"notice":"Set the new tick spacing values. Only factory owner or POOLS_ADMINISTRATOR_ROLE role"},"skim()":{"notice":"Forces balances to match reserves. Excessive tokens will be sent to msg.sender"},"swap(address,bool,int256,uint160,bytes)":{"notice":"Swap token0 for token1, or token1 for token0"},"swapWithPaymentInAdvance(address,address,bool,int256,uint160,bytes)":{"notice":"Swap token0 for token1, or token1 for token0 with prepayment"},"sync()":{"notice":"Forces balances to match reserves. Excessive tokens will be distributed between active LPs"},"tickSpacing()":{"notice":"The current tick spacing"},"tickTable(int16)":{"notice":"Returns 256 packed tick initialized boolean values. See TickTree for more information"},"tickTreeRoot()":{"notice":"The root of tick search tree"},"tickTreeSecondLayer(int16)":{"notice":"The second layer of tick search tree"},"ticks(int24)":{"notice":"Look up information about a specific tick in the pool"},"token0()":{"notice":"The first of the two tokens of the pool, sorted by address"},"token1()":{"notice":"The second of the two tokens of the pool, sorted by address"},"totalFeeGrowth0Token()":{"notice":"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"},"totalFeeGrowth1Token()":{"notice":"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"}},"version":1}},"settings":{"remappings":["@Cyfrin/foundry-devops/=lib/foundry-devops/src/","@chainlink/contracts/=lib/mento-core/lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/","@cryptoalgebra/abstract-plugin/=lib/plugins-monorepo/packages/abstract-plugin/","@cryptoalgebra/default-plugin/=lib/plugins-monorepo/packages/default-plugin/","@cryptoalgebra/dynamic-fee-plugin/=lib/plugins-monorepo/packages/dynamic-fee/","@cryptoalgebra/farming-proxy-plugin/=lib/plugins-monorepo/packages/farming-proxy/","@cryptoalgebra/integral-core/=lib/Algebra/src/core/","@cryptoalgebra/integral-periphery/=lib/Algebra/src/periphery/","@cryptoalgebra/volatility-oracle-plugin/=lib/plugins-monorepo/packages/volatility-oracle/","@ds/=lib/mento-router/lib/multicall/lib/ds-test/src/","@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/","@mento/core/=lib/mento-core/","@mento/periphery/=lib/mento-router/","@mento/std/=lib/mento-std/","@openzeppelin-v5/=lib/openzeppelin-contracts-v5/","@openzeppelin/=lib/openzeppelin-contracts/","@prb/test/=lib/mento-core/lib/prb-math/lib/prb-test/src/","@self/=node_modules/@selfxyz/contracts/contracts/","@std/=lib/mento-router/lib/multicall/lib/forge-std/src/","@synthetixio/core-contracts/=lib/synthetix-v3/utils/core-contracts/","@synthetixio/core-modules/=lib/synthetix-v3/utils/core-modules/","@synthetixio/governance/=lib/synthetix-v3/protocol/governance/","@synthetixio/oracle-manager/=lib/synthetix-v3/protocol/oracle-manager/","@synthetixio/synthetix/=lib/synthetix-v3/protocol/synthetix/","@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/","@uniswap/v4-periphery/=lib/v4-periphery/","Algebra/=lib/Algebra/src/","Roci-Smart-Contracts-v2/=lib/Roci-Smart-Contracts-v2/contracts/","celo-foundry/=lib/mento-deployment/lib/celo-foundry/","celo/=lib/mento-core/node_modules/@celo/","chainlink-brownie-contracts/=lib/mento-core/lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/","contracts/=lib/mento-core/contracts/","ds-test/=lib/mento-router/lib/multicall/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/","forge-std-next/=lib/mento-deployment/lib/forge-std-next/src/","forge-std/=lib/forge-std/src/","foundry-chainlink-toolkit/=lib/mento-core/lib/foundry-chainlink-toolkit/","foundry-devops/=lib/foundry-devops/","governance-tests/=lib/governance-tests/","hackathon-demo/=lib/hackathon-demo/","halmos-cheatcodes/=lib/openzeppelin-contracts-v5/lib/halmos-cheatcodes/src/","hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/","mento-core-2.0.0/=lib/mento-deployment/lib/mento-core-2.0.0/contracts/","mento-core-2.1.0/=lib/mento-deployment/lib/mento-core-2.1.0/contracts/","mento-core-2.2.0/=lib/mento-deployment/lib/mento-core-2.2.0/contracts/","mento-core-2.3.1/=lib/mento-deployment/lib/mento-core-2.3.1/contracts/","mento-core-2.5.0/=lib/mento-deployment/lib/mento-core-2.5.0/contracts/","mento-core-2.6.0-oz/=lib/mento-deployment/lib/mento-core-2.6.0/lib/openzeppelin-contracts-next/","mento-core-2.6.0/=lib/mento-deployment/lib/mento-core-2.6.0/contracts/","mento-core-2.6.2/=lib/mento-deployment/lib/mento-core-2.6.2/contracts/","mento-core-2.6.3/=lib/mento-deployment/lib/mento-core-2.6.3/contracts/","mento-core-2.6.4/=lib/mento-deployment/lib/mento-core-2.6.4/contracts/","mento-core-2.6.5/=lib/mento-deployment/lib/mento-core-2.6.5/contracts/","mento-core/=lib/mento-core/contracts/","mento-deployment/=lib/mento-deployment/","mento-router/=lib/mento-router/","mento-std/=lib/mento-std/src/","merkle-distributor/=lib/mento-deployment/lib/merkle-distributor/contracts/","multicall/=lib/mento-router/lib/multicall/src/","openzeppelin-contracts-next/=lib/mento-core/lib/openzeppelin-contracts-next/","openzeppelin-contracts-upgradeable/=lib/mento-core/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts-v5/=lib/openzeppelin-contracts-v5/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-solidity/=lib/mento-core/lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","oracle-v2-playground/=lib/oracle-v2-playground/","permit2/=lib/v4-periphery/lib/permit2/","plugins-monorepo/=lib/plugins-monorepo/","prb-math/=lib/mento-core/lib/prb-math/src/","prb-test/=lib/mento-core/lib/prb-math/lib/prb-test/src/","prb/math/=lib/mento-core/lib/prb-math/src/","redstone-oracles-monorepo/=lib/oracle-v2-playground/lib/","redstone/=lib/oracle-v2-playground/lib/redstone-oracles-monorepo/packages/evm-connector/","safe-contracts/=lib/mento-core/lib/safe-contracts/","solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/","synthetix-v3/=lib/synthetix-v3/","v4-core/=lib/v4-periphery/lib/v4-core/src/","v4-periphery/=lib/v4-periphery/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"none","appendCBOR":false},"compilationTarget":{"lib/Algebra/src/core/contracts/base/TickStructure.sol":"TickStructure"},"evmVersion":"shanghai","libraries":{}},"sources":{"lib/Algebra/src/core/contracts/base/AlgebraPoolBase.sol":{"keccak256":"0xe09235b26912939b30f5fff8652eb474d2c3a8c297853e8c4d0592ef18024f2d","urls":["bzz-raw://3064b6be1dbe35e0d81098806289529c547fd6bb218c9f24bf8b41bff958aa0d","dweb:/ipfs/QmefgTLHnSktYXVv1aqTJf4C79bFp5QjgrhNzSZaXi8UYw"],"license":"BUSL-1.1"},"lib/Algebra/src/core/contracts/base/TickStructure.sol":{"keccak256":"0xf014e77a75a08ad0aae6c90c268823c9a270bfdf41aa9e934ee5fbaa1d57c55a","urls":["bzz-raw://b5f40bf52953ab8095c66207dc1e31cf01253a31d6aa0747abcb4301d9ce751d","dweb:/ipfs/QmXR5T4WEkNTsJt9cTmZKtNFBp5sTtG9GafvfVHcsXXSTp"],"license":"BUSL-1.1"},"lib/Algebra/src/core/contracts/base/common/Timestamp.sol":{"keccak256":"0x28e2aac84d585bbe96ecb9d5cd124fa7cd5929584c70e43a7c96f6faa93022d3","urls":["bzz-raw://d1347582a9d12cf03fc99ca899f7788f9223773be12c35aa2b8c2145d2e6a2c8","dweb:/ipfs/QmYDrse9BuFsrwHxAZdghycY9F6XQfGDrm8ZifUfFnx2n3"],"license":"GPL-2.0-or-later"},"lib/Algebra/src/core/contracts/interfaces/IAlgebraFactory.sol":{"keccak256":"0xb87bef911483f054559e6567a5a958200131b5101fbcee1ed7daefcfc082faf7","urls":["bzz-raw://46c8f76cde3c16aed0446e98dc61ddb196288652f6a8735ed87d6e53a13b4142","dweb:/ipfs/Qmd7omugWuFrjrCcwfeRQbeUS1FhqvhscTij4xtqCmjNKG"],"license":"GPL-2.0-or-later"},"lib/Algebra/src/core/contracts/interfaces/IAlgebraPool.sol":{"keccak256":"0x1d8bb94007c874be2640401aeed6219392c07e8b2e779fa24c618adc58bd7ae0","urls":["bzz-raw://55d37783d81c98cb58ed41e6d7283af5fb07261b676a833f632cd6d128fc2e04","dweb:/ipfs/QmXiJ63fWeBfkfJkLzBv1zLDyCjn5shW44ugYv44CqtTca"],"license":"GPL-2.0-or-later"},"lib/Algebra/src/core/contracts/interfaces/IAlgebraPoolDeployer.sol":{"keccak256":"0xab62d83c8573717084e5ca9016a65c01fe2a950d855b23a4c3d4fdf74e72149a","urls":["bzz-raw://7a8c9ca01ad16fc3c7db1199cb9c89b3ecd5323f713144853f700c601c76b794","dweb:/ipfs/QmVSZLQsMqWAUZykbu8ES4vRN7N6M78XYa6Kg5UkKcwM1N"],"license":"GPL-2.0-or-later"},"lib/Algebra/src/core/contracts/interfaces/IERC20Minimal.sol":{"keccak256":"0xb93561508c9204c8701c870befac3c0a4c5894bbe026aba6529c1916711000d6","urls":["bzz-raw://7af64f6d743bd0ee2aed7a3880b412035d9b78879deb4346a9d487d534b53ae4","dweb:/ipfs/QmcAh9y22A4K8HkZsDZnBdQg5GuCrgMJkA1hqKxSCPkkDR"],"license":"GPL-2.0-or-later"},"lib/Algebra/src/core/contracts/interfaces/callback/IAlgebraFlashCallback.sol":{"keccak256":"0xef9af7fb2cad27710d5cef12f4b3996fc4f8b35ca32b4267b5381f5c3e43772d","urls":["bzz-raw://ba3ec4e8e1572aec8fc881d450ef466af45cce3c118cfbc9f6cb5e7a429197c8","dweb:/ipfs/QmRqBczpJyRkadpgaPYM2tvwXfSyP8A6NmjYCVJukYYiDf"],"license":"GPL-2.0-or-later"},"lib/Algebra/src/core/contracts/interfaces/callback/IAlgebraMintCallback.sol":{"keccak256":"0x3bf0f371a5ebe680e8e8f88962419eaf682d0a3c3ea87370809baa1e53110a5f","urls":["bzz-raw://297fef8debbd13b0f3b1ea1c54caa6281702c88b5276f4f505df129a418316b8","dweb:/ipfs/QmQLpG1xwQUDsbfc55u3K7apb8a115UzpZcwaeURiAb9A9"],"license":"GPL-2.0-or-later"},"lib/Algebra/src/core/contracts/interfaces/callback/IAlgebraSwapCallback.sol":{"keccak256":"0xfc6f0afcc974c97155ac69a783b53d6a55d374f212a2bbe145500f1951cdd1e1","urls":["bzz-raw://19b5c6461f16f9de1879e0db464d49cbfc751650b41988bef7c207c1ddea62f8","dweb:/ipfs/QmXXVfkeEMkZDGGB5C4cRjBdXyqYwCUwC6kZ3eUVfzoQSk"],"license":"GPL-2.0-or-later"},"lib/Algebra/src/core/contracts/interfaces/plugin/IAlgebraDynamicFeePlugin.sol":{"keccak256":"0x7f846684d408d0553bfc1aa5824e1feb348f24b4d193a9feebe6371b208bbc4c","urls":["bzz-raw://11721bbe2010c5f71899304152aa076ddbf653d11b063e6686aa62176ec4f589","dweb:/ipfs/QmVvzbTFpRBj8tvTeVE5Sz5d5VydYwyaPuaCDHBR5EsPZw"],"license":"GPL-2.0-or-later"},"lib/Algebra/src/core/contracts/interfaces/plugin/IAlgebraPluginFactory.sol":{"keccak256":"0xf1cc5f09fc738bf41381fdf6864919c07965f25e715af6982df54605ce3a32fc","urls":["bzz-raw://6fa8803e45159a6c404fd714321bc2ba0e010e76e3755594628f0c0bc9204182","dweb:/ipfs/QmSAtmyH38VtzgycYTjGF3Y5aWG6DPjWD3JDjGVAn4fi2m"],"license":"GPL-2.0-or-later"},"lib/Algebra/src/core/contracts/interfaces/pool/IAlgebraPoolActions.sol":{"keccak256":"0x4f9b70282bac671383d001cffca1479dd64f507db84cdab16da886804c64a60c","urls":["bzz-raw://b1bc8b774ab5027d97625c3ac01ee3f4bbdefcd012ff0bb0e4c9752096bd9562","dweb:/ipfs/Qmcn5kGihMiZAMjwpY1f12nTSWMyrLqmXLvoifaqPtQYYo"],"license":"GPL-2.0-or-later"},"lib/Algebra/src/core/contracts/interfaces/pool/IAlgebraPoolErrors.sol":{"keccak256":"0x5ee2c56b4acc88f0c4649e39ebb0f8452381e13305bd297b53358cbe32c16069","urls":["bzz-raw://d25e93950215a98988cf189d2eb1cd0bc41c91d7f190b7e3c5cdfb92651dcfd5","dweb:/ipfs/QmXkA7xk83yJtooAqJSRwUfR7V6iwjsiwbvEfATyasuiEM"],"license":"GPL-2.0-or-later"},"lib/Algebra/src/core/contracts/interfaces/pool/IAlgebraPoolEvents.sol":{"keccak256":"0xd6b18486bd0eaee545ad10115d33c527e5ba5ddff571120678e7db58ca00b726","urls":["bzz-raw://470a64313758d0a26a6910c924eae39e5c4df6912c61e7239e0d930097f8512f","dweb:/ipfs/QmY18B9x18hLCKQ3kAqjPhHzMvZxKrvNeUjPycKYodETaa"],"license":"GPL-2.0-or-later"},"lib/Algebra/src/core/contracts/interfaces/pool/IAlgebraPoolImmutables.sol":{"keccak256":"0x02d0fb9c64fba4c4dd0509bb9333825c801a0587d5b957c46f5cb1c610acc447","urls":["bzz-raw://8480784b2654829c0958b00aa3109249ce9088dbe94b6eadeaf8e9138829a764","dweb:/ipfs/QmeFG5AsPUQfhMPtvYC3f9BhGu7sVm71wj2PgXDczaM7XP"],"license":"GPL-2.0-or-later"},"lib/Algebra/src/core/contracts/interfaces/pool/IAlgebraPoolPermissionedActions.sol":{"keccak256":"0xbd9faad7e7599c61c3141cfe2dd2e423ad4746a6119f047b0ae6d2eccb77bc9c","urls":["bzz-raw://d0df4bed6cf34a8c0f6b971fb71411373b4d204afda35eabe8555d8cbe67e291","dweb:/ipfs/QmY6z3BseKy3tEvmLVjhL7VFrNJRuQgDXJXNAFBkBQ218A"],"license":"GPL-2.0-or-later"},"lib/Algebra/src/core/contracts/interfaces/pool/IAlgebraPoolState.sol":{"keccak256":"0xe061f0f9b5b16934173b1127efe13ccfe80465db17156d91c04e018b31e993fa","urls":["bzz-raw://c607033ec09828f4a8667e7fd2e562814ec689d5806d95b4a248f57e0eff9d38","dweb:/ipfs/QmbGBxBMSzPKitHmRjYJwGGEZVsXDQB6emSsZ19hjy6LUz"],"license":"GPL-2.0-or-later"},"lib/Algebra/src/core/contracts/interfaces/vault/IAlgebraVaultFactory.sol":{"keccak256":"0xcdaae6cd6af79c4f344e673fe886a980ef5203b15b49f7a466c336c0152ce6ae","urls":["bzz-raw://fa2d3073bd4ca013e2769cf0fa5b68f32cec4fa53a6cc66adb59d86e6293cf15","dweb:/ipfs/QmcwveJdf3JLAPfFZShijKTTxMTP4joDDuSuFboXBe711S"],"license":"GPL-2.0-or-later"},"lib/Algebra/src/core/contracts/libraries/Constants.sol":{"keccak256":"0x43f5e9ef4088f1301bc80f6446114ab1f3bdd58063fc6b107f8b1598b80e4915","urls":["bzz-raw://496cb38eedc163919d59a6a196d2e566771e711b6e5e4a80a11efaa7b903c03a","dweb:/ipfs/QmVf5trKkBGeXeuDsiuzXDGPVEpJRvaQsdL5Dr2HZ8ZePq"],"license":"GPL-2.0-or-later"},"lib/Algebra/src/core/contracts/libraries/FullMath.sol":{"keccak256":"0x6e562130eac2d18d5527fc12115e83a3aa0955f6be89531b6d0d5977f0784cf7","urls":["bzz-raw://e5226566361b64a277a523430449d398434aa9956ec53ab96120bdb5eed0d36c","dweb:/ipfs/QmdmE85FDGgaZBFb9WDamJQpvSx6BrpYUutudSzoRVmxMv"],"license":"MIT"},"lib/Algebra/src/core/contracts/libraries/LiquidityMath.sol":{"keccak256":"0x84da0c74625df15073beb35957e0247b8eb9c7a50a1b02fcbd6dd98a352f0f25","urls":["bzz-raw://7db3b0d6a71dc17898b4cfa68e60ea39158dd03145b3a53aa112ab4c1a81a9cf","dweb:/ipfs/QmWgvbT8aeUVhrNVpCHHp4Ut4MXKnJBMGFq56orFeNAe6m"],"license":"GPL-2.0-or-later"},"lib/Algebra/src/core/contracts/libraries/Plugins.sol":{"keccak256":"0x354b1e099e9a47ce6fdc2ff4a4549249fa9c54434bf4dedb14fd4afe7d94d2d5","urls":["bzz-raw://d9efe57e2239df29c7290fc1a27c8f0a6d8aa1f9e4c9271efadb8b29b29d7058","dweb:/ipfs/QmbRJqfJR62Bx7XhN8qNBk85zjpWfyxSSiC5vHpxXnYMKb"],"license":"GPL-2.0-or-later"},"lib/Algebra/src/core/contracts/libraries/SafeCast.sol":{"keccak256":"0x1ce68c4b018476d007a0395bf2020cd9f8a5b69325a65465dd3d1f5877206d04","urls":["bzz-raw://7c2f240f89c058ea9288a6754a915597b78eabe60a5b3b3d921f02e9ca9cd105","dweb:/ipfs/QmejQ2EatHjYWTRsXYojZ8VhYtLiqFGJ2juGj7y1sJPBc2"],"license":"GPL-2.0-or-later"},"lib/Algebra/src/core/contracts/libraries/SafeTransfer.sol":{"keccak256":"0x14e91c94e35c50efcd97e13609f686499c1dfa726ee0b3f6078fa4b99bde9a0a","urls":["bzz-raw://1d9a7efa21d03180ded0e99d7ba05abd5c8ebedf2439a5a78091b679eadc4064","dweb:/ipfs/QmVUZPhYPTb2yY9381AL242tfVsb3iWxmE2XwqcN9HG6eW"],"license":"MIT"},"lib/Algebra/src/core/contracts/libraries/TickManagement.sol":{"keccak256":"0x34b29f669bef011b96de606c4cd19881e436b3c9f722c493e6f255f913ed7d58","urls":["bzz-raw://c1edd75810055445440a0fb3e01731b2d5cd274c0476fcab6133ca8213a8d6a5","dweb:/ipfs/QmfEqYPFdWM6MEMxSDWrk84CmbwCZQ55nF8dcucaTdJ2rb"],"license":"BUSL-1.1"},"lib/Algebra/src/core/contracts/libraries/TickMath.sol":{"keccak256":"0x2e7b1444ff69b60acac521b0d93998fb7775e0c4c5215ae31dec5bddafe1e336","urls":["bzz-raw://778dc55bc1867dd899bcc93530c630f9baaff3134973f3cc5dfb62513130b790","dweb:/ipfs/QmXMy8E7Y4G89nbkeha6ULUHNTeoC4t169yAYcWThFQVWC"],"license":"GPL-2.0-or-later"},"lib/Algebra/src/core/contracts/libraries/TickTree.sol":{"keccak256":"0x06ed72a30779498f8b01e059658a7fe731a7d7b2650b91b85a2ca2bb72f1d5f1","urls":["bzz-raw://8dd3f7cea7324b90e2272a1d2bbc575ee0895eea812a649b5a534544d2c94c06","dweb:/ipfs/QmT3M9DVwT8qUemigB9JgXRfD7TwB8R9hMrVZGuCxCffo4"],"license":"BUSL-1.1"},"lib/Algebra/src/core/contracts/libraries/TokenDeltaMath.sol":{"keccak256":"0xcf5faef8dad2a0ca0bce815f95fc416f20129bae96b8e47ce24b750869ad1000","urls":["bzz-raw://0aab6d459259a50151be1458d9da7271d39e94f74f3d20bd295613a82f168f9f","dweb:/ipfs/QmcedxQjrx3JchnazwsMPEazwt55nrViVYnZL2yijvFbPB"],"license":"BUSL-1.1"}},"version":1},"id":9}