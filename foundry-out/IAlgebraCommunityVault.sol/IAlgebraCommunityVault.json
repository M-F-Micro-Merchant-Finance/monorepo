{"abi":[{"type":"function","name":"acceptAlgebraFeeChangeProposal","inputs":[{"name":"newAlgebraFee","type":"uint16","internalType":"uint16"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"acceptAlgebraFeeManagerRole","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"cancelAlgebraFeeChangeProposal","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"changeAlgebraFeeReceiver","inputs":[{"name":"newAlgebraFeeReceiver","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"changeCommunityFeeReceiver","inputs":[{"name":"newCommunityFeeReceiver","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"proposeAlgebraFeeChange","inputs":[{"name":"newAlgebraFee","type":"uint16","internalType":"uint16"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transferAlgebraFeeManagerRole","inputs":[{"name":"_newAlgebraFeeManager","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"withdraw","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"withdrawTokens","inputs":[{"name":"params","type":"tuple[]","internalType":"struct IAlgebraCommunityVault.WithdrawTokensParams[]","components":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"AlgebraFee","inputs":[{"name":"newAlgebraFee","type":"uint16","indexed":false,"internalType":"uint16"}],"anonymous":false},{"type":"event","name":"AlgebraFeeManager","inputs":[{"name":"newAlgebraFeeManager","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"AlgebraFeeProposal","inputs":[{"name":"proposedNewAlgebraFee","type":"uint16","indexed":false,"internalType":"uint16"}],"anonymous":false},{"type":"event","name":"AlgebraFeeReceiver","inputs":[{"name":"newAlgebraFeeReceiver","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"AlgebraTokensWithdrawal","inputs":[{"name":"token","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"CancelAlgebraFeeProposal","inputs":[],"anonymous":false},{"type":"event","name":"CommunityFeeReceiver","inputs":[{"name":"newCommunityFeeReceiver","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"PendingAlgebraFeeManager","inputs":[{"name":"pendingAlgebraFeeManager","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"TokensWithdrawal","inputs":[{"name":"token","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"acceptAlgebraFeeChangeProposal(uint16)":"ff3c43e1","acceptAlgebraFeeManagerRole()":"ad6129ac","cancelAlgebraFeeChangeProposal()":"d17bc783","changeAlgebraFeeReceiver(address)":"48a50fcf","changeCommunityFeeReceiver(address)":"b5f680ae","proposeAlgebraFeeChange(uint16)":"d9fb4353","transferAlgebraFeeManagerRole(address)":"50eea0c8","withdraw(address,uint256)":"f3fef3a3","withdrawTokens((address,uint256)[])":"dfadc794"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"newAlgebraFee\",\"type\":\"uint16\"}],\"name\":\"AlgebraFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAlgebraFeeManager\",\"type\":\"address\"}],\"name\":\"AlgebraFeeManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"proposedNewAlgebraFee\",\"type\":\"uint16\"}],\"name\":\"AlgebraFeeProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAlgebraFeeReceiver\",\"type\":\"address\"}],\"name\":\"AlgebraFeeReceiver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AlgebraTokensWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"CancelAlgebraFeeProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newCommunityFeeReceiver\",\"type\":\"address\"}],\"name\":\"CommunityFeeReceiver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pendingAlgebraFeeManager\",\"type\":\"address\"}],\"name\":\"PendingAlgebraFeeManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensWithdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"newAlgebraFee\",\"type\":\"uint16\"}],\"name\":\"acceptAlgebraFeeChangeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptAlgebraFeeManagerRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelAlgebraFeeChangeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAlgebraFeeReceiver\",\"type\":\"address\"}],\"name\":\"changeAlgebraFeeReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCommunityFeeReceiver\",\"type\":\"address\"}],\"name\":\"changeCommunityFeeReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"newAlgebraFee\",\"type\":\"uint16\"}],\"name\":\"proposeAlgebraFeeChange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAlgebraFeeManager\",\"type\":\"address\"}],\"name\":\"transferAlgebraFeeManagerRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IAlgebraCommunityVault.WithdrawTokensParams[]\",\"name\":\"params\",\"type\":\"tuple[]\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Version: Algebra Integral\",\"events\":{\"AlgebraFee(uint16)\":{\"params\":{\"newAlgebraFee\":\"The new Algebra fee value\"}},\"AlgebraFeeManager(address)\":{\"params\":{\"newAlgebraFeeManager\":\"New Algebra fee manager address\"}},\"AlgebraFeeProposal(uint16)\":{\"params\":{\"proposedNewAlgebraFee\":\"The new proposed Algebra fee value\"}},\"AlgebraFeeReceiver(address)\":{\"params\":{\"newAlgebraFeeReceiver\":\"New Algebra fee receiver address\"}},\"AlgebraTokensWithdrawal(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of fees tokens claimed by Algebra\",\"to\":\"The address where claimed rewards were sent to\",\"token\":\"The address of token fee\"}},\"CommunityFeeReceiver(address)\":{\"params\":{\"newCommunityFeeReceiver\":\"New fee receiver address\"}},\"PendingAlgebraFeeManager(address)\":{\"params\":{\"pendingAlgebraFeeManager\":\"New pending Algebra fee manager address\"}},\"TokensWithdrawal(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of fees tokens claimed by communityFeeReceiver\",\"to\":\"The address where claimed rewards were sent to\",\"token\":\"The address of token fee\"}}},\"kind\":\"dev\",\"methods\":{\"acceptAlgebraFeeChangeProposal(uint16)\":{\"details\":\"Can only be called by the factory owner. The new value will also be used for previously accumulated tokens that have not yet been withdrawn\",\"params\":{\"newAlgebraFee\":\"New Algebra fee value\"}},\"changeAlgebraFeeReceiver(address)\":{\"params\":{\"newAlgebraFeeReceiver\":\"The address of new Algebra fee receiver\"}},\"changeCommunityFeeReceiver(address)\":{\"details\":\"Can only be called by the factory owner\",\"params\":{\"newCommunityFeeReceiver\":\"New community fee receiver address\"}},\"proposeAlgebraFeeChange(uint16)\":{\"details\":\"the new value will also be used for previously accumulated tokens that have not yet been withdrawn\",\"params\":{\"newAlgebraFee\":\"new Algebra fee value\"}},\"transferAlgebraFeeManagerRole(address)\":{\"params\":{\"_newAlgebraFeeManager\":\"new Algebra fee manager address\"}},\"withdraw(address,uint256)\":{\"details\":\"Can only be called by algebraFeeManager or communityFeeReceiver\",\"params\":{\"amount\":\"The amount of token\",\"token\":\"The token address\"}},\"withdrawTokens((address,uint256)[])\":{\"details\":\"Can be called by algebraFeeManager or communityFeeReceiver\",\"params\":{\"params\":\"Array of WithdrawTokensParams objects containing token addresses and amounts to withdraw\"}}},\"title\":\"The interface for the Algebra community fee vault\",\"version\":1},\"userdoc\":{\"events\":{\"AlgebraFee(uint16)\":{\"notice\":\"Emitted when the Algebra fee is changed\"},\"AlgebraFeeManager(address)\":{\"notice\":\"Emitted when a AlgebraFeeManager address changed\"},\"AlgebraFeeProposal(uint16)\":{\"notice\":\"Emitted when a new Algebra fee value proposed\"},\"AlgebraFeeReceiver(address)\":{\"notice\":\"Emitted when a AlgebraFeeReceiver address changed\"},\"AlgebraTokensWithdrawal(address,address,uint256)\":{\"notice\":\"Event emitted when a fees has been claimed\"},\"CancelAlgebraFeeProposal()\":{\"notice\":\"Emitted when a Algebra fee proposal canceled\"},\"CommunityFeeReceiver(address)\":{\"notice\":\"Emitted when a CommunityFeeReceiver address changed\"},\"PendingAlgebraFeeManager(address)\":{\"notice\":\"Emitted when a AlgebraFeeManager address change proposed\"},\"TokensWithdrawal(address,address,uint256)\":{\"notice\":\"Event emitted when a fees has been claimed\"}},\"kind\":\"user\",\"methods\":{\"acceptAlgebraFeeChangeProposal(uint16)\":{\"notice\":\"Accepts the proposed new Algebra fee\"},\"acceptAlgebraFeeManagerRole()\":{\"notice\":\"accept Algebra FeeManager role\"},\"cancelAlgebraFeeChangeProposal()\":{\"notice\":\"Cancels Algebra fee change proposal\"},\"changeAlgebraFeeReceiver(address)\":{\"notice\":\"Change Algebra community fee part receiver\"},\"changeCommunityFeeReceiver(address)\":{\"notice\":\"Change community fee receiver address\"},\"proposeAlgebraFeeChange(uint16)\":{\"notice\":\"Proposes new Algebra fee value for protocol\"},\"transferAlgebraFeeManagerRole(address)\":{\"notice\":\"Transfers Algebra fee manager role\"},\"withdraw(address,uint256)\":{\"notice\":\"Withdraw protocol fees from vault\"},\"withdrawTokens((address,uint256)[])\":{\"notice\":\"Withdraw protocol fees from vault. Used to claim fees for multiple tokens\"}},\"notice\":\"Community fee from pools is sent here, if it is enabled\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/Algebra/src/core/contracts/interfaces/vault/IAlgebraCommunityVault.sol\":\"IAlgebraCommunityVault\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@Cyfrin/foundry-devops/=lib/foundry-devops/src/\",\":@chainlink/contracts/=lib/mento-core/lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/\",\":@cryptoalgebra/abstract-plugin/=lib/plugins-monorepo/packages/abstract-plugin/\",\":@cryptoalgebra/default-plugin/=lib/plugins-monorepo/packages/default-plugin/\",\":@cryptoalgebra/dynamic-fee-plugin/=lib/plugins-monorepo/packages/dynamic-fee/\",\":@cryptoalgebra/farming-proxy-plugin/=lib/plugins-monorepo/packages/farming-proxy/\",\":@cryptoalgebra/integral-core/=lib/Algebra/src/core/\",\":@cryptoalgebra/integral-periphery/=lib/Algebra/src/periphery/\",\":@cryptoalgebra/volatility-oracle-plugin/=lib/plugins-monorepo/packages/volatility-oracle/\",\":@ds/=lib/mento-router/lib/multicall/lib/ds-test/src/\",\":@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/\",\":@mento/core/=lib/mento-core/\",\":@mento/periphery/=lib/mento-router/\",\":@mento/std/=lib/mento-std/\",\":@openzeppelin-v5/=lib/openzeppelin-contracts-v5/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@prb/test/=lib/mento-core/lib/prb-math/lib/prb-test/src/\",\":@self/=node_modules/@selfxyz/contracts/contracts/\",\":@std/=lib/mento-router/lib/multicall/lib/forge-std/src/\",\":@synthetixio/core-contracts/=lib/synthetix-v3/utils/core-contracts/\",\":@synthetixio/core-modules/=lib/synthetix-v3/utils/core-modules/\",\":@synthetixio/governance/=lib/synthetix-v3/protocol/governance/\",\":@synthetixio/oracle-manager/=lib/synthetix-v3/protocol/oracle-manager/\",\":@synthetixio/synthetix/=lib/synthetix-v3/protocol/synthetix/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":@uniswap/v4-periphery/=lib/v4-periphery/\",\":Algebra/=lib/Algebra/src/\",\":Roci-Smart-Contracts-v2/=lib/Roci-Smart-Contracts-v2/contracts/\",\":celo-foundry/=lib/mento-deployment/lib/celo-foundry/\",\":celo/=lib/mento-core/node_modules/@celo/\",\":chainlink-brownie-contracts/=lib/mento-core/lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":contracts/=lib/mento-core/contracts/\",\":ds-test/=lib/mento-router/lib/multicall/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std-next/=lib/mento-deployment/lib/forge-std-next/src/\",\":forge-std/=lib/forge-std/src/\",\":foundry-chainlink-toolkit/=lib/mento-core/lib/foundry-chainlink-toolkit/\",\":foundry-devops/=lib/foundry-devops/\",\":governance-tests/=lib/governance-tests/\",\":hackathon-demo/=lib/hackathon-demo/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts-v5/lib/halmos-cheatcodes/src/\",\":hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/\",\":mento-core-2.0.0/=lib/mento-deployment/lib/mento-core-2.0.0/contracts/\",\":mento-core-2.1.0/=lib/mento-deployment/lib/mento-core-2.1.0/contracts/\",\":mento-core-2.2.0/=lib/mento-deployment/lib/mento-core-2.2.0/contracts/\",\":mento-core-2.3.1/=lib/mento-deployment/lib/mento-core-2.3.1/contracts/\",\":mento-core-2.5.0/=lib/mento-deployment/lib/mento-core-2.5.0/contracts/\",\":mento-core-2.6.0-oz/=lib/mento-deployment/lib/mento-core-2.6.0/lib/openzeppelin-contracts-next/\",\":mento-core-2.6.0/=lib/mento-deployment/lib/mento-core-2.6.0/contracts/\",\":mento-core-2.6.2/=lib/mento-deployment/lib/mento-core-2.6.2/contracts/\",\":mento-core-2.6.3/=lib/mento-deployment/lib/mento-core-2.6.3/contracts/\",\":mento-core-2.6.4/=lib/mento-deployment/lib/mento-core-2.6.4/contracts/\",\":mento-core-2.6.5/=lib/mento-deployment/lib/mento-core-2.6.5/contracts/\",\":mento-core/=lib/mento-core/contracts/\",\":mento-deployment/=lib/mento-deployment/\",\":mento-router/=lib/mento-router/\",\":mento-std/=lib/mento-std/src/\",\":merkle-distributor/=lib/mento-deployment/lib/merkle-distributor/contracts/\",\":multicall/=lib/mento-router/lib/multicall/src/\",\":openzeppelin-contracts-next/=lib/mento-core/lib/openzeppelin-contracts-next/\",\":openzeppelin-contracts-upgradeable/=lib/mento-core/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v5/=lib/openzeppelin-contracts-v5/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-solidity/=lib/mento-core/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":oracle-v2-playground/=lib/oracle-v2-playground/\",\":permit2/=lib/v4-periphery/lib/permit2/\",\":plugins-monorepo/=lib/plugins-monorepo/\",\":prb-math/=lib/mento-core/lib/prb-math/src/\",\":prb-test/=lib/mento-core/lib/prb-math/lib/prb-test/src/\",\":prb/math/=lib/mento-core/lib/prb-math/src/\",\":redstone-oracles-monorepo/=lib/oracle-v2-playground/lib/\",\":redstone/=lib/oracle-v2-playground/lib/redstone-oracles-monorepo/packages/evm-connector/\",\":safe-contracts/=lib/mento-core/lib/safe-contracts/\",\":solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/\",\":synthetix-v3/=lib/synthetix-v3/\",\":v4-core/=lib/v4-periphery/lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/\"]},\"sources\":{\"lib/Algebra/src/core/contracts/interfaces/vault/IAlgebraCommunityVault.sol\":{\"keccak256\":\"0x24fad3648346700d372d65ca449494553db47dcb03d2cd0acaf7677a5f7b1391\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c15473dd606ee905423bf27fba68ce7d9964b43f728611db22468dd36581caf4\",\"dweb:/ipfs/QmSa7ratHBjLQ3xrAoNXvM3pBhtLYBqRuMx8rnYy5S2se4\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint16","name":"newAlgebraFee","type":"uint16","indexed":false}],"type":"event","name":"AlgebraFee","anonymous":false},{"inputs":[{"internalType":"address","name":"newAlgebraFeeManager","type":"address","indexed":false}],"type":"event","name":"AlgebraFeeManager","anonymous":false},{"inputs":[{"internalType":"uint16","name":"proposedNewAlgebraFee","type":"uint16","indexed":false}],"type":"event","name":"AlgebraFeeProposal","anonymous":false},{"inputs":[{"internalType":"address","name":"newAlgebraFeeReceiver","type":"address","indexed":false}],"type":"event","name":"AlgebraFeeReceiver","anonymous":false},{"inputs":[{"internalType":"address","name":"token","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"AlgebraTokensWithdrawal","anonymous":false},{"inputs":[],"type":"event","name":"CancelAlgebraFeeProposal","anonymous":false},{"inputs":[{"internalType":"address","name":"newCommunityFeeReceiver","type":"address","indexed":false}],"type":"event","name":"CommunityFeeReceiver","anonymous":false},{"inputs":[{"internalType":"address","name":"pendingAlgebraFeeManager","type":"address","indexed":false}],"type":"event","name":"PendingAlgebraFeeManager","anonymous":false},{"inputs":[{"internalType":"address","name":"token","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"TokensWithdrawal","anonymous":false},{"inputs":[{"internalType":"uint16","name":"newAlgebraFee","type":"uint16"}],"stateMutability":"nonpayable","type":"function","name":"acceptAlgebraFeeChangeProposal"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"acceptAlgebraFeeManagerRole"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"cancelAlgebraFeeChangeProposal"},{"inputs":[{"internalType":"address","name":"newAlgebraFeeReceiver","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"changeAlgebraFeeReceiver"},{"inputs":[{"internalType":"address","name":"newCommunityFeeReceiver","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"changeCommunityFeeReceiver"},{"inputs":[{"internalType":"uint16","name":"newAlgebraFee","type":"uint16"}],"stateMutability":"nonpayable","type":"function","name":"proposeAlgebraFeeChange"},{"inputs":[{"internalType":"address","name":"_newAlgebraFeeManager","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transferAlgebraFeeManagerRole"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"withdraw"},{"inputs":[{"internalType":"struct IAlgebraCommunityVault.WithdrawTokensParams[]","name":"params","type":"tuple[]","components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"withdrawTokens"}],"devdoc":{"kind":"dev","methods":{"acceptAlgebraFeeChangeProposal(uint16)":{"details":"Can only be called by the factory owner. The new value will also be used for previously accumulated tokens that have not yet been withdrawn","params":{"newAlgebraFee":"New Algebra fee value"}},"changeAlgebraFeeReceiver(address)":{"params":{"newAlgebraFeeReceiver":"The address of new Algebra fee receiver"}},"changeCommunityFeeReceiver(address)":{"details":"Can only be called by the factory owner","params":{"newCommunityFeeReceiver":"New community fee receiver address"}},"proposeAlgebraFeeChange(uint16)":{"details":"the new value will also be used for previously accumulated tokens that have not yet been withdrawn","params":{"newAlgebraFee":"new Algebra fee value"}},"transferAlgebraFeeManagerRole(address)":{"params":{"_newAlgebraFeeManager":"new Algebra fee manager address"}},"withdraw(address,uint256)":{"details":"Can only be called by algebraFeeManager or communityFeeReceiver","params":{"amount":"The amount of token","token":"The token address"}},"withdrawTokens((address,uint256)[])":{"details":"Can be called by algebraFeeManager or communityFeeReceiver","params":{"params":"Array of WithdrawTokensParams objects containing token addresses and amounts to withdraw"}}},"version":1},"userdoc":{"kind":"user","methods":{"acceptAlgebraFeeChangeProposal(uint16)":{"notice":"Accepts the proposed new Algebra fee"},"acceptAlgebraFeeManagerRole()":{"notice":"accept Algebra FeeManager role"},"cancelAlgebraFeeChangeProposal()":{"notice":"Cancels Algebra fee change proposal"},"changeAlgebraFeeReceiver(address)":{"notice":"Change Algebra community fee part receiver"},"changeCommunityFeeReceiver(address)":{"notice":"Change community fee receiver address"},"proposeAlgebraFeeChange(uint16)":{"notice":"Proposes new Algebra fee value for protocol"},"transferAlgebraFeeManagerRole(address)":{"notice":"Transfers Algebra fee manager role"},"withdraw(address,uint256)":{"notice":"Withdraw protocol fees from vault"},"withdrawTokens((address,uint256)[])":{"notice":"Withdraw protocol fees from vault. Used to claim fees for multiple tokens"}},"version":1}},"settings":{"remappings":["@Cyfrin/foundry-devops/=lib/foundry-devops/src/","@chainlink/contracts/=lib/mento-core/lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/","@cryptoalgebra/abstract-plugin/=lib/plugins-monorepo/packages/abstract-plugin/","@cryptoalgebra/default-plugin/=lib/plugins-monorepo/packages/default-plugin/","@cryptoalgebra/dynamic-fee-plugin/=lib/plugins-monorepo/packages/dynamic-fee/","@cryptoalgebra/farming-proxy-plugin/=lib/plugins-monorepo/packages/farming-proxy/","@cryptoalgebra/integral-core/=lib/Algebra/src/core/","@cryptoalgebra/integral-periphery/=lib/Algebra/src/periphery/","@cryptoalgebra/volatility-oracle-plugin/=lib/plugins-monorepo/packages/volatility-oracle/","@ds/=lib/mento-router/lib/multicall/lib/ds-test/src/","@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/","@mento/core/=lib/mento-core/","@mento/periphery/=lib/mento-router/","@mento/std/=lib/mento-std/","@openzeppelin-v5/=lib/openzeppelin-contracts-v5/","@openzeppelin/=lib/openzeppelin-contracts/","@prb/test/=lib/mento-core/lib/prb-math/lib/prb-test/src/","@self/=node_modules/@selfxyz/contracts/contracts/","@std/=lib/mento-router/lib/multicall/lib/forge-std/src/","@synthetixio/core-contracts/=lib/synthetix-v3/utils/core-contracts/","@synthetixio/core-modules/=lib/synthetix-v3/utils/core-modules/","@synthetixio/governance/=lib/synthetix-v3/protocol/governance/","@synthetixio/oracle-manager/=lib/synthetix-v3/protocol/oracle-manager/","@synthetixio/synthetix/=lib/synthetix-v3/protocol/synthetix/","@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/","@uniswap/v4-periphery/=lib/v4-periphery/","Algebra/=lib/Algebra/src/","Roci-Smart-Contracts-v2/=lib/Roci-Smart-Contracts-v2/contracts/","celo-foundry/=lib/mento-deployment/lib/celo-foundry/","celo/=lib/mento-core/node_modules/@celo/","chainlink-brownie-contracts/=lib/mento-core/lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/","contracts/=lib/mento-core/contracts/","ds-test/=lib/mento-router/lib/multicall/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/","forge-std-next/=lib/mento-deployment/lib/forge-std-next/src/","forge-std/=lib/forge-std/src/","foundry-chainlink-toolkit/=lib/mento-core/lib/foundry-chainlink-toolkit/","foundry-devops/=lib/foundry-devops/","governance-tests/=lib/governance-tests/","hackathon-demo/=lib/hackathon-demo/","halmos-cheatcodes/=lib/openzeppelin-contracts-v5/lib/halmos-cheatcodes/src/","hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/","mento-core-2.0.0/=lib/mento-deployment/lib/mento-core-2.0.0/contracts/","mento-core-2.1.0/=lib/mento-deployment/lib/mento-core-2.1.0/contracts/","mento-core-2.2.0/=lib/mento-deployment/lib/mento-core-2.2.0/contracts/","mento-core-2.3.1/=lib/mento-deployment/lib/mento-core-2.3.1/contracts/","mento-core-2.5.0/=lib/mento-deployment/lib/mento-core-2.5.0/contracts/","mento-core-2.6.0-oz/=lib/mento-deployment/lib/mento-core-2.6.0/lib/openzeppelin-contracts-next/","mento-core-2.6.0/=lib/mento-deployment/lib/mento-core-2.6.0/contracts/","mento-core-2.6.2/=lib/mento-deployment/lib/mento-core-2.6.2/contracts/","mento-core-2.6.3/=lib/mento-deployment/lib/mento-core-2.6.3/contracts/","mento-core-2.6.4/=lib/mento-deployment/lib/mento-core-2.6.4/contracts/","mento-core-2.6.5/=lib/mento-deployment/lib/mento-core-2.6.5/contracts/","mento-core/=lib/mento-core/contracts/","mento-deployment/=lib/mento-deployment/","mento-router/=lib/mento-router/","mento-std/=lib/mento-std/src/","merkle-distributor/=lib/mento-deployment/lib/merkle-distributor/contracts/","multicall/=lib/mento-router/lib/multicall/src/","openzeppelin-contracts-next/=lib/mento-core/lib/openzeppelin-contracts-next/","openzeppelin-contracts-upgradeable/=lib/mento-core/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts-v5/=lib/openzeppelin-contracts-v5/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-solidity/=lib/mento-core/lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","oracle-v2-playground/=lib/oracle-v2-playground/","permit2/=lib/v4-periphery/lib/permit2/","plugins-monorepo/=lib/plugins-monorepo/","prb-math/=lib/mento-core/lib/prb-math/src/","prb-test/=lib/mento-core/lib/prb-math/lib/prb-test/src/","prb/math/=lib/mento-core/lib/prb-math/src/","redstone-oracles-monorepo/=lib/oracle-v2-playground/lib/","redstone/=lib/oracle-v2-playground/lib/redstone-oracles-monorepo/packages/evm-connector/","safe-contracts/=lib/mento-core/lib/safe-contracts/","solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/","synthetix-v3/=lib/synthetix-v3/","v4-core/=lib/v4-periphery/lib/v4-core/src/","v4-periphery/=lib/v4-periphery/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"none","appendCBOR":false},"compilationTarget":{"lib/Algebra/src/core/contracts/interfaces/vault/IAlgebraCommunityVault.sol":"IAlgebraCommunityVault"},"evmVersion":"shanghai","libraries":{}},"sources":{"lib/Algebra/src/core/contracts/interfaces/vault/IAlgebraCommunityVault.sol":{"keccak256":"0x24fad3648346700d372d65ca449494553db47dcb03d2cd0acaf7677a5f7b1391","urls":["bzz-raw://c15473dd606ee905423bf27fba68ce7d9964b43f728611db22468dd36581caf4","dweb:/ipfs/QmSa7ratHBjLQ3xrAoNXvM3pBhtLYBqRuMx8rnYy5S2se4"],"license":"GPL-2.0-or-later"}},"version":1},"id":27}