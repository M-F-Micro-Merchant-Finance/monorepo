{"abi":[{"type":"function","name":"getSingleTimepoint","inputs":[{"name":"secondsAgo","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"tickCumulative","type":"int56","internalType":"int56"},{"name":"volatilityCumulative","type":"uint88","internalType":"uint88"}],"stateMutability":"view"},{"type":"function","name":"getTimepoints","inputs":[{"name":"secondsAgos","type":"uint32[]","internalType":"uint32[]"}],"outputs":[{"name":"tickCumulatives","type":"int56[]","internalType":"int56[]"},{"name":"volatilityCumulatives","type":"uint88[]","internalType":"uint88[]"}],"stateMutability":"view"},{"type":"function","name":"initialize","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"isInitialized","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"lastTimepointTimestamp","inputs":[],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"prepayTimepointsStorageSlots","inputs":[{"name":"startIndex","type":"uint16","internalType":"uint16"},{"name":"amount","type":"uint16","internalType":"uint16"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"timepointIndex","inputs":[],"outputs":[{"name":"","type":"uint16","internalType":"uint16"}],"stateMutability":"view"},{"type":"function","name":"timepoints","inputs":[{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"initialized","type":"bool","internalType":"bool"},{"name":"blockTimestamp","type":"uint32","internalType":"uint32"},{"name":"tickCumulative","type":"int56","internalType":"int56"},{"name":"volatilityCumulative","type":"uint88","internalType":"uint88"},{"name":"tick","type":"int24","internalType":"int24"},{"name":"averageTick","type":"int24","internalType":"int24"},{"name":"windowStartIndex","type":"uint16","internalType":"uint16"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getSingleTimepoint(uint32)":"88f2e862","getTimepoints(uint32[])":"9d3a5241","initialize()":"8129fc1c","isInitialized()":"392e53cd","lastTimepointTimestamp()":"f5985d35","prepayTimepointsStorageSlots(uint16,uint16)":"da705235","timepointIndex()":"0786feb6","timepoints(uint256)":"74eceae6"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"secondsAgo\",\"type\":\"uint32\"}],\"name\":\"getSingleTimepoint\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint88\",\"name\":\"volatilityCumulative\",\"type\":\"uint88\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"getTimepoints\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint88[]\",\"name\":\"volatilityCumulatives\",\"type\":\"uint88[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimepointTimestamp\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"startIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"amount\",\"type\":\"uint16\"}],\"name\":\"prepayTimepointsStorageSlots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timepointIndex\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"timepoints\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint88\",\"name\":\"volatilityCumulative\",\"type\":\"uint88\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"averageTick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"windowStartIndex\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract stores timepoints and calculates statistical averages\",\"kind\":\"dev\",\"methods\":{\"getSingleTimepoint(uint32)\":{\"details\":\"Reverts if a timepoint at or before the desired timepoint timestamp does not exist. 0 may be passed as `secondsAgo' to return the current cumulative values. If called with a timestamp falling between two timepoints, returns the counterfactual accumulator values at exactly the timestamp between the two timepoints.`volatilityCumulative` values for timestamps after the last timepoint _should not_ be compared because they may differ due to interpolation errors\",\"params\":{\"secondsAgo\":\"The amount of time to look back, in seconds, at which point to return a timepoint\"},\"returns\":{\"tickCumulative\":\"The cumulative tick since the pool was first initialized, as of `secondsAgo`\",\"volatilityCumulative\":\"The cumulative volatility value since the pool was first initialized, as of `secondsAgo`\"}},\"getTimepoints(uint32[])\":{\"details\":\"Reverts if `secondsAgos` > oldest timepoint`volatilityCumulative` values for timestamps after the last timepoint _should not_ be compared because they may differ due to interpolation errors\",\"params\":{\"secondsAgos\":\"Each amount of time to look back, in seconds, at which point to return a timepoint\"},\"returns\":{\"tickCumulatives\":\"The cumulative tick since the pool was first initialized, as of each `secondsAgo`\",\"volatilityCumulatives\":\"The cumulative volatility values since the pool was first initialized, as of each `secondsAgo`\"}},\"initialize()\":{\"details\":\"This function allows to initialize the plugin if it was created after the pool was created\"},\"isInitialized()\":{\"returns\":{\"_0\":\"true if oracle is initialized, otherwise false\"}},\"lastTimepointTimestamp()\":{\"returns\":{\"_0\":\"timestamp of the last timepoint\"}},\"prepayTimepointsStorageSlots(uint16,uint16)\":{\"details\":\"Can be used to reduce the gas cost of future swaps\",\"params\":{\"amount\":\"of slots to fill, startIndex + amount must be <= type(uint16).max\",\"startIndex\":\"The start index, must be not initialized\"}},\"timepointIndex()\":{\"returns\":{\"_0\":\"index of the last timepoint written\"}},\"timepoints(uint256)\":{\"details\":\"There is more convenient function to fetch a timepoint: getTimepoints(). Which requires not an index but seconds\",\"params\":{\"index\":\"The index of timepoint in the array\"},\"returns\":{\"averageTick\":\"Time-weighted average tick\",\"blockTimestamp\":\"The timestamp of the timepoint\",\"initialized\":\"Whether the timepoint has been initialized and the values are safe to use\",\"tick\":\"The tick at blockTimestamp\",\"tickCumulative\":\"The tick multiplied by seconds elapsed for the life of the pool as of the timepoint timestamp\",\"volatilityCumulative\":\"Cumulative standard deviation for the life of the pool as of the timepoint timestamp\",\"windowStartIndex\":\"Index of closest timepoint >= WINDOW seconds ago\"}}},\"title\":\"The interface for the Algebra volatility oracle\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getTimepoints(uint32[])\":{\"notice\":\"Returns the accumulator values as of each time seconds ago from the given time in the array of `secondsAgos`\"},\"initialize()\":{\"notice\":\"Initialize the plugin externally\"},\"isInitialized()\":{\"notice\":\"Returns information about whether oracle is initialized\"},\"lastTimepointTimestamp()\":{\"notice\":\"Returns the timestamp of the last timepoint that was written.\"},\"prepayTimepointsStorageSlots(uint16,uint16)\":{\"notice\":\"Fills uninitialized timepoints with nonzero value\"},\"timepointIndex()\":{\"notice\":\"Returns the index of the last timepoint that was written.\"},\"timepoints(uint256)\":{\"notice\":\"Returns data belonging to a certain timepoint\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/plugins-monorepo/packages/volatility-oracle/contracts/interfaces/IVolatilityOracle.sol\":\"IVolatilityOracle\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@Cyfrin/foundry-devops/=lib/foundry-devops/src/\",\":@chainlink/contracts/=lib/mento-core/lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/\",\":@cryptoalgebra/abstract-plugin/=lib/plugins-monorepo/packages/abstract-plugin/\",\":@cryptoalgebra/default-plugin/=lib/plugins-monorepo/packages/default-plugin/\",\":@cryptoalgebra/dynamic-fee-plugin/=lib/plugins-monorepo/packages/dynamic-fee/\",\":@cryptoalgebra/farming-proxy-plugin/=lib/plugins-monorepo/packages/farming-proxy/\",\":@cryptoalgebra/integral-core/=lib/Algebra/src/core/\",\":@cryptoalgebra/integral-periphery/=lib/Algebra/src/periphery/\",\":@cryptoalgebra/volatility-oracle-plugin/=lib/plugins-monorepo/packages/volatility-oracle/\",\":@ds/=lib/mento-router/lib/multicall/lib/ds-test/src/\",\":@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/\",\":@mento/core/=lib/mento-core/\",\":@mento/periphery/=lib/mento-router/\",\":@mento/std/=lib/mento-std/\",\":@openzeppelin-v5/=lib/openzeppelin-contracts-v5/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@prb/test/=lib/mento-core/lib/prb-math/lib/prb-test/src/\",\":@self/=node_modules/@selfxyz/contracts/contracts/\",\":@std/=lib/mento-router/lib/multicall/lib/forge-std/src/\",\":@synthetixio/core-contracts/=lib/synthetix-v3/utils/core-contracts/\",\":@synthetixio/core-modules/=lib/synthetix-v3/utils/core-modules/\",\":@synthetixio/governance/=lib/synthetix-v3/protocol/governance/\",\":@synthetixio/oracle-manager/=lib/synthetix-v3/protocol/oracle-manager/\",\":@synthetixio/synthetix/=lib/synthetix-v3/protocol/synthetix/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":@uniswap/v4-periphery/=lib/v4-periphery/\",\":Algebra/=lib/Algebra/src/\",\":Roci-Smart-Contracts-v2/=lib/Roci-Smart-Contracts-v2/contracts/\",\":celo-foundry/=lib/mento-deployment/lib/celo-foundry/\",\":celo/=lib/mento-core/node_modules/@celo/\",\":chainlink-brownie-contracts/=lib/mento-core/lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":contracts/=lib/mento-core/contracts/\",\":ds-test/=lib/mento-router/lib/multicall/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std-next/=lib/mento-deployment/lib/forge-std-next/src/\",\":forge-std/=lib/forge-std/src/\",\":foundry-chainlink-toolkit/=lib/mento-core/lib/foundry-chainlink-toolkit/\",\":foundry-devops/=lib/foundry-devops/\",\":governance-tests/=lib/governance-tests/\",\":hackathon-demo/=lib/hackathon-demo/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts-v5/lib/halmos-cheatcodes/src/\",\":hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/\",\":mento-core-2.0.0/=lib/mento-deployment/lib/mento-core-2.0.0/contracts/\",\":mento-core-2.1.0/=lib/mento-deployment/lib/mento-core-2.1.0/contracts/\",\":mento-core-2.2.0/=lib/mento-deployment/lib/mento-core-2.2.0/contracts/\",\":mento-core-2.3.1/=lib/mento-deployment/lib/mento-core-2.3.1/contracts/\",\":mento-core-2.5.0/=lib/mento-deployment/lib/mento-core-2.5.0/contracts/\",\":mento-core-2.6.0-oz/=lib/mento-deployment/lib/mento-core-2.6.0/lib/openzeppelin-contracts-next/\",\":mento-core-2.6.0/=lib/mento-deployment/lib/mento-core-2.6.0/contracts/\",\":mento-core-2.6.2/=lib/mento-deployment/lib/mento-core-2.6.2/contracts/\",\":mento-core-2.6.3/=lib/mento-deployment/lib/mento-core-2.6.3/contracts/\",\":mento-core-2.6.4/=lib/mento-deployment/lib/mento-core-2.6.4/contracts/\",\":mento-core-2.6.5/=lib/mento-deployment/lib/mento-core-2.6.5/contracts/\",\":mento-core/=lib/mento-core/contracts/\",\":mento-deployment/=lib/mento-deployment/\",\":mento-router/=lib/mento-router/\",\":mento-std/=lib/mento-std/src/\",\":merkle-distributor/=lib/mento-deployment/lib/merkle-distributor/contracts/\",\":multicall/=lib/mento-router/lib/multicall/src/\",\":openzeppelin-contracts-next/=lib/mento-core/lib/openzeppelin-contracts-next/\",\":openzeppelin-contracts-upgradeable/=lib/mento-core/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v5/=lib/openzeppelin-contracts-v5/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-solidity/=lib/mento-core/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":oracle-v2-playground/=lib/oracle-v2-playground/\",\":permit2/=lib/v4-periphery/lib/permit2/\",\":plugins-monorepo/=lib/plugins-monorepo/\",\":prb-math/=lib/mento-core/lib/prb-math/src/\",\":prb-test/=lib/mento-core/lib/prb-math/lib/prb-test/src/\",\":prb/math/=lib/mento-core/lib/prb-math/src/\",\":redstone-oracles-monorepo/=lib/oracle-v2-playground/lib/\",\":redstone/=lib/oracle-v2-playground/lib/redstone-oracles-monorepo/packages/evm-connector/\",\":safe-contracts/=lib/mento-core/lib/safe-contracts/\",\":solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/\",\":synthetix-v3/=lib/synthetix-v3/\",\":v4-core/=lib/v4-periphery/lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/\"]},\"sources\":{\"lib/plugins-monorepo/packages/volatility-oracle/contracts/interfaces/IVolatilityOracle.sol\":{\"keccak256\":\"0x663473a12108b742fc68398563d06e76aebe52e09941976b6918c9eaee14feaf\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d137f0fa83d0f4fe2c5406c55d82971e8636a196274180fae4507e2892544d46\",\"dweb:/ipfs/QmZ7Sa1m5izhq3t6sNBepM7HxMgr7RL58rzMAszGtpwFYy\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint32","name":"secondsAgo","type":"uint32"}],"stateMutability":"view","type":"function","name":"getSingleTimepoint","outputs":[{"internalType":"int56","name":"tickCumulative","type":"int56"},{"internalType":"uint88","name":"volatilityCumulative","type":"uint88"}]},{"inputs":[{"internalType":"uint32[]","name":"secondsAgos","type":"uint32[]"}],"stateMutability":"view","type":"function","name":"getTimepoints","outputs":[{"internalType":"int56[]","name":"tickCumulatives","type":"int56[]"},{"internalType":"uint88[]","name":"volatilityCumulatives","type":"uint88[]"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"initialize"},{"inputs":[],"stateMutability":"view","type":"function","name":"isInitialized","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"lastTimepointTimestamp","outputs":[{"internalType":"uint32","name":"","type":"uint32"}]},{"inputs":[{"internalType":"uint16","name":"startIndex","type":"uint16"},{"internalType":"uint16","name":"amount","type":"uint16"}],"stateMutability":"nonpayable","type":"function","name":"prepayTimepointsStorageSlots"},{"inputs":[],"stateMutability":"view","type":"function","name":"timepointIndex","outputs":[{"internalType":"uint16","name":"","type":"uint16"}]},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"timepoints","outputs":[{"internalType":"bool","name":"initialized","type":"bool"},{"internalType":"uint32","name":"blockTimestamp","type":"uint32"},{"internalType":"int56","name":"tickCumulative","type":"int56"},{"internalType":"uint88","name":"volatilityCumulative","type":"uint88"},{"internalType":"int24","name":"tick","type":"int24"},{"internalType":"int24","name":"averageTick","type":"int24"},{"internalType":"uint16","name":"windowStartIndex","type":"uint16"}]}],"devdoc":{"kind":"dev","methods":{"getSingleTimepoint(uint32)":{"details":"Reverts if a timepoint at or before the desired timepoint timestamp does not exist. 0 may be passed as `secondsAgo' to return the current cumulative values. If called with a timestamp falling between two timepoints, returns the counterfactual accumulator values at exactly the timestamp between the two timepoints.`volatilityCumulative` values for timestamps after the last timepoint _should not_ be compared because they may differ due to interpolation errors","params":{"secondsAgo":"The amount of time to look back, in seconds, at which point to return a timepoint"},"returns":{"tickCumulative":"The cumulative tick since the pool was first initialized, as of `secondsAgo`","volatilityCumulative":"The cumulative volatility value since the pool was first initialized, as of `secondsAgo`"}},"getTimepoints(uint32[])":{"details":"Reverts if `secondsAgos` > oldest timepoint`volatilityCumulative` values for timestamps after the last timepoint _should not_ be compared because they may differ due to interpolation errors","params":{"secondsAgos":"Each amount of time to look back, in seconds, at which point to return a timepoint"},"returns":{"tickCumulatives":"The cumulative tick since the pool was first initialized, as of each `secondsAgo`","volatilityCumulatives":"The cumulative volatility values since the pool was first initialized, as of each `secondsAgo`"}},"initialize()":{"details":"This function allows to initialize the plugin if it was created after the pool was created"},"isInitialized()":{"returns":{"_0":"true if oracle is initialized, otherwise false"}},"lastTimepointTimestamp()":{"returns":{"_0":"timestamp of the last timepoint"}},"prepayTimepointsStorageSlots(uint16,uint16)":{"details":"Can be used to reduce the gas cost of future swaps","params":{"amount":"of slots to fill, startIndex + amount must be <= type(uint16).max","startIndex":"The start index, must be not initialized"}},"timepointIndex()":{"returns":{"_0":"index of the last timepoint written"}},"timepoints(uint256)":{"details":"There is more convenient function to fetch a timepoint: getTimepoints(). Which requires not an index but seconds","params":{"index":"The index of timepoint in the array"},"returns":{"averageTick":"Time-weighted average tick","blockTimestamp":"The timestamp of the timepoint","initialized":"Whether the timepoint has been initialized and the values are safe to use","tick":"The tick at blockTimestamp","tickCumulative":"The tick multiplied by seconds elapsed for the life of the pool as of the timepoint timestamp","volatilityCumulative":"Cumulative standard deviation for the life of the pool as of the timepoint timestamp","windowStartIndex":"Index of closest timepoint >= WINDOW seconds ago"}}},"version":1},"userdoc":{"kind":"user","methods":{"getTimepoints(uint32[])":{"notice":"Returns the accumulator values as of each time seconds ago from the given time in the array of `secondsAgos`"},"initialize()":{"notice":"Initialize the plugin externally"},"isInitialized()":{"notice":"Returns information about whether oracle is initialized"},"lastTimepointTimestamp()":{"notice":"Returns the timestamp of the last timepoint that was written."},"prepayTimepointsStorageSlots(uint16,uint16)":{"notice":"Fills uninitialized timepoints with nonzero value"},"timepointIndex()":{"notice":"Returns the index of the last timepoint that was written."},"timepoints(uint256)":{"notice":"Returns data belonging to a certain timepoint"}},"version":1}},"settings":{"remappings":["@Cyfrin/foundry-devops/=lib/foundry-devops/src/","@chainlink/contracts/=lib/mento-core/lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/","@cryptoalgebra/abstract-plugin/=lib/plugins-monorepo/packages/abstract-plugin/","@cryptoalgebra/default-plugin/=lib/plugins-monorepo/packages/default-plugin/","@cryptoalgebra/dynamic-fee-plugin/=lib/plugins-monorepo/packages/dynamic-fee/","@cryptoalgebra/farming-proxy-plugin/=lib/plugins-monorepo/packages/farming-proxy/","@cryptoalgebra/integral-core/=lib/Algebra/src/core/","@cryptoalgebra/integral-periphery/=lib/Algebra/src/periphery/","@cryptoalgebra/volatility-oracle-plugin/=lib/plugins-monorepo/packages/volatility-oracle/","@ds/=lib/mento-router/lib/multicall/lib/ds-test/src/","@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/","@mento/core/=lib/mento-core/","@mento/periphery/=lib/mento-router/","@mento/std/=lib/mento-std/","@openzeppelin-v5/=lib/openzeppelin-contracts-v5/","@openzeppelin/=lib/openzeppelin-contracts/","@prb/test/=lib/mento-core/lib/prb-math/lib/prb-test/src/","@self/=node_modules/@selfxyz/contracts/contracts/","@std/=lib/mento-router/lib/multicall/lib/forge-std/src/","@synthetixio/core-contracts/=lib/synthetix-v3/utils/core-contracts/","@synthetixio/core-modules/=lib/synthetix-v3/utils/core-modules/","@synthetixio/governance/=lib/synthetix-v3/protocol/governance/","@synthetixio/oracle-manager/=lib/synthetix-v3/protocol/oracle-manager/","@synthetixio/synthetix/=lib/synthetix-v3/protocol/synthetix/","@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/","@uniswap/v4-periphery/=lib/v4-periphery/","Algebra/=lib/Algebra/src/","Roci-Smart-Contracts-v2/=lib/Roci-Smart-Contracts-v2/contracts/","celo-foundry/=lib/mento-deployment/lib/celo-foundry/","celo/=lib/mento-core/node_modules/@celo/","chainlink-brownie-contracts/=lib/mento-core/lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/","contracts/=lib/mento-core/contracts/","ds-test/=lib/mento-router/lib/multicall/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/","forge-std-next/=lib/mento-deployment/lib/forge-std-next/src/","forge-std/=lib/forge-std/src/","foundry-chainlink-toolkit/=lib/mento-core/lib/foundry-chainlink-toolkit/","foundry-devops/=lib/foundry-devops/","governance-tests/=lib/governance-tests/","hackathon-demo/=lib/hackathon-demo/","halmos-cheatcodes/=lib/openzeppelin-contracts-v5/lib/halmos-cheatcodes/src/","hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/","mento-core-2.0.0/=lib/mento-deployment/lib/mento-core-2.0.0/contracts/","mento-core-2.1.0/=lib/mento-deployment/lib/mento-core-2.1.0/contracts/","mento-core-2.2.0/=lib/mento-deployment/lib/mento-core-2.2.0/contracts/","mento-core-2.3.1/=lib/mento-deployment/lib/mento-core-2.3.1/contracts/","mento-core-2.5.0/=lib/mento-deployment/lib/mento-core-2.5.0/contracts/","mento-core-2.6.0-oz/=lib/mento-deployment/lib/mento-core-2.6.0/lib/openzeppelin-contracts-next/","mento-core-2.6.0/=lib/mento-deployment/lib/mento-core-2.6.0/contracts/","mento-core-2.6.2/=lib/mento-deployment/lib/mento-core-2.6.2/contracts/","mento-core-2.6.3/=lib/mento-deployment/lib/mento-core-2.6.3/contracts/","mento-core-2.6.4/=lib/mento-deployment/lib/mento-core-2.6.4/contracts/","mento-core-2.6.5/=lib/mento-deployment/lib/mento-core-2.6.5/contracts/","mento-core/=lib/mento-core/contracts/","mento-deployment/=lib/mento-deployment/","mento-router/=lib/mento-router/","mento-std/=lib/mento-std/src/","merkle-distributor/=lib/mento-deployment/lib/merkle-distributor/contracts/","multicall/=lib/mento-router/lib/multicall/src/","openzeppelin-contracts-next/=lib/mento-core/lib/openzeppelin-contracts-next/","openzeppelin-contracts-upgradeable/=lib/mento-core/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts-v5/=lib/openzeppelin-contracts-v5/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-solidity/=lib/mento-core/lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","oracle-v2-playground/=lib/oracle-v2-playground/","permit2/=lib/v4-periphery/lib/permit2/","plugins-monorepo/=lib/plugins-monorepo/","prb-math/=lib/mento-core/lib/prb-math/src/","prb-test/=lib/mento-core/lib/prb-math/lib/prb-test/src/","prb/math/=lib/mento-core/lib/prb-math/src/","redstone-oracles-monorepo/=lib/oracle-v2-playground/lib/","redstone/=lib/oracle-v2-playground/lib/redstone-oracles-monorepo/packages/evm-connector/","safe-contracts/=lib/mento-core/lib/safe-contracts/","solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/","synthetix-v3/=lib/synthetix-v3/","v4-core/=lib/v4-periphery/lib/v4-core/src/","v4-periphery/=lib/v4-periphery/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"none","appendCBOR":false},"compilationTarget":{"lib/plugins-monorepo/packages/volatility-oracle/contracts/interfaces/IVolatilityOracle.sol":"IVolatilityOracle"},"evmVersion":"shanghai","libraries":{}},"sources":{"lib/plugins-monorepo/packages/volatility-oracle/contracts/interfaces/IVolatilityOracle.sol":{"keccak256":"0x663473a12108b742fc68398563d06e76aebe52e09941976b6918c9eaee14feaf","urls":["bzz-raw://d137f0fa83d0f4fe2c5406c55d82971e8636a196274180fae4507e2892544d46","dweb:/ipfs/QmZ7Sa1m5izhq3t6sNBepM7HxMgr7RL58rzMAszGtpwFYy"],"license":"GPL-2.0-or-later"}},"version":1},"id":108}