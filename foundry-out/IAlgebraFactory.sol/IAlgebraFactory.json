{"abi":[{"type":"function","name":"CUSTOM_POOL_DEPLOYER","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"POOLS_ADMINISTRATOR_ROLE","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"POOL_INIT_CODE_HASH","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"computeCustomPoolAddress","inputs":[{"name":"customDeployer","type":"address","internalType":"address"},{"name":"token0","type":"address","internalType":"address"},{"name":"token1","type":"address","internalType":"address"}],"outputs":[{"name":"customPool","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"computePoolAddress","inputs":[{"name":"token0","type":"address","internalType":"address"},{"name":"token1","type":"address","internalType":"address"}],"outputs":[{"name":"pool","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"createCustomPool","inputs":[{"name":"deployer","type":"address","internalType":"address"},{"name":"creator","type":"address","internalType":"address"},{"name":"tokenA","type":"address","internalType":"address"},{"name":"tokenB","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"customPool","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"createPool","inputs":[{"name":"tokenA","type":"address","internalType":"address"},{"name":"tokenB","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"pool","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"customPoolByPair","inputs":[{"name":"customDeployer","type":"address","internalType":"address"},{"name":"tokenA","type":"address","internalType":"address"},{"name":"tokenB","type":"address","internalType":"address"}],"outputs":[{"name":"customPool","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"defaultCommunityFee","inputs":[],"outputs":[{"name":"","type":"uint16","internalType":"uint16"}],"stateMutability":"view"},{"type":"function","name":"defaultConfigurationForPool","inputs":[],"outputs":[{"name":"communityFee","type":"uint16","internalType":"uint16"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"fee","type":"uint16","internalType":"uint16"}],"stateMutability":"view"},{"type":"function","name":"defaultFee","inputs":[],"outputs":[{"name":"","type":"uint16","internalType":"uint16"}],"stateMutability":"view"},{"type":"function","name":"defaultPluginFactory","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IAlgebraPluginFactory"}],"stateMutability":"view"},{"type":"function","name":"defaultTickspacing","inputs":[],"outputs":[{"name":"","type":"int24","internalType":"int24"}],"stateMutability":"view"},{"type":"function","name":"hasRoleOrOwner","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"poolByPair","inputs":[{"name":"tokenA","type":"address","internalType":"address"},{"name":"tokenB","type":"address","internalType":"address"}],"outputs":[{"name":"pool","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"poolDeployer","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"renounceOwnershipStartTimestamp","inputs":[],"outputs":[{"name":"timestamp","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"setDefaultCommunityFee","inputs":[{"name":"newDefaultCommunityFee","type":"uint16","internalType":"uint16"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setDefaultFee","inputs":[{"name":"newDefaultFee","type":"uint16","internalType":"uint16"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setDefaultPluginFactory","inputs":[{"name":"newDefaultPluginFactory","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setDefaultTickspacing","inputs":[{"name":"newDefaultTickspacing","type":"int24","internalType":"int24"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setVaultFactory","inputs":[{"name":"newVaultFactory","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startRenounceOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopRenounceOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"vaultFactory","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IAlgebraVaultFactory"}],"stateMutability":"view"},{"type":"event","name":"CustomPool","inputs":[{"name":"deployer","type":"address","indexed":true,"internalType":"address"},{"name":"token0","type":"address","indexed":true,"internalType":"address"},{"name":"token1","type":"address","indexed":true,"internalType":"address"},{"name":"pool","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"DefaultCommunityFee","inputs":[{"name":"newDefaultCommunityFee","type":"uint16","indexed":false,"internalType":"uint16"}],"anonymous":false},{"type":"event","name":"DefaultFee","inputs":[{"name":"newDefaultFee","type":"uint16","indexed":false,"internalType":"uint16"}],"anonymous":false},{"type":"event","name":"DefaultPluginFactory","inputs":[{"name":"defaultPluginFactoryAddress","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"DefaultTickspacing","inputs":[{"name":"newDefaultTickspacing","type":"int24","indexed":false,"internalType":"int24"}],"anonymous":false},{"type":"event","name":"Pool","inputs":[{"name":"token0","type":"address","indexed":true,"internalType":"address"},{"name":"token1","type":"address","indexed":true,"internalType":"address"},{"name":"pool","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"RenounceOwnershipFinish","inputs":[{"name":"timestamp","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RenounceOwnershipStart","inputs":[{"name":"timestamp","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"finishTimestamp","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RenounceOwnershipStop","inputs":[{"name":"timestamp","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"VaultFactory","inputs":[{"name":"newVaultFactory","type":"address","indexed":false,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"CUSTOM_POOL_DEPLOYER()":"07810754","POOLS_ADMINISTRATOR_ROLE()":"b500a48b","POOL_INIT_CODE_HASH()":"dc6fd8ab","computeCustomPoolAddress(address,address,address)":"1ba89df4","computePoolAddress(address,address)":"d8ed2241","createCustomPool(address,address,address,address,bytes)":"dbbf3db4","createPool(address,address,bytes)":"321935c6","customPoolByPair(address,address,address)":"23da36cc","defaultCommunityFee()":"2f8a39dd","defaultConfigurationForPool()":"25b355d6","defaultFee()":"5a6c72d0","defaultPluginFactory()":"d0ad2792","defaultTickspacing()":"29bc3446","hasRoleOrOwner(bytes32,address)":"e8ae2b69","owner()":"8da5cb5b","poolByPair(address,address)":"d9a641e1","poolDeployer()":"3119049a","renounceOwnershipStartTimestamp()":"084bfff9","setDefaultCommunityFee(uint16)":"8d5a8711","setDefaultFee(uint16)":"77326584","setDefaultPluginFactory(address)":"2939dd97","setDefaultTickspacing(int24)":"f09489ac","setVaultFactory(address)":"3ea7fbdb","startRenounceOwnership()":"469388c4","stopRenounceOwnership()":"238a1d74","vaultFactory()":"d8a06f73"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"CustomPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"newDefaultCommunityFee\",\"type\":\"uint16\"}],\"name\":\"DefaultCommunityFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"newDefaultFee\",\"type\":\"uint16\"}],\"name\":\"DefaultFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"defaultPluginFactoryAddress\",\"type\":\"address\"}],\"name\":\"DefaultPluginFactory\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"newDefaultTickspacing\",\"type\":\"int24\"}],\"name\":\"DefaultTickspacing\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"Pool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"RenounceOwnershipFinish\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"finishTimestamp\",\"type\":\"uint256\"}],\"name\":\"RenounceOwnershipStart\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"RenounceOwnershipStop\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newVaultFactory\",\"type\":\"address\"}],\"name\":\"VaultFactory\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CUSTOM_POOL_DEPLOYER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POOLS_ADMINISTRATOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POOL_INIT_CODE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"customDeployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"}],\"name\":\"computeCustomPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"customPool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"}],\"name\":\"computePoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"createCustomPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"customPool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"customDeployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"customPoolByPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"customPool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultCommunityFee\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultConfigurationForPool\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"communityFee\",\"type\":\"uint16\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"fee\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultFee\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultPluginFactory\",\"outputs\":[{\"internalType\":\"contract IAlgebraPluginFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultTickspacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleOrOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"poolByPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolDeployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnershipStartTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"newDefaultCommunityFee\",\"type\":\"uint16\"}],\"name\":\"setDefaultCommunityFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"newDefaultFee\",\"type\":\"uint16\"}],\"name\":\"setDefaultFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDefaultPluginFactory\",\"type\":\"address\"}],\"name\":\"setDefaultPluginFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"newDefaultTickspacing\",\"type\":\"int24\"}],\"name\":\"setDefaultTickspacing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newVaultFactory\",\"type\":\"address\"}],\"name\":\"setVaultFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startRenounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopRenounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultFactory\",\"outputs\":[{\"internalType\":\"contract IAlgebraVaultFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Credit to Uniswap Labs under GPL-2.0-or-later license: https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces\",\"events\":{\"CustomPool(address,address,address,address)\":{\"params\":{\"deployer\":\"The corresponding custom deployer contract\",\"pool\":\"The address of the created pool\",\"token0\":\"The first token of the pool by address sort order\",\"token1\":\"The second token of the pool by address sort order\"}},\"DefaultCommunityFee(uint16)\":{\"params\":{\"newDefaultCommunityFee\":\"The new default community fee value\"}},\"DefaultFee(uint16)\":{\"params\":{\"newDefaultFee\":\"The new default fee value\"}},\"DefaultPluginFactory(address)\":{\"params\":{\"defaultPluginFactoryAddress\":\"The new defaultPluginFactory address\"}},\"DefaultTickspacing(int24)\":{\"params\":{\"newDefaultTickspacing\":\"The new default tickspacing value\"}},\"Pool(address,address,address)\":{\"params\":{\"pool\":\"The address of the created pool\",\"token0\":\"The first token of the pool by address sort order\",\"token1\":\"The second token of the pool by address sort order\"}},\"RenounceOwnershipFinish(uint256)\":{\"params\":{\"timestamp\":\"The timestamp of ownership renouncement\"}},\"RenounceOwnershipStart(uint256,uint256)\":{\"params\":{\"finishTimestamp\":\"The timestamp when ownership renounce will be possible to finish\",\"timestamp\":\"The timestamp of event\"}},\"RenounceOwnershipStop(uint256)\":{\"params\":{\"timestamp\":\"The timestamp of event\"}},\"VaultFactory(address)\":{\"params\":{\"newVaultFactory\":\"The new vaultFactory address\"}}},\"kind\":\"dev\",\"methods\":{\"CUSTOM_POOL_DEPLOYER()\":{\"returns\":{\"_0\":\"The hash corresponding to this role\"}},\"POOLS_ADMINISTRATOR_ROLE()\":{\"returns\":{\"_0\":\"The hash corresponding to this role\"}},\"POOL_INIT_CODE_HASH()\":{\"details\":\"the hash value changes with any change in the pool bytecode\",\"returns\":{\"_0\":\"Keccak256 hash of AlgebraPool contract init bytecode\"}},\"computeCustomPoolAddress(address,address,address)\":{\"details\":\"The method does not check if such a pool has been created\",\"params\":{\"customDeployer\":\"the address of custom plugin deployer\",\"token0\":\"first token\",\"token1\":\"second token\"},\"returns\":{\"customPool\":\"The contract address of the Algebra pool\"}},\"computePoolAddress(address,address)\":{\"details\":\"The method does not check if such a pool has been created\",\"params\":{\"token0\":\"first token\",\"token1\":\"second token\"},\"returns\":{\"pool\":\"The contract address of the Algebra pool\"}},\"createCustomPool(address,address,address,address,bytes)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. The call will revert if the pool already exists or the token arguments are invalid.\",\"params\":{\"creator\":\"The initiator of custom pool creation\",\"data\":\"The additional data bytes\",\"deployer\":\"The address of plugin deployer, also used for custom pool address calculation\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"customPool\":\"The address of the newly created custom pool\"}},\"createPool(address,address,bytes)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. The call will revert if the pool already exists or the token arguments are invalid.\",\"params\":{\"data\":\"Data for plugin creation\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"customPoolByPair(address,address,address)\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"customDeployer\":\"The address of custom plugin deployer\",\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"returns\":{\"customPool\":\"The pool address\"}},\"defaultCommunityFee()\":{\"returns\":{\"_0\":\"Fee which will be set at the creation of the pool\"}},\"defaultConfigurationForPool()\":{\"returns\":{\"communityFee\":\"which will be set at the creation of the pool\",\"fee\":\"which will be set at the creation of the pool\",\"tickSpacing\":\"which will be set at the creation of the pool\"}},\"defaultFee()\":{\"returns\":{\"_0\":\"Fee which will be set at the creation of the pool\"}},\"defaultPluginFactory()\":{\"details\":\"This contract is used to automatically set a plugin address in new liquidity pools\",\"returns\":{\"_0\":\"Algebra plugin factory\"}},\"defaultTickspacing()\":{\"returns\":{\"_0\":\"Tickspacing which will be set at the creation of the pool\"}},\"hasRoleOrOwner(bytes32,address)\":{\"params\":{\"account\":\"The address for which the role is checked\",\"role\":\"The hash corresponding to the role\"},\"returns\":{\"_0\":\"bool Whether the address has this role or the owner role or not\"}},\"owner()\":{\"details\":\"Can be changed by the current owner via transferOwnership(address newOwner)\",\"returns\":{\"_0\":\"The address of the factory owner\"}},\"poolByPair(address,address)\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"returns\":{\"pool\":\"The pool address\"}},\"poolDeployer()\":{\"returns\":{\"_0\":\"The address of the poolDeployer\"}},\"renounceOwnershipStartTimestamp()\":{\"returns\":{\"timestamp\":\"The timestamp of the beginning of the renounceOwnership process\"}},\"setDefaultCommunityFee(uint16)\":{\"details\":\"updates default community fee for new pools\",\"params\":{\"newDefaultCommunityFee\":\"The new community fee, _must_ be <= MAX_COMMUNITY_FEE\"}},\"setDefaultFee(uint16)\":{\"details\":\"updates default fee for new pools\",\"params\":{\"newDefaultFee\":\"The new  fee, _must_ be <= MAX_DEFAULT_FEE\"}},\"setDefaultPluginFactory(address)\":{\"details\":\"updates pluginFactory address\",\"params\":{\"newDefaultPluginFactory\":\"address of new plugin factory\"}},\"setDefaultTickspacing(int24)\":{\"details\":\"updates default tickspacing for new pools\",\"params\":{\"newDefaultTickspacing\":\"The new tickspacing, _must_ be <= MAX_TICK_SPACING and >= MIN_TICK_SPACING\"}},\"setVaultFactory(address)\":{\"details\":\"updates vaultFactory address\",\"params\":{\"newVaultFactory\":\"address of new vault factory\"}},\"vaultFactory()\":{\"details\":\"This contract is used to automatically set a vault address in new liquidity pools\",\"returns\":{\"_0\":\"Algebra vault factory\"}}},\"title\":\"The interface for the Algebra Factory\",\"version\":1},\"userdoc\":{\"events\":{\"CustomPool(address,address,address,address)\":{\"notice\":\"Emitted when a pool is created\"},\"DefaultCommunityFee(uint16)\":{\"notice\":\"Emitted when the default community fee is changed\"},\"DefaultFee(uint16)\":{\"notice\":\"Emitted when the default fee is changed\"},\"DefaultPluginFactory(address)\":{\"notice\":\"Emitted when the defaultPluginFactory address is changed\"},\"DefaultTickspacing(int24)\":{\"notice\":\"Emitted when the default tickspacing is changed\"},\"Pool(address,address,address)\":{\"notice\":\"Emitted when a pool is created\"},\"RenounceOwnershipFinish(uint256)\":{\"notice\":\"Emitted when a process of ownership renounce finished\"},\"RenounceOwnershipStart(uint256,uint256)\":{\"notice\":\"Emitted when a process of ownership renounce is started\"},\"RenounceOwnershipStop(uint256)\":{\"notice\":\"Emitted when a process of ownership renounce cancelled\"},\"VaultFactory(address)\":{\"notice\":\"Emitted when the vaultFactory address is changed\"}},\"kind\":\"user\",\"methods\":{\"CUSTOM_POOL_DEPLOYER()\":{\"notice\":\"role that can call `createCustomPool` function\"},\"POOLS_ADMINISTRATOR_ROLE()\":{\"notice\":\"role that can change communityFee and tickspacing in pools\"},\"POOL_INIT_CODE_HASH()\":{\"notice\":\"returns keccak256 of AlgebraPool init bytecode.\"},\"computeCustomPoolAddress(address,address,address)\":{\"notice\":\"Deterministically computes the custom pool address given the customDeployer, token0 and token1\"},\"computePoolAddress(address,address)\":{\"notice\":\"Deterministically computes the pool address given the token0 and token1\"},\"createCustomPool(address,address,address,address,bytes)\":{\"notice\":\"Creates a custom pool for the given two tokens using `deployer` contract\"},\"createPool(address,address,bytes)\":{\"notice\":\"Creates a pool for the given two tokens\"},\"customPoolByPair(address,address,address)\":{\"notice\":\"Returns the custom pool address for a customDeployer and a given pair of tokens, or address 0 if it does not exist\"},\"defaultCommunityFee()\":{\"notice\":\"Returns the default community fee\"},\"defaultConfigurationForPool()\":{\"notice\":\"Returns the default communityFee, tickspacing, fee and communityFeeVault for pool\"},\"defaultFee()\":{\"notice\":\"Returns the default fee\"},\"defaultPluginFactory()\":{\"notice\":\"Return the current pluginFactory address\"},\"defaultTickspacing()\":{\"notice\":\"Returns the default tickspacing\"},\"hasRoleOrOwner(bytes32,address)\":{\"notice\":\"Returns `true` if `account` has been granted `role` or `account` is owner.\"},\"owner()\":{\"notice\":\"Returns the current owner of the factory\"},\"poolByPair(address,address)\":{\"notice\":\"Returns the pool address for a given pair of tokens, or address 0 if it does not exist\"},\"poolDeployer()\":{\"notice\":\"Returns the current poolDeployerAddress\"},\"startRenounceOwnership()\":{\"notice\":\"Starts process of renounceOwnership. After that, a certain period of time must pass before the ownership renounce can be completed.\"},\"stopRenounceOwnership()\":{\"notice\":\"Stops process of renounceOwnership and removes timer.\"},\"vaultFactory()\":{\"notice\":\"Return the current vaultFactory address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/Algebra/src/core/contracts/interfaces/IAlgebraFactory.sol\":\"IAlgebraFactory\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@Cyfrin/foundry-devops/=lib/foundry-devops/src/\",\":@chainlink/contracts/=lib/mento-core/lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/\",\":@cryptoalgebra/abstract-plugin/=lib/plugins-monorepo/packages/abstract-plugin/\",\":@cryptoalgebra/default-plugin/=lib/plugins-monorepo/packages/default-plugin/\",\":@cryptoalgebra/dynamic-fee-plugin/=lib/plugins-monorepo/packages/dynamic-fee/\",\":@cryptoalgebra/farming-proxy-plugin/=lib/plugins-monorepo/packages/farming-proxy/\",\":@cryptoalgebra/integral-core/=lib/Algebra/src/core/\",\":@cryptoalgebra/integral-periphery/=lib/Algebra/src/periphery/\",\":@cryptoalgebra/volatility-oracle-plugin/=lib/plugins-monorepo/packages/volatility-oracle/\",\":@ds/=lib/mento-router/lib/multicall/lib/ds-test/src/\",\":@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/\",\":@mento/core/=lib/mento-core/\",\":@mento/periphery/=lib/mento-router/\",\":@mento/std/=lib/mento-std/\",\":@openzeppelin-v5/=lib/openzeppelin-contracts-v5/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@prb/test/=lib/mento-core/lib/prb-math/lib/prb-test/src/\",\":@self/=node_modules/@selfxyz/contracts/contracts/\",\":@std/=lib/mento-router/lib/multicall/lib/forge-std/src/\",\":@synthetixio/core-contracts/=lib/synthetix-v3/utils/core-contracts/\",\":@synthetixio/core-modules/=lib/synthetix-v3/utils/core-modules/\",\":@synthetixio/governance/=lib/synthetix-v3/protocol/governance/\",\":@synthetixio/oracle-manager/=lib/synthetix-v3/protocol/oracle-manager/\",\":@synthetixio/synthetix/=lib/synthetix-v3/protocol/synthetix/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":@uniswap/v4-periphery/=lib/v4-periphery/\",\":Algebra/=lib/Algebra/src/\",\":Roci-Smart-Contracts-v2/=lib/Roci-Smart-Contracts-v2/contracts/\",\":celo-foundry/=lib/mento-deployment/lib/celo-foundry/\",\":celo/=lib/mento-core/node_modules/@celo/\",\":chainlink-brownie-contracts/=lib/mento-core/lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":contracts/=lib/mento-core/contracts/\",\":ds-test/=lib/mento-router/lib/multicall/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std-next/=lib/mento-deployment/lib/forge-std-next/src/\",\":forge-std/=lib/forge-std/src/\",\":foundry-chainlink-toolkit/=lib/mento-core/lib/foundry-chainlink-toolkit/\",\":foundry-devops/=lib/foundry-devops/\",\":governance-tests/=lib/governance-tests/\",\":hackathon-demo/=lib/hackathon-demo/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts-v5/lib/halmos-cheatcodes/src/\",\":hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/\",\":mento-core-2.0.0/=lib/mento-deployment/lib/mento-core-2.0.0/contracts/\",\":mento-core-2.1.0/=lib/mento-deployment/lib/mento-core-2.1.0/contracts/\",\":mento-core-2.2.0/=lib/mento-deployment/lib/mento-core-2.2.0/contracts/\",\":mento-core-2.3.1/=lib/mento-deployment/lib/mento-core-2.3.1/contracts/\",\":mento-core-2.5.0/=lib/mento-deployment/lib/mento-core-2.5.0/contracts/\",\":mento-core-2.6.0-oz/=lib/mento-deployment/lib/mento-core-2.6.0/lib/openzeppelin-contracts-next/\",\":mento-core-2.6.0/=lib/mento-deployment/lib/mento-core-2.6.0/contracts/\",\":mento-core-2.6.2/=lib/mento-deployment/lib/mento-core-2.6.2/contracts/\",\":mento-core-2.6.3/=lib/mento-deployment/lib/mento-core-2.6.3/contracts/\",\":mento-core-2.6.4/=lib/mento-deployment/lib/mento-core-2.6.4/contracts/\",\":mento-core-2.6.5/=lib/mento-deployment/lib/mento-core-2.6.5/contracts/\",\":mento-core/=lib/mento-core/contracts/\",\":mento-deployment/=lib/mento-deployment/\",\":mento-router/=lib/mento-router/\",\":mento-std/=lib/mento-std/src/\",\":merkle-distributor/=lib/mento-deployment/lib/merkle-distributor/contracts/\",\":multicall/=lib/mento-router/lib/multicall/src/\",\":openzeppelin-contracts-next/=lib/mento-core/lib/openzeppelin-contracts-next/\",\":openzeppelin-contracts-upgradeable/=lib/mento-core/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v5/=lib/openzeppelin-contracts-v5/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-solidity/=lib/mento-core/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":oracle-v2-playground/=lib/oracle-v2-playground/\",\":permit2/=lib/v4-periphery/lib/permit2/\",\":plugins-monorepo/=lib/plugins-monorepo/\",\":prb-math/=lib/mento-core/lib/prb-math/src/\",\":prb-test/=lib/mento-core/lib/prb-math/lib/prb-test/src/\",\":prb/math/=lib/mento-core/lib/prb-math/src/\",\":redstone-oracles-monorepo/=lib/oracle-v2-playground/lib/\",\":redstone/=lib/oracle-v2-playground/lib/redstone-oracles-monorepo/packages/evm-connector/\",\":safe-contracts/=lib/mento-core/lib/safe-contracts/\",\":solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/\",\":synthetix-v3/=lib/synthetix-v3/\",\":v4-core/=lib/v4-periphery/lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/\"]},\"sources\":{\"lib/Algebra/src/core/contracts/interfaces/IAlgebraFactory.sol\":{\"keccak256\":\"0xb87bef911483f054559e6567a5a958200131b5101fbcee1ed7daefcfc082faf7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://46c8f76cde3c16aed0446e98dc61ddb196288652f6a8735ed87d6e53a13b4142\",\"dweb:/ipfs/Qmd7omugWuFrjrCcwfeRQbeUS1FhqvhscTij4xtqCmjNKG\"]},\"lib/Algebra/src/core/contracts/interfaces/plugin/IAlgebraPluginFactory.sol\":{\"keccak256\":\"0xf1cc5f09fc738bf41381fdf6864919c07965f25e715af6982df54605ce3a32fc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6fa8803e45159a6c404fd714321bc2ba0e010e76e3755594628f0c0bc9204182\",\"dweb:/ipfs/QmSAtmyH38VtzgycYTjGF3Y5aWG6DPjWD3JDjGVAn4fi2m\"]},\"lib/Algebra/src/core/contracts/interfaces/vault/IAlgebraVaultFactory.sol\":{\"keccak256\":\"0xcdaae6cd6af79c4f344e673fe886a980ef5203b15b49f7a466c336c0152ce6ae\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fa2d3073bd4ca013e2769cf0fa5b68f32cec4fa53a6cc66adb59d86e6293cf15\",\"dweb:/ipfs/QmcwveJdf3JLAPfFZShijKTTxMTP4joDDuSuFboXBe711S\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"deployer","type":"address","indexed":true},{"internalType":"address","name":"token0","type":"address","indexed":true},{"internalType":"address","name":"token1","type":"address","indexed":true},{"internalType":"address","name":"pool","type":"address","indexed":false}],"type":"event","name":"CustomPool","anonymous":false},{"inputs":[{"internalType":"uint16","name":"newDefaultCommunityFee","type":"uint16","indexed":false}],"type":"event","name":"DefaultCommunityFee","anonymous":false},{"inputs":[{"internalType":"uint16","name":"newDefaultFee","type":"uint16","indexed":false}],"type":"event","name":"DefaultFee","anonymous":false},{"inputs":[{"internalType":"address","name":"defaultPluginFactoryAddress","type":"address","indexed":false}],"type":"event","name":"DefaultPluginFactory","anonymous":false},{"inputs":[{"internalType":"int24","name":"newDefaultTickspacing","type":"int24","indexed":false}],"type":"event","name":"DefaultTickspacing","anonymous":false},{"inputs":[{"internalType":"address","name":"token0","type":"address","indexed":true},{"internalType":"address","name":"token1","type":"address","indexed":true},{"internalType":"address","name":"pool","type":"address","indexed":false}],"type":"event","name":"Pool","anonymous":false},{"inputs":[{"internalType":"uint256","name":"timestamp","type":"uint256","indexed":false}],"type":"event","name":"RenounceOwnershipFinish","anonymous":false},{"inputs":[{"internalType":"uint256","name":"timestamp","type":"uint256","indexed":false},{"internalType":"uint256","name":"finishTimestamp","type":"uint256","indexed":false}],"type":"event","name":"RenounceOwnershipStart","anonymous":false},{"inputs":[{"internalType":"uint256","name":"timestamp","type":"uint256","indexed":false}],"type":"event","name":"RenounceOwnershipStop","anonymous":false},{"inputs":[{"internalType":"address","name":"newVaultFactory","type":"address","indexed":false}],"type":"event","name":"VaultFactory","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"CUSTOM_POOL_DEPLOYER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"POOLS_ADMINISTRATOR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"POOL_INIT_CODE_HASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"customDeployer","type":"address"},{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"}],"stateMutability":"view","type":"function","name":"computeCustomPoolAddress","outputs":[{"internalType":"address","name":"customPool","type":"address"}]},{"inputs":[{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"}],"stateMutability":"view","type":"function","name":"computePoolAddress","outputs":[{"internalType":"address","name":"pool","type":"address"}]},{"inputs":[{"internalType":"address","name":"deployer","type":"address"},{"internalType":"address","name":"creator","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"createCustomPool","outputs":[{"internalType":"address","name":"customPool","type":"address"}]},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"createPool","outputs":[{"internalType":"address","name":"pool","type":"address"}]},{"inputs":[{"internalType":"address","name":"customDeployer","type":"address"},{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"}],"stateMutability":"view","type":"function","name":"customPoolByPair","outputs":[{"internalType":"address","name":"customPool","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"defaultCommunityFee","outputs":[{"internalType":"uint16","name":"","type":"uint16"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"defaultConfigurationForPool","outputs":[{"internalType":"uint16","name":"communityFee","type":"uint16"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"uint16","name":"fee","type":"uint16"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"defaultFee","outputs":[{"internalType":"uint16","name":"","type":"uint16"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"defaultPluginFactory","outputs":[{"internalType":"contract IAlgebraPluginFactory","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"defaultTickspacing","outputs":[{"internalType":"int24","name":"","type":"int24"}]},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"hasRoleOrOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"}],"stateMutability":"view","type":"function","name":"poolByPair","outputs":[{"internalType":"address","name":"pool","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"poolDeployer","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"renounceOwnershipStartTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}]},{"inputs":[{"internalType":"uint16","name":"newDefaultCommunityFee","type":"uint16"}],"stateMutability":"nonpayable","type":"function","name":"setDefaultCommunityFee"},{"inputs":[{"internalType":"uint16","name":"newDefaultFee","type":"uint16"}],"stateMutability":"nonpayable","type":"function","name":"setDefaultFee"},{"inputs":[{"internalType":"address","name":"newDefaultPluginFactory","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setDefaultPluginFactory"},{"inputs":[{"internalType":"int24","name":"newDefaultTickspacing","type":"int24"}],"stateMutability":"nonpayable","type":"function","name":"setDefaultTickspacing"},{"inputs":[{"internalType":"address","name":"newVaultFactory","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setVaultFactory"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startRenounceOwnership"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopRenounceOwnership"},{"inputs":[],"stateMutability":"view","type":"function","name":"vaultFactory","outputs":[{"internalType":"contract IAlgebraVaultFactory","name":"","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"CUSTOM_POOL_DEPLOYER()":{"returns":{"_0":"The hash corresponding to this role"}},"POOLS_ADMINISTRATOR_ROLE()":{"returns":{"_0":"The hash corresponding to this role"}},"POOL_INIT_CODE_HASH()":{"details":"the hash value changes with any change in the pool bytecode","returns":{"_0":"Keccak256 hash of AlgebraPool contract init bytecode"}},"computeCustomPoolAddress(address,address,address)":{"details":"The method does not check if such a pool has been created","params":{"customDeployer":"the address of custom plugin deployer","token0":"first token","token1":"second token"},"returns":{"customPool":"The contract address of the Algebra pool"}},"computePoolAddress(address,address)":{"details":"The method does not check if such a pool has been created","params":{"token0":"first token","token1":"second token"},"returns":{"pool":"The contract address of the Algebra pool"}},"createCustomPool(address,address,address,address,bytes)":{"details":"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. The call will revert if the pool already exists or the token arguments are invalid.","params":{"creator":"The initiator of custom pool creation","data":"The additional data bytes","deployer":"The address of plugin deployer, also used for custom pool address calculation","tokenA":"One of the two tokens in the desired pool","tokenB":"The other of the two tokens in the desired pool"},"returns":{"customPool":"The address of the newly created custom pool"}},"createPool(address,address,bytes)":{"details":"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. The call will revert if the pool already exists or the token arguments are invalid.","params":{"data":"Data for plugin creation","tokenA":"One of the two tokens in the desired pool","tokenB":"The other of the two tokens in the desired pool"},"returns":{"pool":"The address of the newly created pool"}},"customPoolByPair(address,address,address)":{"details":"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order","params":{"customDeployer":"The address of custom plugin deployer","tokenA":"The contract address of either token0 or token1","tokenB":"The contract address of the other token"},"returns":{"customPool":"The pool address"}},"defaultCommunityFee()":{"returns":{"_0":"Fee which will be set at the creation of the pool"}},"defaultConfigurationForPool()":{"returns":{"communityFee":"which will be set at the creation of the pool","fee":"which will be set at the creation of the pool","tickSpacing":"which will be set at the creation of the pool"}},"defaultFee()":{"returns":{"_0":"Fee which will be set at the creation of the pool"}},"defaultPluginFactory()":{"details":"This contract is used to automatically set a plugin address in new liquidity pools","returns":{"_0":"Algebra plugin factory"}},"defaultTickspacing()":{"returns":{"_0":"Tickspacing which will be set at the creation of the pool"}},"hasRoleOrOwner(bytes32,address)":{"params":{"account":"The address for which the role is checked","role":"The hash corresponding to the role"},"returns":{"_0":"bool Whether the address has this role or the owner role or not"}},"owner()":{"details":"Can be changed by the current owner via transferOwnership(address newOwner)","returns":{"_0":"The address of the factory owner"}},"poolByPair(address,address)":{"details":"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order","params":{"tokenA":"The contract address of either token0 or token1","tokenB":"The contract address of the other token"},"returns":{"pool":"The pool address"}},"poolDeployer()":{"returns":{"_0":"The address of the poolDeployer"}},"renounceOwnershipStartTimestamp()":{"returns":{"timestamp":"The timestamp of the beginning of the renounceOwnership process"}},"setDefaultCommunityFee(uint16)":{"details":"updates default community fee for new pools","params":{"newDefaultCommunityFee":"The new community fee, _must_ be <= MAX_COMMUNITY_FEE"}},"setDefaultFee(uint16)":{"details":"updates default fee for new pools","params":{"newDefaultFee":"The new  fee, _must_ be <= MAX_DEFAULT_FEE"}},"setDefaultPluginFactory(address)":{"details":"updates pluginFactory address","params":{"newDefaultPluginFactory":"address of new plugin factory"}},"setDefaultTickspacing(int24)":{"details":"updates default tickspacing for new pools","params":{"newDefaultTickspacing":"The new tickspacing, _must_ be <= MAX_TICK_SPACING and >= MIN_TICK_SPACING"}},"setVaultFactory(address)":{"details":"updates vaultFactory address","params":{"newVaultFactory":"address of new vault factory"}},"vaultFactory()":{"details":"This contract is used to automatically set a vault address in new liquidity pools","returns":{"_0":"Algebra vault factory"}}},"version":1},"userdoc":{"kind":"user","methods":{"CUSTOM_POOL_DEPLOYER()":{"notice":"role that can call `createCustomPool` function"},"POOLS_ADMINISTRATOR_ROLE()":{"notice":"role that can change communityFee and tickspacing in pools"},"POOL_INIT_CODE_HASH()":{"notice":"returns keccak256 of AlgebraPool init bytecode."},"computeCustomPoolAddress(address,address,address)":{"notice":"Deterministically computes the custom pool address given the customDeployer, token0 and token1"},"computePoolAddress(address,address)":{"notice":"Deterministically computes the pool address given the token0 and token1"},"createCustomPool(address,address,address,address,bytes)":{"notice":"Creates a custom pool for the given two tokens using `deployer` contract"},"createPool(address,address,bytes)":{"notice":"Creates a pool for the given two tokens"},"customPoolByPair(address,address,address)":{"notice":"Returns the custom pool address for a customDeployer and a given pair of tokens, or address 0 if it does not exist"},"defaultCommunityFee()":{"notice":"Returns the default community fee"},"defaultConfigurationForPool()":{"notice":"Returns the default communityFee, tickspacing, fee and communityFeeVault for pool"},"defaultFee()":{"notice":"Returns the default fee"},"defaultPluginFactory()":{"notice":"Return the current pluginFactory address"},"defaultTickspacing()":{"notice":"Returns the default tickspacing"},"hasRoleOrOwner(bytes32,address)":{"notice":"Returns `true` if `account` has been granted `role` or `account` is owner."},"owner()":{"notice":"Returns the current owner of the factory"},"poolByPair(address,address)":{"notice":"Returns the pool address for a given pair of tokens, or address 0 if it does not exist"},"poolDeployer()":{"notice":"Returns the current poolDeployerAddress"},"startRenounceOwnership()":{"notice":"Starts process of renounceOwnership. After that, a certain period of time must pass before the ownership renounce can be completed."},"stopRenounceOwnership()":{"notice":"Stops process of renounceOwnership and removes timer."},"vaultFactory()":{"notice":"Return the current vaultFactory address"}},"version":1}},"settings":{"remappings":["@Cyfrin/foundry-devops/=lib/foundry-devops/src/","@chainlink/contracts/=lib/mento-core/lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/","@cryptoalgebra/abstract-plugin/=lib/plugins-monorepo/packages/abstract-plugin/","@cryptoalgebra/default-plugin/=lib/plugins-monorepo/packages/default-plugin/","@cryptoalgebra/dynamic-fee-plugin/=lib/plugins-monorepo/packages/dynamic-fee/","@cryptoalgebra/farming-proxy-plugin/=lib/plugins-monorepo/packages/farming-proxy/","@cryptoalgebra/integral-core/=lib/Algebra/src/core/","@cryptoalgebra/integral-periphery/=lib/Algebra/src/periphery/","@cryptoalgebra/volatility-oracle-plugin/=lib/plugins-monorepo/packages/volatility-oracle/","@ds/=lib/mento-router/lib/multicall/lib/ds-test/src/","@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/","@mento/core/=lib/mento-core/","@mento/periphery/=lib/mento-router/","@mento/std/=lib/mento-std/","@openzeppelin-v5/=lib/openzeppelin-contracts-v5/","@openzeppelin/=lib/openzeppelin-contracts/","@prb/test/=lib/mento-core/lib/prb-math/lib/prb-test/src/","@self/=node_modules/@selfxyz/contracts/contracts/","@std/=lib/mento-router/lib/multicall/lib/forge-std/src/","@synthetixio/core-contracts/=lib/synthetix-v3/utils/core-contracts/","@synthetixio/core-modules/=lib/synthetix-v3/utils/core-modules/","@synthetixio/governance/=lib/synthetix-v3/protocol/governance/","@synthetixio/oracle-manager/=lib/synthetix-v3/protocol/oracle-manager/","@synthetixio/synthetix/=lib/synthetix-v3/protocol/synthetix/","@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/","@uniswap/v4-periphery/=lib/v4-periphery/","Algebra/=lib/Algebra/src/","Roci-Smart-Contracts-v2/=lib/Roci-Smart-Contracts-v2/contracts/","celo-foundry/=lib/mento-deployment/lib/celo-foundry/","celo/=lib/mento-core/node_modules/@celo/","chainlink-brownie-contracts/=lib/mento-core/lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/","contracts/=lib/mento-core/contracts/","ds-test/=lib/mento-router/lib/multicall/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/","forge-std-next/=lib/mento-deployment/lib/forge-std-next/src/","forge-std/=lib/forge-std/src/","foundry-chainlink-toolkit/=lib/mento-core/lib/foundry-chainlink-toolkit/","foundry-devops/=lib/foundry-devops/","governance-tests/=lib/governance-tests/","hackathon-demo/=lib/hackathon-demo/","halmos-cheatcodes/=lib/openzeppelin-contracts-v5/lib/halmos-cheatcodes/src/","hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/","mento-core-2.0.0/=lib/mento-deployment/lib/mento-core-2.0.0/contracts/","mento-core-2.1.0/=lib/mento-deployment/lib/mento-core-2.1.0/contracts/","mento-core-2.2.0/=lib/mento-deployment/lib/mento-core-2.2.0/contracts/","mento-core-2.3.1/=lib/mento-deployment/lib/mento-core-2.3.1/contracts/","mento-core-2.5.0/=lib/mento-deployment/lib/mento-core-2.5.0/contracts/","mento-core-2.6.0-oz/=lib/mento-deployment/lib/mento-core-2.6.0/lib/openzeppelin-contracts-next/","mento-core-2.6.0/=lib/mento-deployment/lib/mento-core-2.6.0/contracts/","mento-core-2.6.2/=lib/mento-deployment/lib/mento-core-2.6.2/contracts/","mento-core-2.6.3/=lib/mento-deployment/lib/mento-core-2.6.3/contracts/","mento-core-2.6.4/=lib/mento-deployment/lib/mento-core-2.6.4/contracts/","mento-core-2.6.5/=lib/mento-deployment/lib/mento-core-2.6.5/contracts/","mento-core/=lib/mento-core/contracts/","mento-deployment/=lib/mento-deployment/","mento-router/=lib/mento-router/","mento-std/=lib/mento-std/src/","merkle-distributor/=lib/mento-deployment/lib/merkle-distributor/contracts/","multicall/=lib/mento-router/lib/multicall/src/","openzeppelin-contracts-next/=lib/mento-core/lib/openzeppelin-contracts-next/","openzeppelin-contracts-upgradeable/=lib/mento-core/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts-v5/=lib/openzeppelin-contracts-v5/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-solidity/=lib/mento-core/lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","oracle-v2-playground/=lib/oracle-v2-playground/","permit2/=lib/v4-periphery/lib/permit2/","plugins-monorepo/=lib/plugins-monorepo/","prb-math/=lib/mento-core/lib/prb-math/src/","prb-test/=lib/mento-core/lib/prb-math/lib/prb-test/src/","prb/math/=lib/mento-core/lib/prb-math/src/","redstone-oracles-monorepo/=lib/oracle-v2-playground/lib/","redstone/=lib/oracle-v2-playground/lib/redstone-oracles-monorepo/packages/evm-connector/","safe-contracts/=lib/mento-core/lib/safe-contracts/","solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/","synthetix-v3/=lib/synthetix-v3/","v4-core/=lib/v4-periphery/lib/v4-core/src/","v4-periphery/=lib/v4-periphery/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"none","appendCBOR":false},"compilationTarget":{"lib/Algebra/src/core/contracts/interfaces/IAlgebraFactory.sol":"IAlgebraFactory"},"evmVersion":"shanghai","libraries":{}},"sources":{"lib/Algebra/src/core/contracts/interfaces/IAlgebraFactory.sol":{"keccak256":"0xb87bef911483f054559e6567a5a958200131b5101fbcee1ed7daefcfc082faf7","urls":["bzz-raw://46c8f76cde3c16aed0446e98dc61ddb196288652f6a8735ed87d6e53a13b4142","dweb:/ipfs/Qmd7omugWuFrjrCcwfeRQbeUS1FhqvhscTij4xtqCmjNKG"],"license":"GPL-2.0-or-later"},"lib/Algebra/src/core/contracts/interfaces/plugin/IAlgebraPluginFactory.sol":{"keccak256":"0xf1cc5f09fc738bf41381fdf6864919c07965f25e715af6982df54605ce3a32fc","urls":["bzz-raw://6fa8803e45159a6c404fd714321bc2ba0e010e76e3755594628f0c0bc9204182","dweb:/ipfs/QmSAtmyH38VtzgycYTjGF3Y5aWG6DPjWD3JDjGVAn4fi2m"],"license":"GPL-2.0-or-later"},"lib/Algebra/src/core/contracts/interfaces/vault/IAlgebraVaultFactory.sol":{"keccak256":"0xcdaae6cd6af79c4f344e673fe886a980ef5203b15b49f7a466c336c0152ce6ae","urls":["bzz-raw://fa2d3073bd4ca013e2769cf0fa5b68f32cec4fa53a6cc66adb59d86e6293cf15","dweb:/ipfs/QmcwveJdf3JLAPfFZShijKTTxMTP4joDDuSuFboXBe711S"],"license":"GPL-2.0-or-later"}},"version":1},"id":11}