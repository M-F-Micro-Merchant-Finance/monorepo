{"abi":[{"type":"function","name":"afterFlash","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"recipient","type":"address","internalType":"address"},{"name":"amount0","type":"uint256","internalType":"uint256"},{"name":"amount1","type":"uint256","internalType":"uint256"},{"name":"paid0","type":"uint256","internalType":"uint256"},{"name":"paid1","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"afterInitialize","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"sqrtPriceX96","type":"uint160","internalType":"uint160"},{"name":"tick","type":"int24","internalType":"int24"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"afterModifyPosition","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"recipient","type":"address","internalType":"address"},{"name":"bottomTick","type":"int24","internalType":"int24"},{"name":"topTick","type":"int24","internalType":"int24"},{"name":"desiredLiquidityDelta","type":"int128","internalType":"int128"},{"name":"amount0","type":"uint256","internalType":"uint256"},{"name":"amount1","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"afterSwap","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"recipient","type":"address","internalType":"address"},{"name":"zeroToOne","type":"bool","internalType":"bool"},{"name":"amountRequired","type":"int256","internalType":"int256"},{"name":"limitSqrtPrice","type":"uint160","internalType":"uint160"},{"name":"amount0","type":"int256","internalType":"int256"},{"name":"amount1","type":"int256","internalType":"int256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"beforeFlash","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"recipient","type":"address","internalType":"address"},{"name":"amount0","type":"uint256","internalType":"uint256"},{"name":"amount1","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"beforeInitialize","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"sqrtPriceX96","type":"uint160","internalType":"uint160"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"beforeModifyPosition","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"recipient","type":"address","internalType":"address"},{"name":"bottomTick","type":"int24","internalType":"int24"},{"name":"topTick","type":"int24","internalType":"int24"},{"name":"desiredLiquidityDelta","type":"int128","internalType":"int128"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"selector","type":"bytes4","internalType":"bytes4"},{"name":"pluginFee","type":"uint24","internalType":"uint24"}],"stateMutability":"nonpayable"},{"type":"function","name":"beforeSwap","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"recipient","type":"address","internalType":"address"},{"name":"zeroToOne","type":"bool","internalType":"bool"},{"name":"amountRequired","type":"int256","internalType":"int256"},{"name":"limitSqrtPrice","type":"uint160","internalType":"uint160"},{"name":"withPaymentInAdvance","type":"bool","internalType":"bool"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"selector","type":"bytes4","internalType":"bytes4"},{"name":"feeOverride","type":"uint24","internalType":"uint24"},{"name":"pluginFee","type":"uint24","internalType":"uint24"}],"stateMutability":"nonpayable"},{"type":"function","name":"defaultPluginConfig","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"handlePluginFee","inputs":[{"name":"pluginFee0","type":"uint256","internalType":"uint256"},{"name":"pluginFee1","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"afterFlash(address,address,uint256,uint256,uint256,uint256,bytes)":"343d37ff","afterInitialize(address,uint160,int24)":"82dd6522","afterModifyPosition(address,address,int24,int24,int128,uint256,uint256,bytes)":"d6852010","afterSwap(address,address,bool,int256,uint160,int256,int256,bytes)":"9cb5a963","beforeFlash(address,address,uint256,uint256,bytes)":"8de0a8ee","beforeInitialize(address,uint160)":"636fd804","beforeModifyPosition(address,address,int24,int24,int128,bytes)":"5e2411b2","beforeSwap(address,address,bool,int256,uint160,bool,bytes)":"029c1cb7","defaultPluginConfig()":"689ea370","handlePluginFee(uint256,uint256)":"aa6b14bb"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"afterFlash\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"afterInitialize\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"bottomTick\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"topTick\",\"type\":\"int24\"},{\"internalType\":\"int128\",\"name\":\"desiredLiquidityDelta\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"afterModifyPosition\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroToOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountRequired\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"limitSqrtPrice\",\"type\":\"uint160\"},{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"afterSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"beforeFlash\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"beforeInitialize\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"bottomTick\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"topTick\",\"type\":\"int24\"},{\"internalType\":\"int128\",\"name\":\"desiredLiquidityDelta\",\"type\":\"int128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"beforeModifyPosition\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"uint24\",\"name\":\"pluginFee\",\"type\":\"uint24\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroToOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountRequired\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"limitSqrtPrice\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"withPaymentInAdvance\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"beforeSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"uint24\",\"name\":\"feeOverride\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"pluginFee\",\"type\":\"uint24\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultPluginConfig\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pluginFee0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pluginFee1\",\"type\":\"uint256\"}],\"name\":\"handlePluginFee\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The plugin will be called by the pool using hook methods depending on the current pool settings\",\"kind\":\"dev\",\"methods\":{\"afterFlash(address,address,uint256,uint256,uint256,uint256,bytes)\":{\"params\":{\"amount0\":\"The amount of token0 being requested for flash\",\"amount1\":\"The amount of token1 being requested for flash\",\"data\":\"Data that passed through the callback\",\"paid0\":\"The amount of token0 being paid for flash\",\"paid1\":\"The amount of token1 being paid for flash\",\"recipient\":\"The address which will receive the token0 and token1 amounts\",\"sender\":\"The initial msg.sender for the flash call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"afterInitialize(address,uint160,int24)\":{\"params\":{\"sender\":\"The initial msg.sender for the initialize call\",\"sqrtPriceX96\":\"The sqrt(price) of the pool as a Q64.96\",\"tick\":\"The current tick after the state of a pool is initialized\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"afterModifyPosition(address,address,int24,int24,int128,uint256,uint256,bytes)\":{\"params\":{\"amount0\":\"The amount of token0 sent to the recipient or was paid to mint\",\"amount1\":\"The amount of token0 sent to the recipient or was paid to mint\",\"bottomTick\":\"The lower tick of the position\",\"data\":\"Data that passed through the callback\",\"desiredLiquidityDelta\":\"The desired amount of liquidity to mint/burn\",\"recipient\":\"Address to which the liquidity will be assigned in case of a mint or to which tokens will be sent in case of a burn\",\"sender\":\"The initial msg.sender for the modify position call\",\"topTick\":\"The upper tick of the position\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"afterSwap(address,address,bool,int256,uint160,int256,int256,bytes)\":{\"params\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\",\"amountRequired\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Data that passed through the callback\",\"limitSqrtPrice\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"recipient\":\"The address to receive the output of the swap\",\"sender\":\"The initial msg.sender for the swap call\",\"zeroToOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeFlash(address,address,uint256,uint256,bytes)\":{\"params\":{\"amount0\":\"The amount of token0 being requested for flash\",\"amount1\":\"The amount of token1 being requested for flash\",\"data\":\"Data that passed through the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\",\"sender\":\"The initial msg.sender for the flash call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeInitialize(address,uint160)\":{\"params\":{\"sender\":\"The initial msg.sender for the initialize call\",\"sqrtPriceX96\":\"The sqrt(price) of the pool as a Q64.96\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeModifyPosition(address,address,int24,int24,int128,bytes)\":{\"params\":{\"bottomTick\":\"The lower tick of the position\",\"data\":\"Data that passed through the callback\",\"desiredLiquidityDelta\":\"The desired amount of liquidity to mint/burn\",\"recipient\":\"Address to which the liquidity will be assigned in case of a mint or to which tokens will be sent in case of a burn\",\"sender\":\"The initial msg.sender for the modify position call\",\"topTick\":\"The upper tick of the position\"},\"returns\":{\"selector\":\"The function selector for the hook\"}},\"beforeSwap(address,address,bool,int256,uint160,bool,bytes)\":{\"params\":{\"amountRequired\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Data that passed through the callback\",\"limitSqrtPrice\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"recipient\":\"The address to receive the output of the swap\",\"sender\":\"The initial msg.sender for the swap call\",\"withPaymentInAdvance\":\"The flag indicating whether the `swapWithPaymentInAdvance` method was called\",\"zeroToOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"selector\":\"The function selector for the hook\"}},\"defaultPluginConfig()\":{\"returns\":{\"_0\":\"config Each bit of the config is responsible for enabling/disabling the hooks. The last bit indicates whether the plugin contains dynamic fees logic\"}},\"handlePluginFee(uint256,uint256)\":{\"params\":{\"pluginFee0\":\"Fee0 amount transferred to plugin\",\"pluginFee1\":\"Fee1 amount transferred to plugin\"},\"returns\":{\"_0\":\"bytes4 The function selector\"}}},\"title\":\"The Algebra plugin interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"afterFlash(address,address,uint256,uint256,uint256,uint256,bytes)\":{\"notice\":\"The hook called after flash\"},\"afterInitialize(address,uint160,int24)\":{\"notice\":\"The hook called after the state of a pool is initialized\"},\"afterModifyPosition(address,address,int24,int24,int128,uint256,uint256,bytes)\":{\"notice\":\"The hook called after a position is modified\"},\"afterSwap(address,address,bool,int256,uint160,int256,int256,bytes)\":{\"notice\":\"The hook called after a swap\"},\"beforeFlash(address,address,uint256,uint256,bytes)\":{\"notice\":\"The hook called before flash\"},\"beforeInitialize(address,uint160)\":{\"notice\":\"The hook called before the state of a pool is initialized\"},\"beforeModifyPosition(address,address,int24,int24,int128,bytes)\":{\"notice\":\"The hook called before a position is modified\"},\"beforeSwap(address,address,bool,int256,uint160,bool,bytes)\":{\"notice\":\"The hook called before a swap\"},\"defaultPluginConfig()\":{\"notice\":\"Returns plugin config\"},\"handlePluginFee(uint256,uint256)\":{\"notice\":\"Handle plugin fee transfer on plugin contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/Algebra/src/core/contracts/interfaces/plugin/IAlgebraPlugin.sol\":\"IAlgebraPlugin\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@Cyfrin/foundry-devops/=lib/foundry-devops/src/\",\":@chainlink/contracts/=lib/mento-core/lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/\",\":@cryptoalgebra/abstract-plugin/=lib/plugins-monorepo/packages/abstract-plugin/\",\":@cryptoalgebra/default-plugin/=lib/plugins-monorepo/packages/default-plugin/\",\":@cryptoalgebra/dynamic-fee-plugin/=lib/plugins-monorepo/packages/dynamic-fee/\",\":@cryptoalgebra/farming-proxy-plugin/=lib/plugins-monorepo/packages/farming-proxy/\",\":@cryptoalgebra/integral-core/=lib/Algebra/src/core/\",\":@cryptoalgebra/integral-periphery/=lib/Algebra/src/periphery/\",\":@cryptoalgebra/volatility-oracle-plugin/=lib/plugins-monorepo/packages/volatility-oracle/\",\":@ds/=lib/mento-router/lib/multicall/lib/ds-test/src/\",\":@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/\",\":@mento/core/=lib/mento-core/\",\":@mento/periphery/=lib/mento-router/\",\":@mento/std/=lib/mento-std/\",\":@openzeppelin-v5/=lib/openzeppelin-contracts-v5/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@prb/test/=lib/mento-core/lib/prb-math/lib/prb-test/src/\",\":@self/=node_modules/@selfxyz/contracts/contracts/\",\":@std/=lib/mento-router/lib/multicall/lib/forge-std/src/\",\":@synthetixio/core-contracts/=lib/synthetix-v3/utils/core-contracts/\",\":@synthetixio/core-modules/=lib/synthetix-v3/utils/core-modules/\",\":@synthetixio/governance/=lib/synthetix-v3/protocol/governance/\",\":@synthetixio/oracle-manager/=lib/synthetix-v3/protocol/oracle-manager/\",\":@synthetixio/synthetix/=lib/synthetix-v3/protocol/synthetix/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":@uniswap/v4-periphery/=lib/v4-periphery/\",\":Algebra/=lib/Algebra/src/\",\":Roci-Smart-Contracts-v2/=lib/Roci-Smart-Contracts-v2/contracts/\",\":celo-foundry/=lib/mento-deployment/lib/celo-foundry/\",\":celo/=lib/mento-core/node_modules/@celo/\",\":chainlink-brownie-contracts/=lib/mento-core/lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":contracts/=lib/mento-core/contracts/\",\":ds-test/=lib/mento-router/lib/multicall/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std-next/=lib/mento-deployment/lib/forge-std-next/src/\",\":forge-std/=lib/forge-std/src/\",\":foundry-chainlink-toolkit/=lib/mento-core/lib/foundry-chainlink-toolkit/\",\":foundry-devops/=lib/foundry-devops/\",\":governance-tests/=lib/governance-tests/\",\":hackathon-demo/=lib/hackathon-demo/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts-v5/lib/halmos-cheatcodes/src/\",\":hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/\",\":mento-core-2.0.0/=lib/mento-deployment/lib/mento-core-2.0.0/contracts/\",\":mento-core-2.1.0/=lib/mento-deployment/lib/mento-core-2.1.0/contracts/\",\":mento-core-2.2.0/=lib/mento-deployment/lib/mento-core-2.2.0/contracts/\",\":mento-core-2.3.1/=lib/mento-deployment/lib/mento-core-2.3.1/contracts/\",\":mento-core-2.5.0/=lib/mento-deployment/lib/mento-core-2.5.0/contracts/\",\":mento-core-2.6.0-oz/=lib/mento-deployment/lib/mento-core-2.6.0/lib/openzeppelin-contracts-next/\",\":mento-core-2.6.0/=lib/mento-deployment/lib/mento-core-2.6.0/contracts/\",\":mento-core-2.6.2/=lib/mento-deployment/lib/mento-core-2.6.2/contracts/\",\":mento-core-2.6.3/=lib/mento-deployment/lib/mento-core-2.6.3/contracts/\",\":mento-core-2.6.4/=lib/mento-deployment/lib/mento-core-2.6.4/contracts/\",\":mento-core-2.6.5/=lib/mento-deployment/lib/mento-core-2.6.5/contracts/\",\":mento-core/=lib/mento-core/contracts/\",\":mento-deployment/=lib/mento-deployment/\",\":mento-router/=lib/mento-router/\",\":mento-std/=lib/mento-std/src/\",\":merkle-distributor/=lib/mento-deployment/lib/merkle-distributor/contracts/\",\":multicall/=lib/mento-router/lib/multicall/src/\",\":openzeppelin-contracts-next/=lib/mento-core/lib/openzeppelin-contracts-next/\",\":openzeppelin-contracts-upgradeable/=lib/mento-core/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v5/=lib/openzeppelin-contracts-v5/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-solidity/=lib/mento-core/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":oracle-v2-playground/=lib/oracle-v2-playground/\",\":permit2/=lib/v4-periphery/lib/permit2/\",\":plugins-monorepo/=lib/plugins-monorepo/\",\":prb-math/=lib/mento-core/lib/prb-math/src/\",\":prb-test/=lib/mento-core/lib/prb-math/lib/prb-test/src/\",\":prb/math/=lib/mento-core/lib/prb-math/src/\",\":redstone-oracles-monorepo/=lib/oracle-v2-playground/lib/\",\":redstone/=lib/oracle-v2-playground/lib/redstone-oracles-monorepo/packages/evm-connector/\",\":safe-contracts/=lib/mento-core/lib/safe-contracts/\",\":solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/\",\":synthetix-v3/=lib/synthetix-v3/\",\":v4-core/=lib/v4-periphery/lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/\"]},\"sources\":{\"lib/Algebra/src/core/contracts/interfaces/plugin/IAlgebraPlugin.sol\":{\"keccak256\":\"0xdf59e7e2f672d08ecd361eb9a61fbd21ce70ad47e64f34dcd8bd8101e0e7aa5a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7719afe8dbd6803ecda550933f66d447a6fd9866a1a1b06d8c1eaad6c6fa8a63\",\"dweb:/ipfs/QmPwz3RuSWYuQaHMzwF6HP4MAomD2ZoZRm6YRKhdWNhPWb\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"uint256","name":"paid0","type":"uint256"},{"internalType":"uint256","name":"paid1","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"afterFlash","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"internalType":"int24","name":"tick","type":"int24"}],"stateMutability":"nonpayable","type":"function","name":"afterInitialize","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"bottomTick","type":"int24"},{"internalType":"int24","name":"topTick","type":"int24"},{"internalType":"int128","name":"desiredLiquidityDelta","type":"int128"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"afterModifyPosition","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bool","name":"zeroToOne","type":"bool"},{"internalType":"int256","name":"amountRequired","type":"int256"},{"internalType":"uint160","name":"limitSqrtPrice","type":"uint160"},{"internalType":"int256","name":"amount0","type":"int256"},{"internalType":"int256","name":"amount1","type":"int256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"afterSwap","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"beforeFlash","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"}],"stateMutability":"nonpayable","type":"function","name":"beforeInitialize","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"bottomTick","type":"int24"},{"internalType":"int24","name":"topTick","type":"int24"},{"internalType":"int128","name":"desiredLiquidityDelta","type":"int128"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"beforeModifyPosition","outputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"},{"internalType":"uint24","name":"pluginFee","type":"uint24"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bool","name":"zeroToOne","type":"bool"},{"internalType":"int256","name":"amountRequired","type":"int256"},{"internalType":"uint160","name":"limitSqrtPrice","type":"uint160"},{"internalType":"bool","name":"withPaymentInAdvance","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"beforeSwap","outputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"},{"internalType":"uint24","name":"feeOverride","type":"uint24"},{"internalType":"uint24","name":"pluginFee","type":"uint24"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"defaultPluginConfig","outputs":[{"internalType":"uint8","name":"","type":"uint8"}]},{"inputs":[{"internalType":"uint256","name":"pluginFee0","type":"uint256"},{"internalType":"uint256","name":"pluginFee1","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"handlePluginFee","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]}],"devdoc":{"kind":"dev","methods":{"afterFlash(address,address,uint256,uint256,uint256,uint256,bytes)":{"params":{"amount0":"The amount of token0 being requested for flash","amount1":"The amount of token1 being requested for flash","data":"Data that passed through the callback","paid0":"The amount of token0 being paid for flash","paid1":"The amount of token1 being paid for flash","recipient":"The address which will receive the token0 and token1 amounts","sender":"The initial msg.sender for the flash call"},"returns":{"_0":"bytes4 The function selector for the hook"}},"afterInitialize(address,uint160,int24)":{"params":{"sender":"The initial msg.sender for the initialize call","sqrtPriceX96":"The sqrt(price) of the pool as a Q64.96","tick":"The current tick after the state of a pool is initialized"},"returns":{"_0":"bytes4 The function selector for the hook"}},"afterModifyPosition(address,address,int24,int24,int128,uint256,uint256,bytes)":{"params":{"amount0":"The amount of token0 sent to the recipient or was paid to mint","amount1":"The amount of token0 sent to the recipient or was paid to mint","bottomTick":"The lower tick of the position","data":"Data that passed through the callback","desiredLiquidityDelta":"The desired amount of liquidity to mint/burn","recipient":"Address to which the liquidity will be assigned in case of a mint or to which tokens will be sent in case of a burn","sender":"The initial msg.sender for the modify position call","topTick":"The upper tick of the position"},"returns":{"_0":"bytes4 The function selector for the hook"}},"afterSwap(address,address,bool,int256,uint160,int256,int256,bytes)":{"params":{"amount0":"The delta of the balance of token0 of the pool, exact when negative, minimum when positive","amount1":"The delta of the balance of token1 of the pool, exact when negative, minimum when positive","amountRequired":"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)","data":"Data that passed through the callback","limitSqrtPrice":"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap","recipient":"The address to receive the output of the swap","sender":"The initial msg.sender for the swap call","zeroToOne":"The direction of the swap, true for token0 to token1, false for token1 to token0"},"returns":{"_0":"bytes4 The function selector for the hook"}},"beforeFlash(address,address,uint256,uint256,bytes)":{"params":{"amount0":"The amount of token0 being requested for flash","amount1":"The amount of token1 being requested for flash","data":"Data that passed through the callback","recipient":"The address which will receive the token0 and token1 amounts","sender":"The initial msg.sender for the flash call"},"returns":{"_0":"bytes4 The function selector for the hook"}},"beforeInitialize(address,uint160)":{"params":{"sender":"The initial msg.sender for the initialize call","sqrtPriceX96":"The sqrt(price) of the pool as a Q64.96"},"returns":{"_0":"bytes4 The function selector for the hook"}},"beforeModifyPosition(address,address,int24,int24,int128,bytes)":{"params":{"bottomTick":"The lower tick of the position","data":"Data that passed through the callback","desiredLiquidityDelta":"The desired amount of liquidity to mint/burn","recipient":"Address to which the liquidity will be assigned in case of a mint or to which tokens will be sent in case of a burn","sender":"The initial msg.sender for the modify position call","topTick":"The upper tick of the position"},"returns":{"selector":"The function selector for the hook"}},"beforeSwap(address,address,bool,int256,uint160,bool,bytes)":{"params":{"amountRequired":"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)","data":"Data that passed through the callback","limitSqrtPrice":"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap","recipient":"The address to receive the output of the swap","sender":"The initial msg.sender for the swap call","withPaymentInAdvance":"The flag indicating whether the `swapWithPaymentInAdvance` method was called","zeroToOne":"The direction of the swap, true for token0 to token1, false for token1 to token0"},"returns":{"selector":"The function selector for the hook"}},"defaultPluginConfig()":{"returns":{"_0":"config Each bit of the config is responsible for enabling/disabling the hooks. The last bit indicates whether the plugin contains dynamic fees logic"}},"handlePluginFee(uint256,uint256)":{"params":{"pluginFee0":"Fee0 amount transferred to plugin","pluginFee1":"Fee1 amount transferred to plugin"},"returns":{"_0":"bytes4 The function selector"}}},"version":1},"userdoc":{"kind":"user","methods":{"afterFlash(address,address,uint256,uint256,uint256,uint256,bytes)":{"notice":"The hook called after flash"},"afterInitialize(address,uint160,int24)":{"notice":"The hook called after the state of a pool is initialized"},"afterModifyPosition(address,address,int24,int24,int128,uint256,uint256,bytes)":{"notice":"The hook called after a position is modified"},"afterSwap(address,address,bool,int256,uint160,int256,int256,bytes)":{"notice":"The hook called after a swap"},"beforeFlash(address,address,uint256,uint256,bytes)":{"notice":"The hook called before flash"},"beforeInitialize(address,uint160)":{"notice":"The hook called before the state of a pool is initialized"},"beforeModifyPosition(address,address,int24,int24,int128,bytes)":{"notice":"The hook called before a position is modified"},"beforeSwap(address,address,bool,int256,uint160,bool,bytes)":{"notice":"The hook called before a swap"},"defaultPluginConfig()":{"notice":"Returns plugin config"},"handlePluginFee(uint256,uint256)":{"notice":"Handle plugin fee transfer on plugin contract"}},"version":1}},"settings":{"remappings":["@Cyfrin/foundry-devops/=lib/foundry-devops/src/","@chainlink/contracts/=lib/mento-core/lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/","@cryptoalgebra/abstract-plugin/=lib/plugins-monorepo/packages/abstract-plugin/","@cryptoalgebra/default-plugin/=lib/plugins-monorepo/packages/default-plugin/","@cryptoalgebra/dynamic-fee-plugin/=lib/plugins-monorepo/packages/dynamic-fee/","@cryptoalgebra/farming-proxy-plugin/=lib/plugins-monorepo/packages/farming-proxy/","@cryptoalgebra/integral-core/=lib/Algebra/src/core/","@cryptoalgebra/integral-periphery/=lib/Algebra/src/periphery/","@cryptoalgebra/volatility-oracle-plugin/=lib/plugins-monorepo/packages/volatility-oracle/","@ds/=lib/mento-router/lib/multicall/lib/ds-test/src/","@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/","@mento/core/=lib/mento-core/","@mento/periphery/=lib/mento-router/","@mento/std/=lib/mento-std/","@openzeppelin-v5/=lib/openzeppelin-contracts-v5/","@openzeppelin/=lib/openzeppelin-contracts/","@prb/test/=lib/mento-core/lib/prb-math/lib/prb-test/src/","@self/=node_modules/@selfxyz/contracts/contracts/","@std/=lib/mento-router/lib/multicall/lib/forge-std/src/","@synthetixio/core-contracts/=lib/synthetix-v3/utils/core-contracts/","@synthetixio/core-modules/=lib/synthetix-v3/utils/core-modules/","@synthetixio/governance/=lib/synthetix-v3/protocol/governance/","@synthetixio/oracle-manager/=lib/synthetix-v3/protocol/oracle-manager/","@synthetixio/synthetix/=lib/synthetix-v3/protocol/synthetix/","@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/","@uniswap/v4-periphery/=lib/v4-periphery/","Algebra/=lib/Algebra/src/","Roci-Smart-Contracts-v2/=lib/Roci-Smart-Contracts-v2/contracts/","celo-foundry/=lib/mento-deployment/lib/celo-foundry/","celo/=lib/mento-core/node_modules/@celo/","chainlink-brownie-contracts/=lib/mento-core/lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/","contracts/=lib/mento-core/contracts/","ds-test/=lib/mento-router/lib/multicall/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/","forge-std-next/=lib/mento-deployment/lib/forge-std-next/src/","forge-std/=lib/forge-std/src/","foundry-chainlink-toolkit/=lib/mento-core/lib/foundry-chainlink-toolkit/","foundry-devops/=lib/foundry-devops/","governance-tests/=lib/governance-tests/","hackathon-demo/=lib/hackathon-demo/","halmos-cheatcodes/=lib/openzeppelin-contracts-v5/lib/halmos-cheatcodes/src/","hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/","mento-core-2.0.0/=lib/mento-deployment/lib/mento-core-2.0.0/contracts/","mento-core-2.1.0/=lib/mento-deployment/lib/mento-core-2.1.0/contracts/","mento-core-2.2.0/=lib/mento-deployment/lib/mento-core-2.2.0/contracts/","mento-core-2.3.1/=lib/mento-deployment/lib/mento-core-2.3.1/contracts/","mento-core-2.5.0/=lib/mento-deployment/lib/mento-core-2.5.0/contracts/","mento-core-2.6.0-oz/=lib/mento-deployment/lib/mento-core-2.6.0/lib/openzeppelin-contracts-next/","mento-core-2.6.0/=lib/mento-deployment/lib/mento-core-2.6.0/contracts/","mento-core-2.6.2/=lib/mento-deployment/lib/mento-core-2.6.2/contracts/","mento-core-2.6.3/=lib/mento-deployment/lib/mento-core-2.6.3/contracts/","mento-core-2.6.4/=lib/mento-deployment/lib/mento-core-2.6.4/contracts/","mento-core-2.6.5/=lib/mento-deployment/lib/mento-core-2.6.5/contracts/","mento-core/=lib/mento-core/contracts/","mento-deployment/=lib/mento-deployment/","mento-router/=lib/mento-router/","mento-std/=lib/mento-std/src/","merkle-distributor/=lib/mento-deployment/lib/merkle-distributor/contracts/","multicall/=lib/mento-router/lib/multicall/src/","openzeppelin-contracts-next/=lib/mento-core/lib/openzeppelin-contracts-next/","openzeppelin-contracts-upgradeable/=lib/mento-core/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts-v5/=lib/openzeppelin-contracts-v5/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-solidity/=lib/mento-core/lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","oracle-v2-playground/=lib/oracle-v2-playground/","permit2/=lib/v4-periphery/lib/permit2/","plugins-monorepo/=lib/plugins-monorepo/","prb-math/=lib/mento-core/lib/prb-math/src/","prb-test/=lib/mento-core/lib/prb-math/lib/prb-test/src/","prb/math/=lib/mento-core/lib/prb-math/src/","redstone-oracles-monorepo/=lib/oracle-v2-playground/lib/","redstone/=lib/oracle-v2-playground/lib/redstone-oracles-monorepo/packages/evm-connector/","safe-contracts/=lib/mento-core/lib/safe-contracts/","solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/","synthetix-v3/=lib/synthetix-v3/","v4-core/=lib/v4-periphery/lib/v4-core/src/","v4-periphery/=lib/v4-periphery/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"none","appendCBOR":false},"compilationTarget":{"lib/Algebra/src/core/contracts/interfaces/plugin/IAlgebraPlugin.sol":"IAlgebraPlugin"},"evmVersion":"shanghai","libraries":{}},"sources":{"lib/Algebra/src/core/contracts/interfaces/plugin/IAlgebraPlugin.sol":{"keccak256":"0xdf59e7e2f672d08ecd361eb9a61fbd21ce70ad47e64f34dcd8bd8101e0e7aa5a","urls":["bzz-raw://7719afe8dbd6803ecda550933f66d447a6fd9866a1a1b06d8c1eaad6c6fa8a63","dweb:/ipfs/QmPwz3RuSWYuQaHMzwF6HP4MAomD2ZoZRm6YRKhdWNhPWb"],"license":"GPL-2.0-or-later"}},"version":1},"id":19}