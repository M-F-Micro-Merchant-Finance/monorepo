{"id":"c93f139617712a6d35dea1a4a6323f1b","_format":"hh-sol-build-info-1","solcVersion":"0.8.30","solcLongVersion":"0.8.30+commit.73712a01","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"contracts/SimpleSelfTest.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title SimpleSelfTest\n * @dev A simple contract to test @selfxyz/ package integration\n */\ncontract SimpleSelfTest is Ownable {\n    mapping(address => bool) public verifiedMerchants;\n    \n    event MerchantVerified(address indexed merchant, bool verified);\n    \n    constructor() Ownable(msg.sender) {}\n    \n    /**\n     * @dev Set verification status for a merchant\n     * @param merchant The merchant address to verify\n     * @param verified The verification status\n     */\n    function setMerchantVerification(address merchant, bool verified) external onlyOwner {\n        verifiedMerchants[merchant] = verified;\n        emit MerchantVerified(merchant, verified);\n    }\n    \n    /**\n     * @dev Check if a merchant is verified\n     * @param merchant The merchant address to check\n     * @return True if the merchant is verified\n     */\n    function isMerchantVerified(address merchant) external view returns (bool) {\n        return verifiedMerchants[merchant];\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[177],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":178,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":177,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,177],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[177]},"id":178,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"127:496:1","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":177,"linearizedBaseContracts":[177],"name":"Context","nameLocation":"642:7:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":158,"nodeType":"Block","src":"718:34:1","statements":[{"expression":{"expression":{"id":155,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:1","memberName":"sender","nodeType":"MemberAccess","src":"735:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":154,"id":157,"nodeType":"Return","src":"728:17:1"}]},"id":159,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:1","nodeType":"FunctionDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"675:2:1"},"returnParameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":159,"src":"709:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:1"},"scope":177,"src":"656:96:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":167,"nodeType":"Block","src":"825:32:1","statements":[{"expression":{"expression":{"id":164,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:1","memberName":"data","nodeType":"MemberAccess","src":"842:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":163,"id":166,"nodeType":"Return","src":"835:15:1"}]},"id":168,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:1","nodeType":"FunctionDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"775:2:1"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":168,"src":"809:14:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":161,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:1"},"scope":177,"src":"758:99:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":175,"nodeType":"Block","src":"935:25:1","statements":[{"expression":{"hexValue":"30","id":173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":172,"id":174,"nodeType":"Return","src":"945:8:1"}]},"id":176,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:1","nodeType":"FunctionDefinition","parameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"892:2:1"},"returnParameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":176,"src":"926:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":170,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:1"},"scope":177,"src":"863:97:1","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":178,"src":"624:338:1","usedErrors":[],"usedEvents":[]}],"src":"101:862:1"},"id":1},"contracts/SimpleSelfTest.sol":{"ast":{"absolutePath":"contracts/SimpleSelfTest.sol","exportedSymbols":{"Context":[177],"Ownable":[147],"SimpleSelfTest":[237]},"id":238,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":179,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:2"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":180,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":238,"sourceUnit":148,"src":"57:52:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":182,"name":"Ownable","nameLocations":["235:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"235:7:2"},"id":183,"nodeType":"InheritanceSpecifier","src":"235:7:2"}],"canonicalName":"SimpleSelfTest","contractDependencies":[],"contractKind":"contract","documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"111:96:2","text":" @title SimpleSelfTest\n @dev A simple contract to test @selfxyz/ package integration"},"fullyImplemented":true,"id":237,"linearizedBaseContracts":[237,147,177],"name":"SimpleSelfTest","nameLocation":"217:14:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"aa7496fc","id":187,"mutability":"mutable","name":"verifiedMerchants","nameLocation":"281:17:2","nodeType":"VariableDeclaration","scope":237,"src":"249:49:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":186,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"257:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"249:24:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":185,"name":"bool","nodeType":"ElementaryTypeName","src":"268:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"bd12340699dd296c56f871fa250ed79a9763c0f6dd8c79b03f4f73995e19a5d1","id":193,"name":"MerchantVerified","nameLocation":"315:16:2","nodeType":"EventDefinition","parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"indexed":true,"mutability":"mutable","name":"merchant","nameLocation":"348:8:2","nodeType":"VariableDeclaration","scope":193,"src":"332:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":188,"name":"address","nodeType":"ElementaryTypeName","src":"332:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":191,"indexed":false,"mutability":"mutable","name":"verified","nameLocation":"363:8:2","nodeType":"VariableDeclaration","scope":193,"src":"358:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":190,"name":"bool","nodeType":"ElementaryTypeName","src":"358:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"331:41:2"},"src":"309:64:2"},{"body":{"id":200,"nodeType":"Block","src":"417:2:2","statements":[]},"id":201,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":196,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"405:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"409:6:2","memberName":"sender","nodeType":"MemberAccess","src":"405:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":198,"kind":"baseConstructorSpecifier","modifierName":{"id":195,"name":"Ownable","nameLocations":["397:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"397:7:2"},"nodeType":"ModifierInvocation","src":"397:19:2"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"394:2:2"},"returnParameters":{"id":199,"nodeType":"ParameterList","parameters":[],"src":"417:0:2"},"scope":237,"src":"383:36:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":222,"nodeType":"Block","src":"682:106:2","statements":[{"expression":{"id":215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":211,"name":"verifiedMerchants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"692:17:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":213,"indexExpression":{"id":212,"name":"merchant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"710:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"692:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":214,"name":"verified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"722:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"692:38:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":216,"nodeType":"ExpressionStatement","src":"692:38:2"},{"eventCall":{"arguments":[{"id":218,"name":"merchant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"762:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":219,"name":"verified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"772:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":217,"name":"MerchantVerified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"745:16:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"745:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":221,"nodeType":"EmitStatement","src":"740:41:2"}]},"documentation":{"id":202,"nodeType":"StructuredDocumentation","src":"429:163:2","text":" @dev Set verification status for a merchant\n @param merchant The merchant address to verify\n @param verified The verification status"},"functionSelector":"521da1c9","id":223,"implemented":true,"kind":"function","modifiers":[{"id":209,"kind":"modifierInvocation","modifierName":{"id":208,"name":"onlyOwner","nameLocations":["672:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"672:9:2"},"nodeType":"ModifierInvocation","src":"672:9:2"}],"name":"setMerchantVerification","nameLocation":"606:23:2","nodeType":"FunctionDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"merchant","nameLocation":"638:8:2","nodeType":"VariableDeclaration","scope":223,"src":"630:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":203,"name":"address","nodeType":"ElementaryTypeName","src":"630:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":206,"mutability":"mutable","name":"verified","nameLocation":"653:8:2","nodeType":"VariableDeclaration","scope":223,"src":"648:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":205,"name":"bool","nodeType":"ElementaryTypeName","src":"648:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"629:33:2"},"returnParameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"682:0:2"},"scope":237,"src":"597:191:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":235,"nodeType":"Block","src":"1034:51:2","statements":[{"expression":{"baseExpression":{"id":231,"name":"verifiedMerchants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"1051:17:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":233,"indexExpression":{"id":232,"name":"merchant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"1069:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1051:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":230,"id":234,"nodeType":"Return","src":"1044:34:2"}]},"documentation":{"id":224,"nodeType":"StructuredDocumentation","src":"798:156:2","text":" @dev Check if a merchant is verified\n @param merchant The merchant address to check\n @return True if the merchant is verified"},"functionSelector":"2003f60c","id":236,"implemented":true,"kind":"function","modifiers":[],"name":"isMerchantVerified","nameLocation":"968:18:2","nodeType":"FunctionDefinition","parameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"merchant","nameLocation":"995:8:2","nodeType":"VariableDeclaration","scope":236,"src":"987:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":225,"name":"address","nodeType":"ElementaryTypeName","src":"987:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"986:18:2"},"returnParameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":236,"src":"1028:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":228,"name":"bool","nodeType":"ElementaryTypeName","src":"1028:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1027:6:2"},"scope":237,"src":"959:126:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":238,"src":"208:879:2","usedErrors":[13,18],"usedEvents":[24,193]}],"src":"32:1056:2"},"id":2}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"contracts/SimpleSelfTest.sol":{"SimpleSelfTest":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"merchant","type":"address"},{"indexed":false,"internalType":"bool","name":"verified","type":"bool"}],"name":"MerchantVerified","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"address","name":"merchant","type":"address"}],"name":"isMerchantVerified","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"merchant","type":"address"},{"internalType":"bool","name":"verified","type":"bool"}],"name":"setMerchantVerification","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"verifiedMerchants","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_201":{"entryPoint":null,"id":201,"parameterSlots":0,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":65,"id":146,"parameterSlots":1,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:219:3","nodeType":"YulBlock","src":"0:219:3","statements":[{"nativeSrc":"6:3:3","nodeType":"YulBlock","src":"6:3:3","statements":[]},{"body":{"nativeSrc":"115:102:3","nodeType":"YulBlock","src":"115:102:3","statements":[{"nativeSrc":"125:26:3","nodeType":"YulAssignment","src":"125:26:3","value":{"arguments":[{"name":"headStart","nativeSrc":"137:9:3","nodeType":"YulIdentifier","src":"137:9:3"},{"kind":"number","nativeSrc":"148:2:3","nodeType":"YulLiteral","src":"148:2:3","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"133:3:3","nodeType":"YulIdentifier","src":"133:3:3"},"nativeSrc":"133:18:3","nodeType":"YulFunctionCall","src":"133:18:3"},"variableNames":[{"name":"tail","nativeSrc":"125:4:3","nodeType":"YulIdentifier","src":"125:4:3"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"167:9:3","nodeType":"YulIdentifier","src":"167:9:3"},{"arguments":[{"name":"value0","nativeSrc":"182:6:3","nodeType":"YulIdentifier","src":"182:6:3"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"198:3:3","nodeType":"YulLiteral","src":"198:3:3","type":"","value":"160"},{"kind":"number","nativeSrc":"203:1:3","nodeType":"YulLiteral","src":"203:1:3","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"194:3:3","nodeType":"YulIdentifier","src":"194:3:3"},"nativeSrc":"194:11:3","nodeType":"YulFunctionCall","src":"194:11:3"},{"kind":"number","nativeSrc":"207:1:3","nodeType":"YulLiteral","src":"207:1:3","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"190:3:3","nodeType":"YulIdentifier","src":"190:3:3"},"nativeSrc":"190:19:3","nodeType":"YulFunctionCall","src":"190:19:3"}],"functionName":{"name":"and","nativeSrc":"178:3:3","nodeType":"YulIdentifier","src":"178:3:3"},"nativeSrc":"178:32:3","nodeType":"YulFunctionCall","src":"178:32:3"}],"functionName":{"name":"mstore","nativeSrc":"160:6:3","nodeType":"YulIdentifier","src":"160:6:3"},"nativeSrc":"160:51:3","nodeType":"YulFunctionCall","src":"160:51:3"},"nativeSrc":"160:51:3","nodeType":"YulExpressionStatement","src":"160:51:3"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"14:203:3","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"84:9:3","nodeType":"YulTypedName","src":"84:9:3","type":""},{"name":"value0","nativeSrc":"95:6:3","nodeType":"YulTypedName","src":"95:6:3","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"106:4:3","nodeType":"YulTypedName","src":"106:4:3","type":""}],"src":"14:203:3"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":3,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6080604052348015600f57600080fd5b503380603557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b603c816041565b506091565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610301806100a06000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632003f60c14610067578063521da1c9146100a8578063715018a6146100bd5780638da5cb5b146100c5578063aa7496fc146100e0578063f2fde38b14610103575b600080fd5b61009361007536600461026d565b6001600160a01b031660009081526001602052604090205460ff1690565b60405190151581526020015b60405180910390f35b6100bb6100b636600461028f565b610116565b005b6100bb61017d565b6000546040516001600160a01b03909116815260200161009f565b6100936100ee36600461026d565b60016020526000908152604090205460ff1681565b6100bb61011136600461026d565b610191565b61011e6101d4565b6001600160a01b038216600081815260016020908152604091829020805460ff191685151590811790915591519182527fbd12340699dd296c56f871fa250ed79a9763c0f6dd8c79b03f4f73995e19a5d1910160405180910390a25050565b6101856101d4565b61018f6000610201565b565b6101996101d4565b6001600160a01b0381166101c857604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6101d181610201565b50565b6000546001600160a01b0316331461018f5760405163118cdaa760e01b81523360048201526024016101bf565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461026857600080fd5b919050565b60006020828403121561027f57600080fd5b61028882610251565b9392505050565b600080604083850312156102a257600080fd5b6102ab83610251565b9150602083013580151581146102c057600080fd5b80915050925092905056fea2646970667358221220cf59a2e123b28d38fbdaa1a313f9e182e8831c11b2b34165af3541c89c11a9bd64736f6c634300081e0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER DUP1 PUSH1 0x35 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3C DUP2 PUSH1 0x41 JUMP JUMPDEST POP PUSH1 0x91 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x301 DUP1 PUSH2 0xA0 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2003F60C EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x521DA1C9 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0xAA7496FC EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x103 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93 PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0x26D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0xB6 CALLDATASIZE PUSH1 0x4 PUSH2 0x28F JUMP JUMPDEST PUSH2 0x116 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBB PUSH2 0x17D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9F JUMP JUMPDEST PUSH2 0x93 PUSH2 0xEE CALLDATASIZE PUSH1 0x4 PUSH2 0x26D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xBB PUSH2 0x111 CALLDATASIZE PUSH1 0x4 PUSH2 0x26D JUMP JUMPDEST PUSH2 0x191 JUMP JUMPDEST PUSH2 0x11E PUSH2 0x1D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xBD12340699DD296C56F871FA250ED79A9763C0F6DD8C79B03F4F73995E19A5D1 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x185 PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0x18F PUSH1 0x0 PUSH2 0x201 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x199 PUSH2 0x1D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1C8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D1 DUP2 PUSH2 0x201 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x18F JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1BF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x288 DUP3 PUSH2 0x251 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2AB DUP4 PUSH2 0x251 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF MSIZE LOG2 RJUMPI 0x23B2 DUP14 CODESIZE EXTSTATICCALL 0xDA LOG1 LOG3 SGT EXTDELEGATECALL RJUMPI 0x82E8 DUP4 SHR GT 0xB2 0xB3 COINBASE PUSH6 0xAF3541C89C11 0xA9 0xBD PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ","sourceMap":"208:879:2:-:0;;;383:36;;;;;;;;;-1:-1:-1;405:10:2;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;160:51:3;133:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;1225:187;208:879:2;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:203:3:-;208:879:2;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_84":{"entryPoint":468,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_159":{"entryPoint":null,"id":159,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":513,"id":146,"parameterSlots":1,"returnSlots":0},"@isMerchantVerified_236":{"entryPoint":null,"id":236,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":381,"id":98,"parameterSlots":0,"returnSlots":0},"@setMerchantVerification_223":{"entryPoint":278,"id":223,"parameterSlots":2,"returnSlots":0},"@transferOwnership_126":{"entryPoint":401,"id":126,"parameterSlots":1,"returnSlots":0},"@verifiedMerchants_187":{"entryPoint":null,"id":187,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":593,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":621,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_bool":{"entryPoint":655,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:1132:3","nodeType":"YulBlock","src":"0:1132:3","statements":[{"nativeSrc":"6:3:3","nodeType":"YulBlock","src":"6:3:3","statements":[]},{"body":{"nativeSrc":"63:124:3","nodeType":"YulBlock","src":"63:124:3","statements":[{"nativeSrc":"73:29:3","nodeType":"YulAssignment","src":"73:29:3","value":{"arguments":[{"name":"offset","nativeSrc":"95:6:3","nodeType":"YulIdentifier","src":"95:6:3"}],"functionName":{"name":"calldataload","nativeSrc":"82:12:3","nodeType":"YulIdentifier","src":"82:12:3"},"nativeSrc":"82:20:3","nodeType":"YulFunctionCall","src":"82:20:3"},"variableNames":[{"name":"value","nativeSrc":"73:5:3","nodeType":"YulIdentifier","src":"73:5:3"}]},{"body":{"nativeSrc":"165:16:3","nodeType":"YulBlock","src":"165:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"174:1:3","nodeType":"YulLiteral","src":"174:1:3","type":"","value":"0"},{"kind":"number","nativeSrc":"177:1:3","nodeType":"YulLiteral","src":"177:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"167:6:3","nodeType":"YulIdentifier","src":"167:6:3"},"nativeSrc":"167:12:3","nodeType":"YulFunctionCall","src":"167:12:3"},"nativeSrc":"167:12:3","nodeType":"YulExpressionStatement","src":"167:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"124:5:3","nodeType":"YulIdentifier","src":"124:5:3"},{"arguments":[{"name":"value","nativeSrc":"135:5:3","nodeType":"YulIdentifier","src":"135:5:3"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"150:3:3","nodeType":"YulLiteral","src":"150:3:3","type":"","value":"160"},{"kind":"number","nativeSrc":"155:1:3","nodeType":"YulLiteral","src":"155:1:3","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"146:3:3","nodeType":"YulIdentifier","src":"146:3:3"},"nativeSrc":"146:11:3","nodeType":"YulFunctionCall","src":"146:11:3"},{"kind":"number","nativeSrc":"159:1:3","nodeType":"YulLiteral","src":"159:1:3","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"142:3:3","nodeType":"YulIdentifier","src":"142:3:3"},"nativeSrc":"142:19:3","nodeType":"YulFunctionCall","src":"142:19:3"}],"functionName":{"name":"and","nativeSrc":"131:3:3","nodeType":"YulIdentifier","src":"131:3:3"},"nativeSrc":"131:31:3","nodeType":"YulFunctionCall","src":"131:31:3"}],"functionName":{"name":"eq","nativeSrc":"121:2:3","nodeType":"YulIdentifier","src":"121:2:3"},"nativeSrc":"121:42:3","nodeType":"YulFunctionCall","src":"121:42:3"}],"functionName":{"name":"iszero","nativeSrc":"114:6:3","nodeType":"YulIdentifier","src":"114:6:3"},"nativeSrc":"114:50:3","nodeType":"YulFunctionCall","src":"114:50:3"},"nativeSrc":"111:70:3","nodeType":"YulIf","src":"111:70:3"}]},"name":"abi_decode_address","nativeSrc":"14:173:3","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"42:6:3","nodeType":"YulTypedName","src":"42:6:3","type":""}],"returnVariables":[{"name":"value","nativeSrc":"53:5:3","nodeType":"YulTypedName","src":"53:5:3","type":""}],"src":"14:173:3"},{"body":{"nativeSrc":"262:116:3","nodeType":"YulBlock","src":"262:116:3","statements":[{"body":{"nativeSrc":"308:16:3","nodeType":"YulBlock","src":"308:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:3","nodeType":"YulLiteral","src":"317:1:3","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:3","nodeType":"YulLiteral","src":"320:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:3","nodeType":"YulIdentifier","src":"310:6:3"},"nativeSrc":"310:12:3","nodeType":"YulFunctionCall","src":"310:12:3"},"nativeSrc":"310:12:3","nodeType":"YulExpressionStatement","src":"310:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"283:7:3","nodeType":"YulIdentifier","src":"283:7:3"},{"name":"headStart","nativeSrc":"292:9:3","nodeType":"YulIdentifier","src":"292:9:3"}],"functionName":{"name":"sub","nativeSrc":"279:3:3","nodeType":"YulIdentifier","src":"279:3:3"},"nativeSrc":"279:23:3","nodeType":"YulFunctionCall","src":"279:23:3"},{"kind":"number","nativeSrc":"304:2:3","nodeType":"YulLiteral","src":"304:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"275:3:3","nodeType":"YulIdentifier","src":"275:3:3"},"nativeSrc":"275:32:3","nodeType":"YulFunctionCall","src":"275:32:3"},"nativeSrc":"272:52:3","nodeType":"YulIf","src":"272:52:3"},{"nativeSrc":"333:39:3","nodeType":"YulAssignment","src":"333:39:3","value":{"arguments":[{"name":"headStart","nativeSrc":"362:9:3","nodeType":"YulIdentifier","src":"362:9:3"}],"functionName":{"name":"abi_decode_address","nativeSrc":"343:18:3","nodeType":"YulIdentifier","src":"343:18:3"},"nativeSrc":"343:29:3","nodeType":"YulFunctionCall","src":"343:29:3"},"variableNames":[{"name":"value0","nativeSrc":"333:6:3","nodeType":"YulIdentifier","src":"333:6:3"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"192:186:3","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"228:9:3","nodeType":"YulTypedName","src":"228:9:3","type":""},{"name":"dataEnd","nativeSrc":"239:7:3","nodeType":"YulTypedName","src":"239:7:3","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"251:6:3","nodeType":"YulTypedName","src":"251:6:3","type":""}],"src":"192:186:3"},{"body":{"nativeSrc":"478:92:3","nodeType":"YulBlock","src":"478:92:3","statements":[{"nativeSrc":"488:26:3","nodeType":"YulAssignment","src":"488:26:3","value":{"arguments":[{"name":"headStart","nativeSrc":"500:9:3","nodeType":"YulIdentifier","src":"500:9:3"},{"kind":"number","nativeSrc":"511:2:3","nodeType":"YulLiteral","src":"511:2:3","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"496:3:3","nodeType":"YulIdentifier","src":"496:3:3"},"nativeSrc":"496:18:3","nodeType":"YulFunctionCall","src":"496:18:3"},"variableNames":[{"name":"tail","nativeSrc":"488:4:3","nodeType":"YulIdentifier","src":"488:4:3"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"530:9:3","nodeType":"YulIdentifier","src":"530:9:3"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"555:6:3","nodeType":"YulIdentifier","src":"555:6:3"}],"functionName":{"name":"iszero","nativeSrc":"548:6:3","nodeType":"YulIdentifier","src":"548:6:3"},"nativeSrc":"548:14:3","nodeType":"YulFunctionCall","src":"548:14:3"}],"functionName":{"name":"iszero","nativeSrc":"541:6:3","nodeType":"YulIdentifier","src":"541:6:3"},"nativeSrc":"541:22:3","nodeType":"YulFunctionCall","src":"541:22:3"}],"functionName":{"name":"mstore","nativeSrc":"523:6:3","nodeType":"YulIdentifier","src":"523:6:3"},"nativeSrc":"523:41:3","nodeType":"YulFunctionCall","src":"523:41:3"},"nativeSrc":"523:41:3","nodeType":"YulExpressionStatement","src":"523:41:3"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"383:187:3","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"447:9:3","nodeType":"YulTypedName","src":"447:9:3","type":""},{"name":"value0","nativeSrc":"458:6:3","nodeType":"YulTypedName","src":"458:6:3","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"469:4:3","nodeType":"YulTypedName","src":"469:4:3","type":""}],"src":"383:187:3"},{"body":{"nativeSrc":"659:263:3","nodeType":"YulBlock","src":"659:263:3","statements":[{"body":{"nativeSrc":"705:16:3","nodeType":"YulBlock","src":"705:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"714:1:3","nodeType":"YulLiteral","src":"714:1:3","type":"","value":"0"},{"kind":"number","nativeSrc":"717:1:3","nodeType":"YulLiteral","src":"717:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"707:6:3","nodeType":"YulIdentifier","src":"707:6:3"},"nativeSrc":"707:12:3","nodeType":"YulFunctionCall","src":"707:12:3"},"nativeSrc":"707:12:3","nodeType":"YulExpressionStatement","src":"707:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"680:7:3","nodeType":"YulIdentifier","src":"680:7:3"},{"name":"headStart","nativeSrc":"689:9:3","nodeType":"YulIdentifier","src":"689:9:3"}],"functionName":{"name":"sub","nativeSrc":"676:3:3","nodeType":"YulIdentifier","src":"676:3:3"},"nativeSrc":"676:23:3","nodeType":"YulFunctionCall","src":"676:23:3"},{"kind":"number","nativeSrc":"701:2:3","nodeType":"YulLiteral","src":"701:2:3","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"672:3:3","nodeType":"YulIdentifier","src":"672:3:3"},"nativeSrc":"672:32:3","nodeType":"YulFunctionCall","src":"672:32:3"},"nativeSrc":"669:52:3","nodeType":"YulIf","src":"669:52:3"},{"nativeSrc":"730:39:3","nodeType":"YulAssignment","src":"730:39:3","value":{"arguments":[{"name":"headStart","nativeSrc":"759:9:3","nodeType":"YulIdentifier","src":"759:9:3"}],"functionName":{"name":"abi_decode_address","nativeSrc":"740:18:3","nodeType":"YulIdentifier","src":"740:18:3"},"nativeSrc":"740:29:3","nodeType":"YulFunctionCall","src":"740:29:3"},"variableNames":[{"name":"value0","nativeSrc":"730:6:3","nodeType":"YulIdentifier","src":"730:6:3"}]},{"nativeSrc":"778:45:3","nodeType":"YulVariableDeclaration","src":"778:45:3","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"808:9:3","nodeType":"YulIdentifier","src":"808:9:3"},{"kind":"number","nativeSrc":"819:2:3","nodeType":"YulLiteral","src":"819:2:3","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"804:3:3","nodeType":"YulIdentifier","src":"804:3:3"},"nativeSrc":"804:18:3","nodeType":"YulFunctionCall","src":"804:18:3"}],"functionName":{"name":"calldataload","nativeSrc":"791:12:3","nodeType":"YulIdentifier","src":"791:12:3"},"nativeSrc":"791:32:3","nodeType":"YulFunctionCall","src":"791:32:3"},"variables":[{"name":"value","nativeSrc":"782:5:3","nodeType":"YulTypedName","src":"782:5:3","type":""}]},{"body":{"nativeSrc":"876:16:3","nodeType":"YulBlock","src":"876:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"885:1:3","nodeType":"YulLiteral","src":"885:1:3","type":"","value":"0"},{"kind":"number","nativeSrc":"888:1:3","nodeType":"YulLiteral","src":"888:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"878:6:3","nodeType":"YulIdentifier","src":"878:6:3"},"nativeSrc":"878:12:3","nodeType":"YulFunctionCall","src":"878:12:3"},"nativeSrc":"878:12:3","nodeType":"YulExpressionStatement","src":"878:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"845:5:3","nodeType":"YulIdentifier","src":"845:5:3"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"866:5:3","nodeType":"YulIdentifier","src":"866:5:3"}],"functionName":{"name":"iszero","nativeSrc":"859:6:3","nodeType":"YulIdentifier","src":"859:6:3"},"nativeSrc":"859:13:3","nodeType":"YulFunctionCall","src":"859:13:3"}],"functionName":{"name":"iszero","nativeSrc":"852:6:3","nodeType":"YulIdentifier","src":"852:6:3"},"nativeSrc":"852:21:3","nodeType":"YulFunctionCall","src":"852:21:3"}],"functionName":{"name":"eq","nativeSrc":"842:2:3","nodeType":"YulIdentifier","src":"842:2:3"},"nativeSrc":"842:32:3","nodeType":"YulFunctionCall","src":"842:32:3"}],"functionName":{"name":"iszero","nativeSrc":"835:6:3","nodeType":"YulIdentifier","src":"835:6:3"},"nativeSrc":"835:40:3","nodeType":"YulFunctionCall","src":"835:40:3"},"nativeSrc":"832:60:3","nodeType":"YulIf","src":"832:60:3"},{"nativeSrc":"901:15:3","nodeType":"YulAssignment","src":"901:15:3","value":{"name":"value","nativeSrc":"911:5:3","nodeType":"YulIdentifier","src":"911:5:3"},"variableNames":[{"name":"value1","nativeSrc":"901:6:3","nodeType":"YulIdentifier","src":"901:6:3"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nativeSrc":"575:347:3","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"617:9:3","nodeType":"YulTypedName","src":"617:9:3","type":""},{"name":"dataEnd","nativeSrc":"628:7:3","nodeType":"YulTypedName","src":"628:7:3","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"640:6:3","nodeType":"YulTypedName","src":"640:6:3","type":""},{"name":"value1","nativeSrc":"648:6:3","nodeType":"YulTypedName","src":"648:6:3","type":""}],"src":"575:347:3"},{"body":{"nativeSrc":"1028:102:3","nodeType":"YulBlock","src":"1028:102:3","statements":[{"nativeSrc":"1038:26:3","nodeType":"YulAssignment","src":"1038:26:3","value":{"arguments":[{"name":"headStart","nativeSrc":"1050:9:3","nodeType":"YulIdentifier","src":"1050:9:3"},{"kind":"number","nativeSrc":"1061:2:3","nodeType":"YulLiteral","src":"1061:2:3","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1046:3:3","nodeType":"YulIdentifier","src":"1046:3:3"},"nativeSrc":"1046:18:3","nodeType":"YulFunctionCall","src":"1046:18:3"},"variableNames":[{"name":"tail","nativeSrc":"1038:4:3","nodeType":"YulIdentifier","src":"1038:4:3"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1080:9:3","nodeType":"YulIdentifier","src":"1080:9:3"},{"arguments":[{"name":"value0","nativeSrc":"1095:6:3","nodeType":"YulIdentifier","src":"1095:6:3"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1111:3:3","nodeType":"YulLiteral","src":"1111:3:3","type":"","value":"160"},{"kind":"number","nativeSrc":"1116:1:3","nodeType":"YulLiteral","src":"1116:1:3","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1107:3:3","nodeType":"YulIdentifier","src":"1107:3:3"},"nativeSrc":"1107:11:3","nodeType":"YulFunctionCall","src":"1107:11:3"},{"kind":"number","nativeSrc":"1120:1:3","nodeType":"YulLiteral","src":"1120:1:3","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1103:3:3","nodeType":"YulIdentifier","src":"1103:3:3"},"nativeSrc":"1103:19:3","nodeType":"YulFunctionCall","src":"1103:19:3"}],"functionName":{"name":"and","nativeSrc":"1091:3:3","nodeType":"YulIdentifier","src":"1091:3:3"},"nativeSrc":"1091:32:3","nodeType":"YulFunctionCall","src":"1091:32:3"}],"functionName":{"name":"mstore","nativeSrc":"1073:6:3","nodeType":"YulIdentifier","src":"1073:6:3"},"nativeSrc":"1073:51:3","nodeType":"YulFunctionCall","src":"1073:51:3"},"nativeSrc":"1073:51:3","nodeType":"YulExpressionStatement","src":"1073:51:3"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"927:203:3","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"997:9:3","nodeType":"YulTypedName","src":"997:9:3","type":""},{"name":"value0","nativeSrc":"1008:6:3","nodeType":"YulTypedName","src":"1008:6:3","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1019:4:3","nodeType":"YulTypedName","src":"1019:4:3","type":""}],"src":"927:203:3"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":3,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100625760003560e01c80632003f60c14610067578063521da1c9146100a8578063715018a6146100bd5780638da5cb5b146100c5578063aa7496fc146100e0578063f2fde38b14610103575b600080fd5b61009361007536600461026d565b6001600160a01b031660009081526001602052604090205460ff1690565b60405190151581526020015b60405180910390f35b6100bb6100b636600461028f565b610116565b005b6100bb61017d565b6000546040516001600160a01b03909116815260200161009f565b6100936100ee36600461026d565b60016020526000908152604090205460ff1681565b6100bb61011136600461026d565b610191565b61011e6101d4565b6001600160a01b038216600081815260016020908152604091829020805460ff191685151590811790915591519182527fbd12340699dd296c56f871fa250ed79a9763c0f6dd8c79b03f4f73995e19a5d1910160405180910390a25050565b6101856101d4565b61018f6000610201565b565b6101996101d4565b6001600160a01b0381166101c857604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6101d181610201565b50565b6000546001600160a01b0316331461018f5760405163118cdaa760e01b81523360048201526024016101bf565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461026857600080fd5b919050565b60006020828403121561027f57600080fd5b61028882610251565b9392505050565b600080604083850312156102a257600080fd5b6102ab83610251565b9150602083013580151581146102c057600080fd5b80915050925092905056fea2646970667358221220cf59a2e123b28d38fbdaa1a313f9e182e8831c11b2b34165af3541c89c11a9bd64736f6c634300081e0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2003F60C EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x521DA1C9 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0xAA7496FC EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x103 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93 PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0x26D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0xB6 CALLDATASIZE PUSH1 0x4 PUSH2 0x28F JUMP JUMPDEST PUSH2 0x116 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBB PUSH2 0x17D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9F JUMP JUMPDEST PUSH2 0x93 PUSH2 0xEE CALLDATASIZE PUSH1 0x4 PUSH2 0x26D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xBB PUSH2 0x111 CALLDATASIZE PUSH1 0x4 PUSH2 0x26D JUMP JUMPDEST PUSH2 0x191 JUMP JUMPDEST PUSH2 0x11E PUSH2 0x1D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xBD12340699DD296C56F871FA250ED79A9763C0F6DD8C79B03F4F73995E19A5D1 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x185 PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0x18F PUSH1 0x0 PUSH2 0x201 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x199 PUSH2 0x1D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1C8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D1 DUP2 PUSH2 0x201 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x18F JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1BF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x288 DUP3 PUSH2 0x251 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2AB DUP4 PUSH2 0x251 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF MSIZE LOG2 RJUMPI 0x23B2 DUP14 CODESIZE EXTSTATICCALL 0xDA LOG1 LOG3 SGT EXTDELEGATECALL RJUMPI 0x82E8 DUP4 SHR GT 0xB2 0xB3 COINBASE PUSH6 0xAF3541C89C11 0xA9 0xBD PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ","sourceMap":"208:879:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;959:126;;;;;;:::i;:::-;-1:-1:-1;;;;;1051:27:2;1028:4;1051:27;;;:17;:27;;;;;;;;;959:126;;;;548:14:3;;541:22;523:41;;511:2;496:18;959:126:2;;;;;;;;597:191;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;:::i;1638:85::-;1684:7;1710:6;1638:85;;-1:-1:-1;;;;;1710:6:0;;;1073:51:3;;1061:2;1046:18;1638:85:0;927:203:3;249:49:2;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2543:215:0;;;;;;:::i;:::-;;:::i;597:191:2:-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;692:27:2;::::1;;::::0;;;:17:::1;:27;::::0;;;;;;;;:38;;-1:-1:-1;;692:38:2::1;::::0;::::1;;::::0;;::::1;::::0;;;745:36;;523:41:3;;;745:36:2::1;::::0;496:18:3;745:36:2::1;;;;;;;597:191:::0;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2543:215::-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;1073:51:3::0;1046:18;;2672:31:0::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:1;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:1;1901:40:0;;;1073:51:3;1046:18;;1901:40:0;927:203:3;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:173:3:-;82:20;;-1:-1:-1;;;;;131:31:3;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:3:o;575:347::-;640:6;648;701:2;689:9;680:7;676:23;672:32;669:52;;;717:1;714;707:12;669:52;740:29;759:9;740:29;:::i;:::-;730:39;;819:2;808:9;804:18;791:32;866:5;859:13;852:21;845:5;842:32;832:60;;888:1;885;878:12;832:60;911:5;901:15;;;575:347;;;;;:::o"},"methodIdentifiers":{"isMerchantVerified(address)":"2003f60c","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setMerchantVerification(address,bool)":"521da1c9","transferOwnership(address)":"f2fde38b","verifiedMerchants(address)":"aa7496fc"}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"merchant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"name\":\"MerchantVerified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"merchant\",\"type\":\"address\"}],\"name\":\"isMerchantVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"merchant\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"name\":\"setMerchantVerification\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"verifiedMerchants\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A simple contract to test @selfxyz/ package integration\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"isMerchantVerified(address)\":{\"details\":\"Check if a merchant is verified\",\"params\":{\"merchant\":\"The merchant address to check\"},\"returns\":{\"_0\":\"True if the merchant is verified\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setMerchantVerification(address,bool)\":{\"details\":\"Set verification status for a merchant\",\"params\":{\"merchant\":\"The merchant address to verify\",\"verified\":\"The verification status\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"SimpleSelfTest\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleSelfTest.sol\":\"SimpleSelfTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/SimpleSelfTest.sol\":{\"keccak256\":\"0x35cde09cafea15347ad69801aeae1cacec8108d55ef4873b7f938108e8ad2824\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://026fac8f6698f92af8bc4e3f57f4391ab9f9759494b9d719bcf0e1ac180744e1\",\"dweb:/ipfs/QmWfHkcywQyEazfPpB758RLUdBuCK8UTYgp29aS4QYaDc4\"]}},\"version\":1}"}}}}}